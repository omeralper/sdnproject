---
swagger: "2.0"
info:
  description: "Bu dokümanda Milat API v1.4.3 veri yapılarının tanımları bulunmaktadı\
    r."
  version: "1.4.3"
  title: "Milat API v1.4.3 Tanımları"
  termsOfService: "Copyright 2016 Argela Inc. Tüm hakları saklıdır."
  contact:
    name: "Argela R&D Milat"
    url: "http://milat.argela.com.tr"
    email: "milat@argela.com.tr"
  license:
    name: "Argela Software Licence"
    url: "http://milat.argela.com.tr/licence.txt"
basePath: "/prognetnm/api/1.4.3"
tags:
- name: "Log"
  description: "Günlük(Loglama) İşlemleri"
- name: "LogNM"
  description: "Günlük(Loglama) İşlemleri (Prognet-NM)"
- name: "Topology"
  description: "Topoloji Yönetim İşlemleri"
- name: "Stats"
  description: "İstatistiksel İşlemler"
- name: "AAARoles"
  description: "Rol Yönetim İşlemleri"
  x-dto: "RoleDTO"
- name: "AAAUsers"
  description: "Kullanıcı Yönetim İşlemleri"
- name: "AAAPermissions"
  description: "Yetki Yönetim İşlemleri"
  x-dto: "PermDTO"
- name: "Flows"
  description: "Akış Yönetim İşlemleri"
- name: "OVSDB"
  description: "OVSDB Kontrolcü Fonksiyonları"
- name: "Paths"
  description: "Patika yönetim İşlemleri"
- name: "PrognetVersionList"
  description: "Prognet Uygulama Versiyon Bilgileri"
- name: "Mvtn"
  description: "Sanal Ağ İşlemler"
- name: "NacGroup"
  description: "NAC Grup Yönetim İşlemleri"
- name: "NacUser"
  description: "Son Kullanıcı Yönetim İşlemleri"
- name: "NacUserDevice"
  description: "Son kullanıcı Cihaz Atama işlemleri"
- name: "NacDevice"
  description: "Ağ Envanter - Cihaz Yönetim İşlemleri"
- name: "AAAServer"
  description: "AAA Sunucu İşlemleri"
- name: "Alarm"
  description: "Alarm işlemleri"
- name: "TSDB"
  description: "metrikler"
- name: "Policy"
  description: "Politika İşlemler"
- name: "Meter"
  description: "Meter İşlemler"
- name: "flowstats"
  description: "5li akış istatistikleri"
- name: "ProactivePathPolicy"
  description: "Proaktif Patika Politika İşlemleri"
- name: "MvtnRequest"
  description: "Sanal Ağ Talep İşlemler"
- name: "Config"
  description: "Konfigürasyon İşlemler"
- name: "Dhcp"
  description: "DHCP Konfigürasyon İşlemler"
- name: "Cluster"
  description: "Cluster İşlemler"
- name: "Controller"
  description: "Controller İşlemler"
- name: "Feature"
  description: "Feature İşlemler"
- name: "PrognetDevice"
  description: "OvSwitch ile ilgili konfigürasyon işlemleri."
- name: "EdrListAndSearch"
  description: "EDR Arama ve Listeleme İşlemleri"
- name: "Monitor"
  description: "Monitor Konfigürasyon İşlemleri"
- name: "NFV"
  description: "Ağ Servis Tanımları işlemleri"
- name: "IpLocation"
  description: "IP Bazlı Lokasyon İşlemleri"
- name: "WanPortInfo"
  description: "Geniş Alan Ağ İşlemleri"
- name: "Sdnip"
  description: "Prognet BGP Konfigurasyon İşlemleri"
- name: "Sfc"
  description: "Service Function Chain İşlemleri"
- name: "WAN_DOMAIN"
  description: "Alan Tanımlama İşlemleri"
- name: "EmergencyPolicy"
  description: "Acil Durum Politikaları İşlemleri"
- name: "SdnipPolicy"
  description: "Prognet BGP Konfigurasyon İşlemleri"
schemes:
- "http"
- "https"
- "ws"
- "wss"
consumes:
- "application/json"
produces:
- "application/json"
paths:
  /alrm/alarm/definition/get:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamalarının alındığı fonksiyon."
      operationId: "alarmDefinitionGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-get: "true"
  /alrm/alarm/definition/list:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamalarının listelendiği fonksiyon."
      operationId: "alarmDefinitionListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-list: "true"
  /alrm/alarm/definition/update:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamalarının güncellendiği fonksiyon."
      operationId: "alarmDefinitionUpdatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/AlarmRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-any: "update"
  /alrm/alarm/edit:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm detaylarının alındığı fonksiyon."
      operationId: "alarmEditPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/AlarmRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-any: "edit"
  /alrm/alarm/get:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm detaylarının alındığı fonksiyon."
      operationId: "alarmGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-get: "true"
  /alrm/alarm/list:
    post:
      tags:
      - "Alarm"
      summary: "Sistemdeki tüm alarm'ın listesini dönen fonksiyon."
      operationId: "alarmListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-list: "true"
  /alrm/alarm/log/get:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm detaylarının alındığı fonksiyon."
      operationId: "alarmLogGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-get: "true"
  /alrm/alarm/log/list:
    post:
      tags:
      - "Alarm"
      summary: "Sistemdeki tüm alarm'ın listesini dönen fonksiyon."
      operationId: "alarmLogListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmDTO"
      x-operation-list: "true"
  /alrm/alarm/log/search:
    post:
      tags:
      - "Alarm"
      summary: "Sistemdeki alarm verileri arasında arama yapmak için kullanılan fonksiyon."
      operationId: "alarmLogSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-operation-search: "true"
      x-dto: "AlarmDTO"
  /alrm/alarm/notification/delete:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm bildirim konfigürasyonlarının silindiğ\
        i fonksiyon."
      operationId: "alarmNotificationDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmNotificationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-operation-delete: "true"
      x-dto: "AlarmNotificationDTO"
  /alrm/alarm/notification/get:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamasının alındığı fonksiyon."
      operationId: "alarmNotificationGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmNotificationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmNotificationDTO"
      x-operation-get: "true"
  /alrm/alarm/notification/list:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamalarının listelendiği fonksiyon."
      operationId: "alarmNotificationListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmNotificationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmNotificationDTO"
      x-operation-list: "true"
  /alrm/alarm/notification/save:
    post:
      tags:
      - "Alarm"
      summary: "ID değeri kullanılarak alarm tanımlamalarının güncellendiği/kaydedildiğ\
        i fonksiyon."
      operationId: "alarmNotificationSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/AlarmNotificationRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmNotificationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-dto: "AlarmNotificationDTO"
      x-operation-save: "true"
  /alrm/alarm/search:
    post:
      tags:
      - "Alarm"
      summary: "Sistemdeki alarm verileri arasında arama yapmak için kullanılan fonksiyon."
      operationId: "alarmSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AlarmListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Alarm"
      x-operation-search: "true"
      x-dto: "AlarmDTO"
  /capi/aaa/app/delete:
    post:
      tags:
      - "Apps"
      summary: "Uygulama verilerinin silinmesini sağlayan fonksiyon."
      operationId: "aaaAppDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AppResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Apps"
      x-operation-delete: "true"
      x-dto: "AppDTO"
  /capi/aaa/app/get:
    post:
      tags:
      - "Apps"
      summary: "ID değeri kullanılarak uygulama detaylarının alındığı fonksiyon."
      operationId: "aaaAppGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AppResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Apps"
      x-dto: "AppDTO"
      x-operation-get: "true"
  /capi/aaa/app/list:
    post:
      tags:
      - "Apps"
      summary: "Sistemdeki tüm uygulamaların listesini dönen fonksiyon."
      operationId: "aaaAppListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AppListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Apps"
      x-dto: "AppDTO"
      x-operation-list: "true"
  /capi/aaa/app/save:
    post:
      tags:
      - "Apps"
      summary: "Uygulama verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Uygulama verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "aaaAppSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Uygulama veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/AppRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AppResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Apps"
      x-dto: "AppDTO"
      x-operation-save: "true"
  /capi/aaa/app/search:
    post:
      tags:
      - "Apps"
      summary: "Sistemdeki uygulama verileri arasında arama yapmak için kullanılan\
        \ fonksiyon."
      operationId: "aaaAppSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AppListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Apps"
      x-operation-search: "true"
      x-dto: "AppDTO"
  /capi/aaa/login:
    post:
      tags:
      - "AAA"
      summary: "Sisteme giriş yapmak için kullanılacak fonksiyondur."
      operationId: "aaaLoginPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Giriş için gerekli verilerin bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/LoginRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LoginResponse"
        300:
          description: "Giriş işlemi sırasında Hata/Uyarılar (ERROR) durumları oluş\
            ması durumunda bu şekilde geri dönüş olacaktır.\n\nBu durumda 'errorInfo'\
            \ alanında aşağıdaki değerlerden biri dönülecektir.\n\n  | code  | message\
            \                |\n  |:-----:|:-----------------------|\n  | 100   |\
            \ Giriş işlemi başarısız |\n  | 200   | Hesap askıya alınmış   |\n  |\
            \ 300   | Hesap engellenmiş      |\n"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAA"
      x-dto: "UserDTO"
      x-operation-any: "login"
  /capi/aaa/logout:
    post:
      tags:
      - "AAA"
      summary: "Sistemden çıkış yapmak için kullanılacak fonksiyondur."
      operationId: "aaaLogoutPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Çıkış için session ID değeri kullanılacaktır. Boş değer gönderilmesi\
          \ durumunda mevcut session'dan çıkış yapılacaktır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAA"
      x-dto: "UserDTO"
      x-operation-any: "logout"
  /capi/aaa/lostpwd:
    post:
      tags:
      - "AAA"
      summary: "Kullanıcıların şifrelerini unutmaları durumunda kullanabilecekleri\
        \ fonksiyondur."
      description: "Kullanıcıların şifrelerini unutmaları durumunda şifrelerini sı\
        fırlamak için bu fonksiyon kullanılacaktır.\n\nBu fonksiyonun kritik özelliğ\
        i, belirtilen kullanıcı adı sistemde _**olmasa bile hata vermemelidir**_.\n\
        Kullanıcı adının olması durumunda ise kullanıcıya e-posta ile şifre değiş\
        tirme ekranına yönlendirilmelidir.\n"
      operationId: "aaaLostpwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/UsernameRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAA"
      x-dto: "UserDTO"
      x-operation-any: "lostpwd"
  /capi/aaa/perm/get:
    post:
      tags:
      - "AAAPermissions"
      summary: "ID değeri kullanılarak yetki detaylarının alındığı fonksiyon."
      operationId: "aaaPermGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PermResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAPermissions"
      x-dto: "PermDTO"
      x-operation-get: "true"
  /capi/aaa/perm/list:
    post:
      tags:
      - "AAAPermissions"
      summary: "Sistemdeki tüm yetkilerin listesini dönen fonksiyon."
      operationId: "aaaPermListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PermListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAPermissions"
      x-dto: "PermDTO"
      x-operation-list: "true"
  /capi/aaa/perm/search:
    post:
      tags:
      - "AAAPermissions"
      summary: "Sistemdeki yetki verileri arasında arama yapmak için kullanılan fonksiyon."
      operationId: "aaaPermSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PermListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAPermissions"
      x-operation-search: "true"
      x-dto: "PermDTO"
  /capi/aaa/ping:
    post:
      tags:
      - "AAA"
      summary: "Sistemde HTTP session'ı açık tutmak için kullanılan fonksiyondur."
      operationId: "aaaPingPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Ping için kullanılacak generic response. Boş gönderilebilir."
        required: false
        schema:
          $ref: "#/definitions/ApiCoreRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ApiCoreResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAA"
      x-dto: "UserDTO"
      x-operation-any: "ping"
  /capi/aaa/role/delete:
    post:
      tags:
      - "AAARoles"
      summary: "Rol verilerinin silinmesini sağlayan fonksiyon."
      operationId: "aaaRoleDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/RoleResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAARoles"
      x-operation-delete: "true"
      x-dto: "RoleDTO"
  /capi/aaa/role/get:
    post:
      tags:
      - "AAARoles"
      summary: "ID değeri kullanılarak Rol detaylarının alındığı fonksiyon."
      operationId: "aaaRoleGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/RoleResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAARoles"
      x-dto: "RoleDTO"
      x-operation-get: "true"
  /capi/aaa/role/list:
    post:
      tags:
      - "AAARoles"
      summary: "Sistemdeki tüm rollerin listesini dönen fonksiyon."
      operationId: "aaaRoleListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/RoleListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAARoles"
      x-dto: "RoleDTO"
      x-operation-list: "true"
  /capi/aaa/role/save:
    post:
      tags:
      - "AAARoles"
      summary: "Rol verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Rol verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "aaaRoleSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Rol veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/RoleRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/RoleResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAARoles"
      x-dto: "RoleDTO"
      x-operation-save: "true"
  /capi/aaa/role/search:
    post:
      tags:
      - "AAARoles"
      summary: "Sistemdeki rol verileri arasında arama yapmak için kullanılan fonksiyon."
      operationId: "aaaRoleSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/RoleListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAARoles"
      x-operation-search: "true"
      x-dto: "RoleDTO"
  /capi/aaa/user/changepwd:
    post:
      tags:
      - "AAAUsers"
      summary: "Kullanıcıların kendi şifrelerini değiştirmek için kullanacakları fonksiyondur."
      operationId: "aaaUserChangepwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Şifre değişikliği isteği."
        required: true
        schema:
          $ref: "#/definitions/ChangePwdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-any: "changepwd"
  /capi/aaa/user/checkusr:
    post:
      tags:
      - "AAAUsers"
      summary: "Bir kullanıcı adının uygun olup olmadığını kontrol eden fonksiyon.\
        \ Yeni kullanıcı tanımlarken kullanılacaktır."
      operationId: "aaaUserCheckusrPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrol edilecek kullanıcı adı isteği."
        required: true
        schema:
          $ref: "#/definitions/UsernameRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-any: "checkusr"
  /capi/aaa/user/delete:
    post:
      tags:
      - "AAAUsers"
      summary: "Kullanıcı verilerinin silinmesini sağlayan fonksiyon."
      operationId: "aaaUserDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-operation-delete: "true"
      x-dto: "UserDTO"
  /capi/aaa/user/get:
    post:
      tags:
      - "AAAUsers"
      summary: "ID değeri kullanılarak kullanıcı detaylarının alındığı fonksiyon."
      operationId: "aaaUserGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-get: "true"
  /capi/aaa/user/list:
    post:
      tags:
      - "AAAUsers"
      summary: "Sistemdeki tüm kullanıcıların listesini dönen fonksiyon."
      operationId: "aaaUserListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UserListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-list: "true"
  /capi/aaa/user/save:
    post:
      tags:
      - "AAAUsers"
      summary: "Kullanıcı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Kullanıcı verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "aaaUserSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kullanıcı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/UserRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-save: "true"
  /capi/aaa/user/search:
    post:
      tags:
      - "AAAUsers"
      summary: "Sistemdeki kullanıcı verileri arasında arama yapmak için kullanılan\
        \ fonksiyon."
      operationId: "aaaUserSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UserListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-operation-search: "true"
      x-dto: "UserDTO"
  /capi/aaa/user/setpwd:
    post:
      tags:
      - "AAAUsers"
      summary: "Bir kullanıcının şifresini değiştirmek için kullanılan fonksiyon."
      operationId: "aaaUserSetpwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Şifre değişikliği isteği."
        required: true
        schema:
          $ref: "#/definitions/SetPwdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAUsers"
      x-dto: "UserDTO"
      x-operation-any: "setpwd"
  /capi/config/configDefinition/delete:
    post:
      tags:
      - "Config"
      summary: "İstenen konfigürasyon tanımının silinmesini saglayan fonksiyon."
      operationId: "configConfigDefinitionDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ConfigDefinitionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-operation-delete: "true"
      x-dto: "ConfigDefinitionDTO"
  /capi/config/configDefinition/get:
    post:
      tags:
      - "Config"
      summary: "ID değeri kullanılarak konfigürasyon tanımı detaylarının alındığı\
        \ fonksiyon."
      operationId: "configConfigDefinitionGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ConfigDefinitionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ConfigDefinitionDTO"
      x-operation-get: "true"
  /capi/config/configDefinition/list:
    post:
      tags:
      - "Config"
      summary: "Sistemdeki tüm konfigürasyon tanımlarının listesini dönen fonksiyon."
      operationId: "configConfigDefinitionListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ConfigDefinitionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ConfigDefinitionDTO"
      x-operation-list: "true"
  /capi/config/configDefinition/save:
    post:
      tags:
      - "Config"
      summary: "Konfigürasyon tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Konfigürasyon tanımı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "configConfigDefinitionSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Konfigürasyon tanımı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ConfigDefinitionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ConfigDefinitionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ConfigDefinitionDTO"
      x-operation-save: "true"
  /capi/config/moduleNodeConfig/delete:
    post:
      tags:
      - "Config"
      summary: "İstenen trafik sınıfı'ın silinmesini saglayan fonksiyon."
      operationId: "configModuleNodeConfigDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ModuleNodeConfigResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-operation-delete: "true"
      x-dto: "ModuleNodeConfigDTO"
  /capi/config/moduleNodeConfig/get:
    post:
      tags:
      - "Config"
      summary: "ID değeri kullanılarak trafik sınıfı detaylarının alındığı fonksiyon."
      operationId: "configModuleNodeConfigGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ModuleNodeConfigResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ModuleNodeConfigDTO"
      x-operation-get: "true"
  /capi/config/moduleNodeConfig/list:
    post:
      tags:
      - "Config"
      summary: "Sistemdeki tüm trafik sınıfları'ın listesini dönen fonksiyon."
      operationId: "configModuleNodeConfigListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ModuleNodeConfigListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ModuleNodeConfigListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ModuleNodeConfigDTO"
      x-operation-list: "true"
  /capi/config/moduleNodeConfig/save:
    post:
      tags:
      - "Config"
      summary: "Modül node konfigürasyonları verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Modül node konfigürasyonları verilerinin saklanmasını sağlayan\
        \ fonksiyondur. (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalı\
        dır."
      operationId: "configModuleNodeConfigSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Modül node konfigürasyonları veri transfer modelini taşıyan\
          \ istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ModuleNodeConfigRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ModuleNodeConfigResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ModuleNodeConfigDTO"
      x-operation-save: "true"
  /capi/config/moduleNodes/list:
    post:
      tags:
      - "Config"
      summary: "Sistemdeki tüm modül ve ilgili modüle ait küme elemanları listesini\
        \ dönen fonksiyon."
      operationId: "configModuleNodesListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ModuleNodesListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Config"
      x-dto: "ModuleNodesDTO"
      x-operation-list: "true"
  /capi/log/levelList:
    post:
      tags:
      - "LogNM"
      summary: "Günlük mesajların seviyelerinin kullanıcı arayüzü tarafından listelenmesi\
        \ için kullanılır. (prognet-nm sürümü)"
      operationId: "logLevelListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Günlük verilerin seviyelerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/LogLevelListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogLevelListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogLevelListResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "LogNM"
      x-dto: "LogLevelDTO"
      x-operation-list: "true"
  /capi/log/levelUpdate:
    post:
      tags:
      - "LogNM"
      summary: "Günlük mesajların seviyelerinin kullanıcı arayüzü tarafından değiş\
        tirilebilmesi için kullanılır. (prognet-nm sürümü)"
      operationId: "logLevelUpdatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Günlük verilerin seviyelerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/LogLevelRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogLevelResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogLevelResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "LogNM"
      x-dto: "LogLevelDTO"
      x-operation-savelist: "true"
  /capi/pki/nodeCert/create:
    post:
      tags:
      - "Pki"
      summary: "Sertifika üretmeyi sağlayan fonksiyon."
      operationId: "pkiNodeCertCreatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sertifika isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/CertificateRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/CertificateResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Pki"
      x-dto: "CertificateDTO"
      x-operation-any: "create"
  /capi/version/list:
    post:
      tags:
      - "PrognetVersionList"
      summary: "Prognet kontrolcü versiyon bilgilerini veren servistir.."
      operationId: "versionListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Hangi kontrolcü için bilgi istendiğini tutar."
        required: true
        schema:
          $ref: "#/definitions/VersionListRequest"
      responses:
        200:
          description: "İstenen kontrolcünün versiyon bilgisini tutar."
          schema:
            $ref: "#/definitions/VersionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetVersionList"
      x-dto: "VersionInfo"
      x-operation-list: "true"
  /ctrl/cluster/search:
    post:
      tags:
      - "Cluster"
      summary: "Sistemdeki tüm küme kapsamlarının listesini döner."
      operationId: "clusterSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Küme kapsamlarını listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ClusterListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Cluster"
      x-operation-search: "true"
      x-dto: "ClusterDTO"
  /ctrl/controller/device/assign:
    post:
      tags:
      - "PrognetDevice"
      summary: "OVS veya OpenFlow cihazlar ile kontrolcüleri birbirine atama metodu."
      operationId: "controllerDeviceAssignPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID'si belirtilen OVS - OpenFlow cihazları veya kontrolcüleri\
          \ atar."
        required: true
        schema:
          $ref: "#/definitions/PrognetDeviceRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-dto: "SwitchDTO"
      x-operation-any: "assign"
  /ctrl/controller/device/search:
    post:
      tags:
      - "Controller"
      summary: "Kontrolcüye bağlı OVS ve OpenFlow cihazların listesini döner."
      operationId: "controllerDeviceSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrolcüye bağlı cihazları listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Controller"
      x-operation-search: "true"
      x-dto: "SwitchDTO"
  /ctrl/controller/device/unassign:
    post:
      tags:
      - "PrognetDevice"
      summary: "OVS veya OpenFlow cihazlar ile kontrolcülerin atamalarını kaldırma\
        \ metodu."
      operationId: "controllerDeviceUnassignPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID'si belirtilen OVS - OpenFlow cihazları veya kontrolcülerin\
          \ atamalarını kaldırır."
        required: true
        schema:
          $ref: "#/definitions/PrognetDeviceRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-dto: "SwitchDTO"
      x-operation-any: "unassign"
  /ctrl/controller/get:
    post:
      tags:
      - "Controller"
      summary: "Kontrolcü düğümü kapsamının ayrıntılarını döker."
      operationId: "controllerGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrolcü düğümü isteğinin ayrıntılarının bulunduğu veri yapı\
          sıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerNodeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Controller"
      x-dto: "ControllerNodeDTO"
      x-operation-any: "ControllerNodeGet"
  /ctrl/controller/halt:
    post:
      tags:
      - "Controller"
      summary: "Kontrolcüyü kapatır."
      operationId: "controllerHaltPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrolcü numarasını içeren istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerNodeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Controller"
      x-dto: "ControllerNodeDTO"
      x-operation-any: "halt"
  /ctrl/controller/save:
    post:
      tags:
      - "Controller"
      summary: "Kontrolcü düğümü kapsam verilerinin saklanmasını ve güncellenmesini\
        \ sağlar."
      operationId: "controllerSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrolcü düğümü kapsam veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/ControllerNodeRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerNodeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Controller"
      x-dto: "ControllerNodeDTO"
      x-operation-save: "true"
  /ctrl/controller/search:
    post:
      tags:
      - "Controller"
      summary: "Sistemdeki tüm Kontrolcü düğümü kapsamlarının listesini döner."
      operationId: "controllerSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrolcü düğümü kapsamlarını listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerNodeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Controller"
      x-operation-search: "true"
      x-dto: "ControllerNodeDTO"
  /ctrl/device/controller/search:
    post:
      tags:
      - "PrognetDevice"
      summary: "Gönderilen OVS veya OpenFlow Cihazın bağlı olduğu kontrolcülerin listesini\
        \ döner."
      operationId: "deviceControllerSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Cihaza bağlı kontrolcüleri listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerNodeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-operation-search: "true"
      x-dto: null
  /ctrl/device/delete:
    post:
      tags:
      - "PrognetDevice"
      summary: "ID'si belirtilen OVS veya OpenFlow cihazı siler."
      operationId: "deviceDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-operation-delete: "true"
      x-dto: "SwitchDTO"
  /ctrl/device/get:
    post:
      tags:
      - "PrognetDevice"
      summary: "ID numarası verilen OVS ve OpenFlow anahtarlayıcıyı getirir."
      operationId: "deviceGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Anahtarlayıcı get isteğinin ayrıntılarının bulunduğu veri yapı\
          sıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-dto: "SwitchDTO"
      x-operation-get: "true"
  /ctrl/device/group:
    post:
      tags:
      - "PrognetDevice"
      summary: "OVS veya OpenFlow cihazlara toplu olarak grup atama metodu."
      operationId: "deviceGroupPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID'si belirtilen OVS - OpenFlow cihazlara gruplarını atar."
        required: true
        schema:
          $ref: "#/definitions/PrognetDeviceListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-dto: "SwitchDTO"
      x-operation-any: "group"
  /ctrl/device/save:
    post:
      tags:
      - "PrognetDevice"
      summary: "Anahtarlayıcı ekleme metodu."
      operationId: "deviceSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "OVS ve OpenFlow Anahtarlayıcıların ekleme isteğinin belirtildiğ\
          i veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/PrognetDeviceRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-dto: "SwitchDTO"
      x-operation-save: "true"
  /ctrl/device/search:
    post:
      tags:
      - "PrognetDevice"
      summary: "Sistemdeki OVS ve OpenFlow cihazların listesini döner."
      operationId: "deviceSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sistemdeki cihazları listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/PrognetDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "PrognetDevice"
      x-operation-search: "true"
      x-dto: "SwitchDTO"
  /ctrl/emergencyPolicy/delete:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Acil durum politikasının silinmesi için kullanılan fonksiyondur"
      description: "Acil durum politikasının silinmesi için sunucuya yapılan servis\
        \ modelidir."
      operationId: "emergencyPolicyDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri silme isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-operation-delete: "true"
      x-dto: "EmercencyPolicyDTO"
  /ctrl/emergencyPolicy/get:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Acil durum politikasının alınması için kullanılan fonksiyondur"
      description: "Acil durum politikasının alınması için sunucuya yapılan servis\
        \ modelidir."
      operationId: "emergencyPolicyGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-dto: "EmercencyPolicyDTO"
      x-operation-get: "true"
  /ctrl/emergencyPolicy/list:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Acil durum politika listesinin alınması için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulama listesinin alınması için sunucuya yapı\
        lan servis modelidir."
      operationId: "emergencyPolicyListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-dto: "EmercencyPolicyDTO"
      x-operation-list: "true"
  /ctrl/emergencyPolicy/save:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Acil durum politikalarının saklanması için gereken fonksiyondur."
      description: "Acil durum politikalarının saklanması için gereken fonksiyondur."
      operationId: "emergencyPolicySavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Acil durum politikaları modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/EmergencyPolicyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-dto: "EmercencyPolicyDTO"
      x-operation-save: "true"
  /ctrl/emergencyPolicy/search:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Acil durum politikaları arasında arama için kullanılan fonksiyondur"
      description: " Acil durum politikaları arasında arama yapılması için sunucuya\
        \ yapılan servis modelidir."
      operationId: "emergencyPolicySearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri silme isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-operation-search: "true"
      x-dto: "EmercencyPolicyDTO"
  /ctrl/emergencyPolicy/startStopVnf:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Idsi gönderilen acil durum politikalarını kullanmak için"
      description: "Idsi gönderilen acil durum politikalarını kullanmak için"
      operationId: "emergencyPolicyStartStopVnfPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-dto: "EmercencyPolicyDTO"
      x-operation-any: "startStopVnf"
  /ctrl/emergencyPolicy/stopProcess:
    post:
      tags:
      - "EmergencyPolicy"
      summary: "Idsi bilenen acil durum politikasını çalıştırmamak için"
      description: "Idsi bilenen acil durum politikasını çalıştırmamak için"
      operationId: "emergencyPolicyStopProcessPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "İstek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EmergencyPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EmergencyPolicy"
      x-dto: "EmercencyPolicyDTO"
      x-operation-any: "stopProcess"
  /ctrl/endUserApp/delete:
    post:
      tags:
      - "Policy"
      summary: "Son kullanıcı uygulamasının silinmesi için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulamasının silinmesi için sunucuya yapılan servis\
        \ modelidir."
      operationId: "endUserAppDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri silme isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EndUserApplicationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-delete: "true"
      x-dto: "EndUserApplicationDTO"
  /ctrl/endUserApp/get:
    post:
      tags:
      - "Policy"
      summary: "Son kullanıcı uygulamasının alınması için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulamasının alınması için sunucuya yapılan servis\
        \ modelidir."
      operationId: "endUserAppGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EndUserApplicationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "EndUserApplicationDTO"
      x-operation-get: "true"
  /ctrl/endUserApp/list:
    post:
      tags:
      - "Policy"
      summary: "Son kullanıcı uygulama listesinin alınması için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulama listesinin alınması için sunucuya yapı\
        lan servis modelidir."
      operationId: "endUserAppListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EndUserApplicationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "EndUserApplicationDTO"
      x-operation-list: "true"
  /ctrl/endUserApp/save:
    post:
      tags:
      - "Policy"
      summary: "Son kullanıcı uygulamasının saklanması için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulamasının saklanması için sunucuya yapılan servis\
        \ modelidir."
      operationId: "endUserAppSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Son kullanıcı uygulama modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/EndUserApplicationRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EndUserApplicationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "EndUserApplicationDTO"
      x-operation-save: "true"
  /ctrl/endUserApp/search:
    post:
      tags:
      - "Policy"
      summary: "Son kullanıcı uygulamaları arasında arama için kullanılan fonksiyondur"
      description: "Son kullanıcı uygulamaları arasında arama yapılması için sunucuya\
        \ yapılan servis modelidir."
      operationId: "endUserAppSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri silme isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EndUserApplicationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-search: "true"
      x-dto: "EndUserApplicationDTO"
  /ctrl/feature/batch/save:
    post:
      tags:
      - "Feature"
      summary: "Birden fazla küme özelliklerinin durumlarının güncellenmesini sağ\
        lar."
      operationId: "featureBatchSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Birden fazla küme özelliklerinin durum güncelleme işlemi iç\
          in kullanılan istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/FeatureListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/FeatureListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Feature"
      x-dto: "FeatureDTO"
      x-operation-save: "true"
  /ctrl/feature/save:
    post:
      tags:
      - "Feature"
      summary: "Küme özelliklerinin düğümlerinin güncellenmesini sağlar."
      operationId: "featureSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Küme özelliklerinin durum güncelleme işlemi için kullanılan\
          \ istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/FeatureRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/FeatureResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Feature"
      x-dto: "FeatureDTO"
      x-operation-save: "true"
  /ctrl/feature/search:
    post:
      tags:
      - "Feature"
      summary: "Sistemdeki tüm özellik kapsamlarının listesini döner."
      operationId: "featureSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Özellik kapsamlarını listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/FeatureListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Feature"
      x-operation-search: "true"
      x-dto: "FeatureDTO"
  /ctrl/flow/delete:
    post:
      tags:
      - "Flows"
      summary: "Bir anahtarlayıcı üzerindeki proaktif akışların silinmesi için kullanı\
        lan fonksiyon."
      operationId: "flowDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID değeri ile belirtilen anahtarlayıcı ve akış için silme parametrelerinin\
          \ belirtildiği veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/FlowDeleteRequest"
      responses:
        200:
          description: "Başarılı İşlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/FlowResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Flows"
      x-operation-delete: "true"
      x-dto: "FlowDTO"
  /ctrl/flow/list:
    post:
      tags:
      - "Flows"
      summary: "Bir anahtarlayıcı üzerindeki tüm akışların listesini dönen fonksiyon."
      operationId: "flowListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID değeri ile belirtilen anahtarlayıcı için listeleme parametreleri."
        required: true
        schema:
          $ref: "#/definitions/FlowListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/FlowListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Flows"
      x-dto: "FlowDTO"
      x-operation-list: "true"
  /ctrl/flow/search:
    post:
      tags:
      - "Flows"
      summary: "Bir anahtarlayıcı üzerindeki akışlar içinde arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "flowSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "ID değeri ile belirtilen anahtarlayıcı için arama parametrelerinin\
          \ belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/FlowSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/FlowListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Flows"
      x-operation-search: "true"
      x-dto: "FlowDTO"
  /ctrl/flow_stats/user:
    post:
      tags:
      - "FlowStatistics"
      summary: "5-tuple akış istatistiklerinin kullanıcıya göre sorgulanması."
      operationId: "flowStatsUserPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "İstenen kullanıcı istatistiklerinin tanımı."
        required: true
        schema:
          $ref: "#/definitions/UserFlowStatRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/FlowStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "FlowStatistics"
      x-operation-any: "user"
  /ctrl/host_stats/host:
    post:
      tags:
      - "Stats"
      summary: "Uç Birim üzerindeki istatistik verilerinin alınmasını sağlayan fonksiyon."
      operationId: "hostStatsHostPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Uç Birim ID listesini iletmek için kullanılan veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericIdListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/HostStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Stats"
      x-dto: "HostStatsDTO"
      x-operation-any: "host"
  /ctrl/ipLocation/delete:
    post:
      tags:
      - "IpLocation"
      summary: "Lokasyon tabanlı IP bilgilerinin kaydolmasını sağlayan servistir."
      operationId: "ipLocationDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Lokasyon tabanlı IP bilgisini tutar"
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/IpLocationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "IpLocation"
      x-operation-delete: "true"
      x-dto: "IpLocationDTO"
  /ctrl/ipLocation/list:
    post:
      tags:
      - "IpLocation"
      summary: "Lokasyon tabanlı IP listesinin alınması için kullanılan fonksiyondur"
      description: "IP lokasyon listesinin alınması için sunucuya yapılan servis modelidir."
      operationId: "ipLocationListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/IpLocationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "IpLocation"
      x-dto: "IpLocationDTO"
      x-operation-list: "true"
  /ctrl/ipLocation/save:
    post:
      tags:
      - "IpLocation"
      summary: "Lokasyon tabanlı IP bilgilerinin kaydolmasını sağlayan servistir."
      operationId: "ipLocationSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Lokasyon tabanlı IP bilgisini tutar"
        required: true
        schema:
          $ref: "#/definitions/IpLocationRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/IpLocationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "IpLocation"
      x-dto: "IpLocationDTO"
      x-operation-save: "true"
  /ctrl/ipLocation/search:
    post:
      tags:
      - "IpLocation"
      summary: "Lokasyon tabanlı IP listesinde arama yapılması için kullanılan fonksiyondur"
      description: "IP lokasyon listesinde arama yapılması için sunucuya yapılan servis\
        \ modelidir."
      operationId: "ipLocationSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel arama isteği yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/IpLocationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "IpLocation"
      x-operation-search: "true"
      x-dto: "IpLocationDTO"
  /ctrl/link_stats/link:
    post:
      tags:
      - "Stats"
      summary: "Bağlantı üzerindeki istatistik verilerinin alınmasını sağlayan fonksiyon."
      operationId: "linkStatsLinkPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Bağlantı ID listesini iletmek için kullanılan veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericIdListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Stats"
      x-dto: "LinkStatsDTO"
      x-operation-any: "link"
  /ctrl/log/levelList:
    post:
      tags:
      - "Log"
      summary: "Günlük mesajların seviyelerinin kullanıcı arayüzü tarafından listelenmesi\
        \ için kullanılır."
      operationId: "logLevelListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Günlük verilerin seviyelerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/LogLevelListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogLevelListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogLevelListResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Log"
      x-dto: "LogLevelDTO"
      x-operation-list: "true"
  /ctrl/log/levelUpdate:
    post:
      tags:
      - "Log"
      summary: "Günlük mesajların seviyelerinin kullanıcı arayüzü tarafından değiş\
        tirilebilmesi için kullanılır."
      operationId: "logLevelUpdatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Günlük verilerin seviyelerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/LogLevelRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogLevelResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogLevelResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Log"
      x-dto: "LogLevelDTO"
      x-operation-savelist: "true"
  /ctrl/log/save:
    post:
      tags:
      - "Log"
      summary: "Tek bir günlük mesajının arka uç’a iletilmesi için kullanılır."
      operationId: "logSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Günlük verilerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/SaveLogRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Log"
      x-dto: "LogDTO"
      x-operation-save: "true"
  /ctrl/log/saveList:
    post:
      tags:
      - "Log"
      summary: "Topluca günlük mesajlarının arka uç’a iletilmesi için kullanılır."
      operationId: "logSaveListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "requestList"
        description: "Günlük verilerinin bulunduğu veri yapısı"
        required: true
        schema:
          $ref: "#/definitions/SaveLogListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LogResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/LogResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Log"
      x-dto: "LogDTO"
      x-operation-savelist: "true"
  /ctrl/meter/list:
    post:
      tags:
      - "Meter"
      summary: "Sanal ağdaki ya da fiziksel ağdaki meterları listeleyen servis."
      operationId: "meterListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağdaki  ya da fiziksel ağdaki meterları listelemek iç\
          in kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/MeterListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MeterListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Meter"
      x-dto: "MeterDTO"
      x-operation-list: "true"
  /ctrl/meter_stats/meter:
    post:
      tags:
      - "OFmeterstats"
      summary: "OF meter istatistik verilerinin alınmasını sağlayan fonksiyon."
      operationId: "meterStatsMeterPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "OF meter kimlik listesini iletmek için kullanılan veri yapı\
          sı."
        required: true
        schema:
          $ref: "#/definitions/MeterIdListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MeterStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OFmeterstats"
      x-dto: "MeterStatsDTO"
      x-operation-any: "meter"
  /ctrl/monitor/alarmSet:
    post:
      tags:
      - "Monitor"
      summary: "Id numarası verilen ölçer için verilen alarm kurgularını (eşik değ\
        erlerinin kurulumlarını) yapar."
      operationId: "monitorAlarmSetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Alarm kurguları yapılacak ölçerin id numarasını taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/MonitorAlarmSetRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/MonitorAlarmSetResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Monitor"
      x-dto: "MonitorAlarmSetDTO"
      x-operation-any: "alarmSet"
  /ctrl/monitor/get:
    post:
      tags:
      - "Monitor"
      summary: "Kimlik (id) numaraları verilen göstergelerin değerlerini verir."
      operationId: "monitorGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "monitorValueGet isteğinin ayrıntılarının bulunduğu veri yapı\
          sıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/MonitorValueListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Monitor"
      x-dto: "MonitorValueDTO"
      x-operation-get: "true"
  /ctrl/monitor/select:
    post:
      tags:
      - "Monitor"
      summary: "Göstergeler arasında verilen kriterlere uygun olanları arayarak buldukları\
        nın bütün alanlarını döner."
      operationId: "monitorSelectPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama kriterlerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/MonitorSelectRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MonitorSelectListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Monitor"
      x-dto: "MonitorInfoDTO"
      x-operation-any: "select"
  /ctrl/mvtnRequest/changeEditStatus:
    post:
      tags:
      - "MvtnRequest"
      summary: "İstenen sanal ağ talebinin durumunu değiştirir."
      operationId: "mvtnRequestChangeEditStatusPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ taleplerinin durumlarını değiştirmek için kullanılacak\
          \ veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnEditChangeRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnEditChangeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-dto: "MvtnEditStatusDTO"
      x-operation-any: "changeEditStatus"
  /ctrl/mvtnRequest/delete:
    post:
      tags:
      - "MvtnRequest"
      summary: "Istenen talep topolojilerinin silinmesini saglayan fonksiyon."
      operationId: "mvtnRequestDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Talepteki sanal ağları silme isteğinin belirtildiği veri yapı\
          sı."
        required: true
        schema:
          $ref: "#/definitions/MvtnRequestDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-operation-delete: "true"
      x-dto: "MvtnRequestDeleteDTO"
  /ctrl/mvtnRequest/get:
    post:
      tags:
      - "MvtnRequest"
      summary: "Talep edilen ağ topolojisinin detaylarının alınması için kullanılan\
        \ fonksiyondur."
      operationId: "mvtnRequestGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Talep edilen topoloji isteğinin detaylarının bulunduğu veri\
          \ yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-dto: "TopologyDTO"
      x-operation-get: "true"
  /ctrl/mvtnRequest/get/sub:
    post:
      tags:
      - "SubTopology"
      summary: "Talep edilen sanal ağ topolojisinin fiziksel karşılığının alınması\
        \ için kullanılan fonksiyondur."
      operationId: "mvtnRequestGetSubPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Talep edilen topoloji isteğinin detaylarının bulunduğu veri\
          \ yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SubTopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SubTopology"
      x-dto: "MvtnSubTopologyDTO"
      x-operation-get: "true"
  /ctrl/mvtnRequest/list:
    post:
      tags:
      - "MvtnRequest"
      summary: "Sanal ağ taleplerinin listesini döner."
      operationId: "mvtnRequestListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ taleplerini listeleme talebi için kullanılacak veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnCreateRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnRequestListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-dto: "MvtnRequestDTO"
      x-operation-list: "true"
  /ctrl/mvtnRequest/save:
    post:
      tags:
      - "MvtnRequest"
      summary: "Sanal ağ talebi oluşturulmasını sağlayan servis."
      operationId: "mvtnRequestSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sanal ağ talebi oluşturmak veya güncellemek için kullanı\
          lan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnCreateRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnCreateRequestResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-dto: "MvtnRequestDTO"
      x-operation-save: "true"
  /ctrl/mvtnRequest/search:
    post:
      tags:
      - "MvtnRequest"
      summary: "Sanal ağ taleplerinin verilen kriterlere göre arama listesini döner."
      operationId: "mvtnRequestSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnRequestListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "MvtnRequest"
      x-operation-search: "true"
      x-dto: "MvtnRequestDTO"
  /ctrl/networkDevice/delete:
    post:
      tags:
      - "NetworkDevice"
      summary: "Belirtilen networkDevice'i siler."
      operationId: "networkDeviceDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/NetworkDeviceDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/NetworkDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NetworkDevice"
      x-operation-delete: "true"
      x-dto: "NetworkDeviceDTO"
  /ctrl/networkDevice/get:
    post:
      tags:
      - "NetworkDevice"
      summary: "NetworkDevice'in detaylarını döker."
      operationId: "networkDeviceGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "NetworkDevice isteğinin detaylarının bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/NetworkDeviceRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/NetworkDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NetworkDevice"
      x-dto: "NetworkDeviceDTO"
      x-operation-any: "networkDeviceGet"
  /ctrl/networkDevice/list:
    post:
      tags:
      - "NetworkDevice"
      summary: "Sistemdeki tüm networkDevice'ların listesini döner."
      operationId: "networkDeviceListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "NetworkDevice listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NetworkDeviceListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/NetworkDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NetworkDevice"
      x-dto: "NetworkDeviceDTO"
      x-operation-list: "true"
  /ctrl/networkDevice/save:
    post:
      tags:
      - "NetworkDevice"
      summary: "NetworkDevice verilerinin saklanmasını sağlar."
      description: "NetworkDevice verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: Insert işlemine izin verilmemelidir."
      operationId: "networkDeviceSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "NetworkDevice veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NetworkDeviceRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/NetworkDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NetworkDevice"
      x-dto: "NetworkDeviceDTO"
      x-operation-save: "true"
  /ctrl/overlay_policy/count:
    post:
      tags:
      - "Policy"
      summary: "Politika profil sayılarının dönüldüğü servis.."
      operationId: "overlayPolicyCountPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Politika profillerini listelemek için kullanılacak istek veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/ApiCoreRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyCountResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessPolicyDTO"
      x-operation-any: "count"
  /ctrl/overlay_policy/delete:
    post:
      tags:
      - "Policy"
      summary: "İstenen erişim politikası'ın silinmesini saglayan fonksiyon."
      operationId: "overlayPolicyDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-delete: "true"
      x-dto: "AccessPolicyDTO"
  /ctrl/overlay_policy/get:
    post:
      tags:
      - "Policy"
      summary: "ID değeri kullanılarak erişim politikası detaylarının alındığı fonksiyon."
      operationId: "overlayPolicyGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessPolicyDTO"
      x-operation-get: "true"
  /ctrl/overlay_policy/list:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki tüm erişim politikaları'ın listesini dönen fonksiyon."
      operationId: "overlayPolicyListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessPolicyDTO"
      x-operation-list: "true"
  /ctrl/overlay_policy/save:
    post:
      tags:
      - "Policy"
      summary: "Erişim politikası verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Erişim politikası verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "overlayPolicySavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Erişim politikası veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/AccessPolicyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessPolicyDTO"
      x-operation-save: "true"
  /ctrl/overlay_policy/search:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki erişim politikası verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "overlayPolicySearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-search: "true"
      x-dto: "AccessPolicyDTO"
  /ctrl/path/delete:
    post:
      tags:
      - "Paths"
      summary: "Istenen patikanin silinmesini saglayan fonksiyon."
      operationId: "pathDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PathResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Paths"
      x-operation-delete: "true"
      x-dto: "PathDTO"
  /ctrl/path/get:
    post:
      tags:
      - "Paths"
      summary: "Bir sanal ağ üzerindeki seçilen patika detayını dönen fonksiyon."
      operationId: "pathGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Belirtilen patika anahtar numarasına göre ilgili patikayı dö\
          ner."
        required: true
        schema:
          $ref: "#/definitions/PathRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PathListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Paths"
      x-dto: "PathDTO"
      x-operation-get: "true"
  /ctrl/path/list:
    post:
      tags:
      - "Paths"
      summary: "Bir sanal ağ üzerindeki tüm patikaların listesini dönen fonksiyon."
      operationId: "pathListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Belirtilen sanal ağ numarası ve varsa source ve destination\
          \ arasindaki patikaları listeler."
        required: true
        schema:
          $ref: "#/definitions/PathListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PathListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Paths"
      x-dto: "PathDTO"
      x-operation-list: "true"
  /ctrl/path/save:
    post:
      tags:
      - "Paths"
      summary: "Bir topolojiye patika tanımı yapılması için kullanılarn metod."
      operationId: "pathSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Belirtilen src ve dst hostları arasında patika oluşturur."
        required: true
        schema:
          $ref: "#/definitions/PathRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PathListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Paths"
      x-dto: "PathDTO"
      x-operation-save: "true"
  /ctrl/path/validate:
    post:
      tags:
      - "Paths"
      summary: "Bir sanal ağ üzerindeki seçilen patika detayını dönen fonksiyon."
      operationId: "pathValidatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Belirtilen patika anahtar numarasına göre ilgili patikayı dö\
          ner."
        required: true
        schema:
          $ref: "#/definitions/PathRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PathListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Paths"
      x-dto: "PathDTO"
      x-operation-any: "validate"
  /ctrl/policy/accessProfile/count:
    post:
      tags:
      - "Policy"
      summary: "Politika profil sayılarının dönüldüğü servis.."
      operationId: "policyAccessProfileCountPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Politika profillerini listelemek için kullanılacak istek veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/ApiCoreRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileCountResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessProfileDTO"
      x-operation-any: "count"
  /ctrl/policy/accessProfile/delete:
    post:
      tags:
      - "Policy"
      summary: "İstenen erişim politikası'ın silinmesini saglayan fonksiyon."
      operationId: "policyAccessProfileDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-delete: "true"
      x-dto: "AccessProfileDTO"
  /ctrl/policy/accessProfile/get:
    post:
      tags:
      - "Policy"
      summary: "ID değeri kullanılarak erişim politikası detaylarının alındığı fonksiyon."
      operationId: "policyAccessProfileGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessProfileDTO"
      x-operation-get: "true"
  /ctrl/policy/accessProfile/list:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki tüm erişim politikaları'ın listesini dönen fonksiyon."
      operationId: "policyAccessProfileListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessProfileDTO"
      x-operation-list: "true"
  /ctrl/policy/accessProfile/save:
    post:
      tags:
      - "Policy"
      summary: "Erişim politikası verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Erişim politikası verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "policyAccessProfileSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Erişim politikası veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/AccessProfileRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "AccessProfileDTO"
      x-operation-save: "true"
  /ctrl/policy/accessProfile/search:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki erişim politikası verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "policyAccessProfileSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AccessProfileListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-search: "true"
      x-dto: "AccessProfileDTO"
  /ctrl/policy/serviceAction/delete:
    post:
      tags:
      - "Policy"
      summary: "İstenen hizmet aksiyonu'ın silinmesini saglayan fonksiyon."
      operationId: "policyServiceActionDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServiceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-delete: "true"
      x-dto: "ServiceActionDTO"
  /ctrl/policy/serviceAction/get:
    post:
      tags:
      - "Policy"
      summary: "ID değeri kullanılarak hizmet aksiyonu detaylarının alındığı fonksiyon."
      operationId: "policyServiceActionGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServiceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServiceActionDTO"
      x-operation-get: "true"
  /ctrl/policy/serviceAction/list:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki tüm hizmet aksiyonları'ın listesini dönen fonksiyon."
      operationId: "policyServiceActionListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServiceActionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServiceActionDTO"
      x-operation-list: "true"
  /ctrl/policy/serviceAction/save:
    post:
      tags:
      - "Policy"
      summary: "Hizmet aksiyonu verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Hizmet aksiyonu verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "policyServiceActionSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Hizmet aksiyonu veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ServiceActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServiceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServiceActionDTO"
      x-operation-save: "true"
  /ctrl/policy/serviceAction/search:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki hizmet aksiyonu verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "policyServiceActionSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServiceActionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-search: "true"
      x-dto: "ServiceActionDTO"
  /ctrl/policy/serviceClass/delete:
    post:
      tags:
      - "Policy"
      summary: "İstenen trafik sınıfı'ın silinmesini saglayan fonksiyon."
      operationId: "policyServiceClassDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServicePolicyClassResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-delete: "true"
      x-dto: "ServicePolicyClassDTO"
  /ctrl/policy/serviceClass/get:
    post:
      tags:
      - "Policy"
      summary: "ID değeri kullanılarak trafik sınıfı detaylarının alındığı fonksiyon."
      operationId: "policyServiceClassGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServicePolicyClassResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServicePolicyClassDTO"
      x-operation-get: "true"
  /ctrl/policy/serviceClass/list:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki tüm trafik sınıfları'ın listesini dönen fonksiyon."
      operationId: "policyServiceClassListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServicePolicyClassListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServicePolicyClassDTO"
      x-operation-list: "true"
  /ctrl/policy/serviceClass/save:
    post:
      tags:
      - "Policy"
      summary: "Trafik sınıfı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Trafik sınıfı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "policyServiceClassSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Trafik sınıfı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ServicePolicyClassRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServicePolicyClassResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-dto: "ServicePolicyClassDTO"
      x-operation-save: "true"
  /ctrl/policy/serviceClass/search:
    post:
      tags:
      - "Policy"
      summary: "Sistemdeki trafik sınıfı verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "policyServiceClassSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ServicePolicyClassListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Policy"
      x-operation-search: "true"
      x-dto: "ServicePolicyClassDTO"
  /ctrl/port_stats/port:
    post:
      tags:
      - "Stats"
      summary: "Anahtarlayıcının portlarının istatistik verilerinin alınmasını sağ\
        layan fonksiyon."
      operationId: "portStatsPortPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Anahtarlayıcıların ID listesini iletmek için kullanılan veri\
          \ yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericIdListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/PortStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Stats"
      x-dto: "PortStatsDTO"
      x-operation-any: "port"
  /ctrl/port_stats/switch:
    post:
      tags:
      - "Stats"
      summary: "Anahtarlayıcılar üzerindeki istatistik verilerinin alınmasını sağ\
        layan fonksiyon."
      operationId: "portStatsSwitchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Anahtarlayıcıların ID listesini iletmek için kullanılan veri\
          \ yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericIdListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchStatsListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Stats"
      x-dto: "SwitchStatsDTO"
      x-operation-any: "switch"
  /ctrl/proactive/delete:
    post:
      tags:
      - "ProactivePathPolicy"
      summary: "Istenen proaktif patika politikasının silinmesini saglayan fonksiyon."
      operationId: "proactiveDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ProactivePathPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "ProactivePathPolicy"
      x-operation-delete: "true"
      x-dto: "ProactivePathPolicyDTO"
  /ctrl/proactive/get:
    post:
      tags:
      - "ProactivePathPolicy"
      summary: "Proaktif patika politikasının detaylarının alınması için kullanılan\
        \ fonksiyondur."
      operationId: "proactiveGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Proaktif patika politikası isteğinin detaylarının bulunduğu\
          \ veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/ProactivePathPolicyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ProactivePathPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "ProactivePathPolicy"
      x-dto: "ProactivePathPolicyDTO"
      x-operation-get: "true"
  /ctrl/proactive/list:
    post:
      tags:
      - "ProactivePathPolicy"
      summary: "Proaktif patika akışlarının listesini döner."
      operationId: "proactiveListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ProactivePathPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "ProactivePathPolicy"
      x-dto: "ProactivePathPolicyDTO"
      x-operation-list: "true"
  /ctrl/proactive/save:
    post:
      tags:
      - "ProactivePathPolicy"
      summary: "Proaktif patika politikaların saklanmasını sağlayan fonksiyondur."
      description: "Proaktif patika politikaların saklanmasını sağlayan fonksiyondur."
      operationId: "proactiveSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Proaktif patika politika veri transfer modelini taşıyan istek\
          \ nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ProactivePathPolicyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ProactivePathPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "ProactivePathPolicy"
      x-dto: "ProactivePathPolicyDTO"
      x-operation-save: "true"
  /ctrl/proactive/search:
    post:
      tags:
      - "ProactivePathPolicy"
      summary: "Proaktif patika akışlarının sorgu sonucunu döner."
      operationId: "proactiveSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ProactivePathPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "ProactivePathPolicy"
      x-operation-search: "true"
      x-dto: "ProactivePathPolicyDTO"
  /ctrl/prognet/ovsdb/add-bridge:
    post:
      tags:
      - "OVSDB"
      summary: "Bir ağ anahtarlayıcı üzerinde bir köprü oluşturan fonksiyondur."
      operationId: "prognetOvsdbAddBridgePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Oluşturulacak köptrü tanımlarını tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbAddBridgeRequest"
      responses:
        200:
          description: "İşlemin mantıksal sonucunu döner."
          schema:
            $ref: "#/definitions/OvsdbAddBridgeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-any: "addBridge"
  /ctrl/prognet/ovsdb/add-controllers:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcılara yeni ağ kontrolcüler ekleyen fonksiyondur."
      operationId: "prognetOvsdbAddControllersPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Hangi ağ anahtarlayıcılara hangi ağ kontrolcülerin ekleneceğ\
          i bilgisini tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbControllerRequest"
      responses:
        200:
          description: "İstek ile gelen ağ anahtarlayıcıların bu istek sonrasında\
            \ hangi ağ kontrolcüler tarafından kontrol edildiği bilgisini döner."
          schema:
            $ref: "#/definitions/OvsdbControllerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-any: "addControllers"
  /ctrl/prognet/ovsdb/get-controllers:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcıların hangi ağ kontrolcüler tarafından kontrol edildiğ\
        i bilgisini veren fonksiyondur."
      operationId: "prognetOvsdbGetControllersPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Ağ kontrolcü bilgidi alınmak istenen ağ anahtarlayıcıların listesini\
          \ tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbControllerInfoRequest"
      responses:
        200:
          description: "İstek ile gelen ağ anahtarlayıcıların hangi ağ kontrolcüler\
            \ tarafından kontrol edildiği bilgisini döner."
          schema:
            $ref: "#/definitions/OvsdbControllerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-get: "true"
  /ctrl/prognet/ovsdb/get-port-description:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcı üzerindeki port tanımlarını veren fonksiyondur."
      operationId: "prognetOvsdbGetPortDescriptionPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Oluşturulacak köptrü tanımlarını tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbBridgeRequest"
      responses:
        200:
          description: "Ağ anahtarlayıcı üzerindeki portların tanımlarını tutar."
          schema:
            $ref: "#/definitions/OvsdbPortDescriptionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-get: "true"
  /ctrl/prognet/ovsdb/get-port-number:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcı üzerindeki port isimlerini ve numaralarını veren\
        \ fonksiyondur."
      operationId: "prognetOvsdbGetPortNumberPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Oluşturulacak köptrü tanımlarını tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbBridgeRequest"
      responses:
        200:
          description: "Ağ anahtarlayıcı üzerindeki portların isimlerini ve numaraları\
            nı tutar."
          schema:
            $ref: "#/definitions/OvsdbPortNumberResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-get: "true"
  /ctrl/prognet/ovsdb/remove-controllers:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcılardan ağ kontrolcü tanımlarının silinmesini sağlayan\
        \ fonksiyondur."
      operationId: "prognetOvsdbRemoveControllersPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Hangi ağ anahtarlayıcılardan hangi ağ kontrolcülerin silineceğ\
          i bilgisini tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbControllerRequest"
      responses:
        200:
          description: "İstek ile gelen ağ anahtarlayıcıların bu istek sonrasında\
            \ hangi ağ kontrolcüler tarafından kontrol edildiği bilgisini döner."
          schema:
            $ref: "#/definitions/OvsdbControllerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-any: "removeControllers"
  /ctrl/prognet/ovsdb/set-controllers:
    post:
      tags:
      - "OVSDB"
      summary: "Ağ anahtarlayıcılara yeni ağ kontrolcüler atayan fonksiyondur."
      operationId: "prognetOvsdbSetControllersPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Hangi ağ anahtarlayıcılara hangi ağ kontrolcülerin atanacağı\
          nı tutar."
        required: true
        schema:
          $ref: "#/definitions/OvsdbControllerRequest"
      responses:
        200:
          description: "İstek ile gelen ağ anahtarlayıcıların bu istek sonrasında\
            \ hangi ağ kontrolcüler tarafından kontrol edildiği bilgisini döner."
          schema:
            $ref: "#/definitions/OvsdbControllerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "OVSDB"
      x-operation-any: "setControllers"
  /ctrl/topology/controller/list:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki tüm kontrolcülerin listesini dönen fonksiyon."
      operationId: "topologyControllerListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ControllerListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "ControllerDTO"
      x-operation-list: "true"
  /ctrl/topology/delete:
    post:
      tags:
      - "Topology"
      summary: "Istenen topolojinin silinmesini saglayan fonksiyon."
      operationId: "topologyDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      deprecated: true
      x-swagger-router-controller: "Topology"
      x-operation-delete: "true"
      x-dto: "TopologyDTO"
  /ctrl/topology/enableDiscovery:
    post:
      tags:
      - "Topology"
      summary: "Topoloji keşfinin başlatılmasını sağlar."
      description: "Topoloji keşfinin başlatılmasını sağlar."
      operationId: "topologyEnableDiscoveryPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "boolean."
        required: true
        schema:
          $ref: "#/definitions/GenericRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "BaseDTO"
      x-operation-any: "enableDiscovery"
  /ctrl/topology/get:
    post:
      tags:
      - "Topology"
      summary: "Ağ topolojisinin detaylarının alınması için kullanılan fonksiyondur."
      operationId: "topologyGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Topoloji isteğinin detaylarının bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "TopologyDTO"
      x-operation-any: "topologyGet"
  /ctrl/topology/get/sub:
    post:
      tags:
      - "SubTopology"
      summary: "Sanal ağ topolojisinin fiziksel karşılığının alınması için kullanı\
        lan fonksiyondur."
      operationId: "topologyGetSubPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Topoloji isteğinin detaylarının bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SubTopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      deprecated: true
      x-swagger-router-controller: "SubTopology"
      x-dto: "SubTopologyDTO"
      x-operation-get: "true"
  /ctrl/topology/link/delete:
    post:
      tags:
      - "Topology"
      summary: "Topolojiden istenen bağlantının silinmesini saglayan fonksiyon."
      operationId: "topologyLinkDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-operation-delete: "true"
      x-dto: "LinkDTO"
  /ctrl/topology/link/get:
    post:
      tags:
      - "Topology"
      summary: "ID değeri kullanılarak Bağlantı detaylarının alındığı fonksiyon."
      operationId: "topologyLinkGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/LinkRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "LinkDTO"
      x-operation-get: "true"
  /ctrl/topology/link/list:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki tüm bağlantıların listesini dönen fonksiyon."
      operationId: "topologyLinkListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "LinkDTO"
      x-operation-list: "true"
  /ctrl/topology/link/save:
    post:
      tags:
      - "Topology"
      summary: "Bağlantı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Bağlantı verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ Insert işlemine izin verilmemelidir."
      operationId: "topologyLinkSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Bağlantı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/LinkRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "LinkDTO"
      x-operation-save: "true"
  /ctrl/topology/link/search:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki bağlantı verileri arasında arama yapmak için kullanılan\
        \ fonksiyon."
      operationId: "topologyLinkSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-operation-search: "true"
      x-dto: "LinkDTO"
  /ctrl/topology/list:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki tüm topolojilerin listesini dönen fonksiyon."
      operationId: "topologyListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Topoloji listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/TopologyListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "TopologyInfoDTO"
      x-operation-list: "true"
  /ctrl/topology/lite-controller/list:
    post:
      tags:
      - "Topology"
      summary: "Gösterge sayılarını ve ilgili verilerin listesini dönen fonksiyon."
      operationId: "topologyLiteControllerListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/IndicatorsResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "LiteTopologyDTO"
      x-operation-list: "true"
  /ctrl/topology/switch/delete:
    post:
      tags:
      - "Topology"
      summary: "Topolojiden istenen anahtarlayıcının silinmesini saglayan fonksiyon."
      operationId: "topologySwitchDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-operation-delete: "true"
      x-dto: "SwitchDTO"
  /ctrl/topology/switch/get:
    post:
      tags:
      - "Topology"
      summary: "ID değeri kullanılarak Anahtarlayıcı detaylarının alındığı fonksiyon."
      operationId: "topologySwitchGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "SwitchDTO"
      x-operation-get: "true"
  /ctrl/topology/switch/list:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki tüm anahtarlayıcıların listesini dönen fonksiyon."
      operationId: "topologySwitchListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "SwitchDTO"
      x-operation-list: "true"
  /ctrl/topology/switch/save:
    post:
      tags:
      - "Topology"
      summary: "Anahtarlayıcı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Anahtarlayıcı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: Insert işlemine izin verilmemelidir."
      operationId: "topologySwitchSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Anahtarlayıcı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/SwitchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-dto: "SwitchDTO"
      x-operation-save: "true"
  /ctrl/topology/switch/search:
    post:
      tags:
      - "Topology"
      summary: "Sistemdeki anahtarlayıcı verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "topologySwitchSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Topology"
      x-operation-search: "true"
      x-dto: "SwitchDTO"
  /ctrl/tsdb/metricDefinition:
    post:
      tags:
      - "TSDB"
      summary: "Zaman serisi veritabanındaki metriklerin sorgulanması"
      operationId: "tsdbMetricDefinitionPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Metrik sorgu parametreleri"
        required: true
        schema:
          $ref: "#/definitions/MetricNames"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MetricDefinitions"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "TSDB"
      x-operation-any: "metricDefinition"
  /ctrl/tsdb/metricsNtags:
    post:
      tags:
      - "TSDB"
      summary: "Zaman serisi veritabanındaki metriklerin ve taglerin listesi"
      operationId: "tsdbMetricsNtagsPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Metrik ve tag listelerinin istenmaesi"
        required: true
        schema:
          $ref: "#/definitions/MetricAndTagPrefixes"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MetricAndTagNames"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "TSDB"
      x-operation-any: "metricsNtags"
  /ctrl/tsdb/query:
    post:
      tags:
      - "TSDB"
      summary: "Zaman serisi veritabanındaki metriklerin sorgulanması"
      operationId: "tsdbQueryPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Metrik sorgu parametreleri"
        required: true
        schema:
          $ref: "#/definitions/TsdbQueryRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TsdbQueryResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "TSDB"
      x-dto: "TsdbDataSet"
      x-operation-any: "query"
  /ctrl/virtual/changeStatus:
    post:
      tags:
      - "Mvtn"
      summary: "İstenen sanal ağın durumunu değiştirir."
      operationId: "virtualChangeStatusPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağların durumlarını değiştirmek için kullanılacak veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnChangeStatusRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnChangeStatusResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "MvtnDTO"
      x-operation-any: "changeStatus"
  /ctrl/virtual/changeType:
    post:
      tags:
      - "Mvtn"
      summary: "İstenen sanal ağın tipini değiştirir."
      operationId: "virtualChangeTypePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağların tiplerini değiştirmek için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnChangeTypeRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnChangeTypeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "MvtnDTO"
      x-operation-any: "changeType"
  /ctrl/virtual/delete:
    post:
      tags:
      - "Mvtn"
      summary: "Istenen topolojinin silinmesini saglayan fonksiyon."
      operationId: "virtualDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-operation-delete: "true"
      x-dto: "MvtnDTO"
  /ctrl/virtual/get:
    post:
      tags:
      - "Mvtn"
      summary: "Ağ topolojisinin detaylarının alınması için kullanılan fonksiyondur."
      operationId: "virtualGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Topoloji isteğinin detaylarının bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/TopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "TopologyDTO"
      x-operation-get: "true"
  /ctrl/virtual/get/parameters:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağın varsayılan parametrelerini döner"
      operationId: "virtualGetParametersPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ varsayılan parametrelerinin veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnParametersResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "TopologyInfoDTO"
      x-operation-get: "true"
  /ctrl/virtual/get/sub:
    post:
      tags:
      - "SubTopology"
      summary: "Sanal ağ topolojisinin fiziksel karşılığının alınması için kullanı\
        lan fonksiyondur."
      operationId: "virtualGetSubPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Topoloji isteğinin detaylarının bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/TopologyRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SubTopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SubTopology"
      x-dto: "MvtnSubTopologyDTO"
      x-operation-get: "true"
  /ctrl/virtual/link/save:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağ linki için güncellemeleri kaydeder"
      operationId: "virtualLinkSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ linkini kaydeden veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/LinkRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/LinkResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "LinkDTO"
      x-operation-save: "true"
  /ctrl/virtual/list:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağ taleplerinin verilen kriterlere göre listesini döner."
      operationId: "virtualListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "MvtnDTO"
      x-operation-list: "true"
  /ctrl/virtual/list-available-device-ports:
    post:
      tags:
      - "Mvtn"
      summary: "Device üzerindeki herhangi bir sanal ağa atanmamış portları döner."
      operationId: "virtualListAvailableDevicePortsPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Device üzerindeki müsait portları listelemek için kullanılacak\
          \ istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/SwitchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SwitchResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "SwitchDTO"
      x-operation-list: "true"
  /ctrl/virtual/list-device-profiles:
    post:
      tags:
      - "Mvtn"
      summary: "Topolojideki deviceların profillerini listeleyen servis."
      operationId: "virtualListDeviceProfilesPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Device profillerini listelemek için kullanılacak istek veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/DeviceProfileListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DeviceProfileListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "DeviceProfileDTO"
      x-operation-list: "true"
  /ctrl/virtual/save:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağ oluşturulmasını sağlayan servis."
      operationId: "virtualSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sanal ağ oluşturmak için kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/MvtnRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnCreateResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "MvtnDTO"
      x-operation-save: "true"
  /ctrl/virtual/save/sub:
    post:
      tags:
      - "SubTopology"
      summary: "Sanal ağın alternatif fiziksel karşılığındaki topolojilerden birini\
        \ seçme ve kaydetme isteğini yapar."
      operationId: "virtualSaveSubPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ fiziksel karşılık topolojisini kaydetme isteğini gerç\
          ekleştiren veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SubTopologyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SubTopology"
      x-dto: "MvtnSubTopologyDTO"
      x-operation-save: "true"
  /ctrl/virtual/search:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağ taleplerinin verilen kriterlere göre arama listesini döner."
      operationId: "virtualSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/MvtnListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-operation-search: "true"
      x-dto: "MvtnDTO"
  /ctrl/virtual/validate:
    post:
      tags:
      - "Mvtn"
      summary: "Sanal ağ oluştururken girilen alanların benzersizlik kontrolleri iç\
        in kullanılır."
      operationId: "virtualValidatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Varolan sanal ağlarda aranacak değer ve parametrenin veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/UniquenessControlRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/UniquenessControlResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Mvtn"
      x-dto: "UniquenessControlDTO"
      x-operation-any: "validate"
  /ctrl/wanAlarm/list:
    post:
      tags:
      - "WanAlarmInfo"
      summary: "Sistemdeki tüm geniş alanların alarm listesini dönen fonksiyon."
      operationId: "wanAlarmListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanAlarmInfoListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanAlarmInfo"
      x-dto: "WanAlarmInfoDTO"
      x-operation-list: "true"
  /ctrl/wanConfiguration/wanPortInfo/delete:
    post:
      tags:
      - "WanPortInfo"
      summary: "Geniş alan ağlarının bilgi verilerinin silinmesini sağlar."
      operationId: "wanConfigurationWanPortInfoDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/WanPortInfoDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanPortInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanPortInfo"
      x-operation-delete: "true"
      x-dto: "WanPortInfoDTO"
  /ctrl/wanConfiguration/wanPortInfo/get:
    post:
      tags:
      - "WanPortInfo"
      summary: "Geniş alan ağlarının girişlerinin bilgi ayrıntılarını döker."
      operationId: "wanConfigurationWanPortInfoGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Geniş alan ağlarının bilgi isteğinin ayrıntılarının bulunduğ\
          u veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/WanPortInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanPortInfo"
      x-dto: "WanPortInfoDTO"
      x-operation-any: "WanPortInfoGet"
  /ctrl/wanConfiguration/wanPortInfo/save:
    post:
      tags:
      - "WanPortInfo"
      summary: "Geniş alan ağlarının bilgi verilerinin saklanmasını ve güncellenmesini\
        \ sağlar."
      operationId: "wanConfigurationWanPortInfoSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Geniş alan ağlarının bilgi veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/WanPortInfoRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/WanPortInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanPortInfo"
      x-dto: "WanPortInfoDTO"
      x-operation-save: "true"
  /ctrl/wanConfiguration/wanPortInfo/search:
    post:
      tags:
      - "WanPortInfo"
      summary: "Sistemdeki tüm geniş alan ağlarının girişlerinin bilgi kapsamları\
        nın listesini döner."
      operationId: "wanConfigurationWanPortInfoSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "geniş alan ağlarının girişlerinin bilgi kapsamlarını listeleme\
          \ istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/WanPortInfoListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanPortInfo"
      x-operation-search: "true"
      x-dto: "WanPortInfoDTO"
  /ctrl/wanConfiguration/wan_domain/bulkSave:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "Alan tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Alan tanımı verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "wanConfigurationWanDomainBulkSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Alan tanımı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/MultipleWanDomainListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-dto: "MultipleWanDomainDTO"
      x-operation-any: "bulkSave"
  /ctrl/wanConfiguration/wan_domain/current:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "Kontrolcünün kendi alan tanımı detaylarının alındığı fonksiyon."
      operationId: "wanConfigurationWanDomainCurrentPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-dto: "WanDomainDTO"
      x-operation-any: "current"
  /ctrl/wanConfiguration/wan_domain/delete:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "İstenen alan tanımı'ın silinmesini saglayan fonksiyon."
      operationId: "wanConfigurationWanDomainDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-operation-delete: "true"
      x-dto: "WanDomainDTO"
  /ctrl/wanConfiguration/wan_domain/get:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "ID değeri kullanılarak alan tanımı detaylarının alındığı fonksiyon."
      operationId: "wanConfigurationWanDomainGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-dto: "WanDomainDTO"
      x-operation-get: "true"
  /ctrl/wanConfiguration/wan_domain/list:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "Sistemdeki tüm alan tanımları'ın listesini dönen fonksiyon."
      operationId: "wanConfigurationWanDomainListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-dto: "WanDomainDTO"
      x-operation-list: "true"
  /ctrl/wanConfiguration/wan_domain/save:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "Alan tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Alan tanımı verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "wanConfigurationWanDomainSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Alan tanımı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/WanDomainRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-dto: "WanDomainDTO"
      x-operation-save: "true"
  /ctrl/wanConfiguration/wan_domain/search:
    post:
      tags:
      - "WAN_DOMAIN"
      summary: "Sistemdeki alan tanımı verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "wanConfigurationWanDomainSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanDomainListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WANDOMAIN"
      x-operation-search: "true"
      x-dto: "WanDomainDTO"
  /ctrl/wanMvtn/create:
    post:
      tags:
      - "WanMvtnInfo"
      summary: "Geniş alan sanal ağlarının saklanmasını ve güncellenmesini sağlar."
      operationId: "wanMvtnCreatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Geniş alan sanal ağlarının veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/WanMvtnInfoRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/WanMvtnInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanMvtnInfo"
      x-dto: "WanMvtnInfoDTO"
      x-operation-any: "create"
  /ctrl/wanMvtn/delete:
    post:
      tags:
      - "WanMvtnInfo"
      summary: "Geniş alan sanal ağlarının silinmesini sağlar."
      operationId: "wanMvtnDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanMvtnInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanMvtnInfo"
      x-operation-delete: "true"
      x-dto: "WanMvtnInfoDTO"
  /ctrl/wanMvtn/list:
    post:
      tags:
      - "WanMvtnInfo"
      summary: "Sistemdeki tüm geniş alan sanal ağlarının listesini dönen fonksiyon."
      operationId: "wanMvtnListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/WanMvtnInfoListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "WanMvtnInfo"
      x-dto: "WanMvtnInfoDTO"
      x-operation-list: "true"
  /dhcp/dhcpWeb/IPOwner/search:
    post:
      tags:
      - "Dhcp"
      summary: "IP sahiplieri (DhcpIpOwner) verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebIpownerSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIPOwnerListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIPOwnerDTO"
  /dhcp/dhcpWeb/ipExcluded/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen yasaklanmış ip'yi (ipExcluded) siler."
      operationId: "dhcpWebIpExcludedDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpExcludedResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpIpExcludedDTO"
  /dhcp/dhcpWeb/ipExcluded/save:
    post:
      tags:
      - "Dhcp"
      summary: "Yasaklanmış ip (ipExcluded) verilerinin saklanmasını ve güncellenmesini\
        \ sağlar."
      operationId: "dhcpWebIpExcludedSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yasaklanmış ip (ipExcluded) veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpIpExcludedRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpExcludedResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpIpExcludedDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/ipExcluded/search:
    post:
      tags:
      - "Dhcp"
      summary: "Yasaklanmış ip (ipExcluded) verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebIpExcludedSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpExcludedListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpExcludedDTO"
  /dhcp/dhcpWeb/ipPool/search:
    post:
      tags:
      - "Dhcp"
      summary: "Dhcpde oluşturulabilecek ip aralıklarının listesini döner."
      operationId: "dhcpWebIpPoolSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcpde oluşturulabilecek ip aralıklarının listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpPoolListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpPoolDTO"
  /dhcp/dhcpWeb/ipRange/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen dhcp ip menzilini siler."
      operationId: "dhcpWebIpRangeDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpRangeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpIpRangeDTO"
  /dhcp/dhcpWeb/ipRange/save:
    post:
      tags:
      - "Dhcp"
      summary: "dhcp ip menzili verilerinin saklanmasını ve güncellenmesini sağlar."
      operationId: "dhcpWebIpRangeSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "DhcpIpRange veri transfer modelini taşıyan istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpIpRangeRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpRangeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpIpRangeDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/ipRange/search:
    post:
      tags:
      - "Dhcp"
      summary: "dhcp menzili verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebIpRangeSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpRangeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpRangeDTO"
  /dhcp/dhcpWeb/ipReserved/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen ayrılmış ip'i (ipReserved'i) siler."
      operationId: "dhcpWebIpReservedDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpIpReservedDTO"
  /dhcp/dhcpWeb/ipReserved/save:
    post:
      tags:
      - "Dhcp"
      summary: "Ayrılmış ip (ipReserved) verilerinin saklanmasını ve güncellenmesini\
        \ sağlar."
      operationId: "dhcpWebIpReservedSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Ayrılmış ip (ipReserved) veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpIpReservedRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpIpReservedDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/ipReserved/search:
    post:
      tags:
      - "Dhcp"
      summary: "Ayrılmış ip (ipReserved) verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebIpReservedSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpReservedDTO"
  /dhcp/dhcpWeb/ipReservedUser/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen ayrılmış ip'i (ipReserved'i) siler."
      operationId: "dhcpWebIpReservedUserDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedUserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpIpReservedUserDTO"
  /dhcp/dhcpWeb/ipReservedUser/save:
    post:
      tags:
      - "Dhcp"
      summary: "Ayrılmış ip (ipReserved) verilerinin saklanmasını ve güncellenmesini\
        \ sağlar."
      operationId: "dhcpWebIpReservedUserSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Ayrılmış ip (ipReserved) veri transfer modelini taşıyan istek\
          \ nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpIpReservedUserRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedUserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpIpReservedUserDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/ipReservedUser/search:
    post:
      tags:
      - "Dhcp"
      summary: "Ayrılmış ip (ipReserved) verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebIpReservedUserSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpReservedUserListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpReservedUserDTO"
  /dhcp/dhcpWeb/option/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen dhcpOption'i siler."
      operationId: "dhcpWebOptionDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpOptionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpOptionDTO"
  /dhcp/dhcpWeb/option/save:
    post:
      tags:
      - "Dhcp"
      summary: "DhcpOption verilerinin saklanmasını sağlar."
      operationId: "dhcpWebOptionSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "DhcpOption veri transfer modelini taşıyan istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpOptionRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpOptionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpOptionDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/option/search:
    post:
      tags:
      - "Dhcp"
      summary: "DhcpOption verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebOptionSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpOptionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpOptionDTO"
  /dhcp/dhcpWeb/optionKey/list:
    post:
      tags:
      - "Dhcp"
      summary: "Sistemdeki tüm DhcpOptionKey'lerin listesini döner."
      operationId: "dhcpWebOptionKeyListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "DhcpOptionKey listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpOptionKeyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpOptionKeyDTO"
      x-operation-list: "true"
  /dhcp/dhcpWeb/scope/delete:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası belirtilen dhcp kapsamını siler."
      operationId: "dhcpWebScopeDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-delete: "true"
      x-dto: "DhcpScopeDTO"
  /dhcp/dhcpWeb/scope/get:
    post:
      tags:
      - "Dhcp"
      summary: "Kimlik (id) numarası verilen dhcp kapsamının ayrıntılarını döker."
      operationId: "dhcpWebScopeGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcpScopeGet isteğinin ayrıntılarının bulunduğu veri yapısı\
          dır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpScopeDTO"
      x-operation-any: "dhcpScopeGet"
  /dhcp/dhcpWeb/scope/list:
    post:
      tags:
      - "Dhcp"
      summary: "Sistemdeki tüm dhcp kapsamlarının listesini döner."
      operationId: "dhcpWebScopeListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcp kapsamlarını listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpScopeDTO"
      x-operation-list: "true"
  /dhcp/dhcpWeb/scope/save:
    post:
      tags:
      - "Dhcp"
      summary: "dhcp kapsam verilerinin saklanmasını ve güncellenmesini sağlar."
      operationId: "dhcpWebScopeSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcp kapsam veri transfer modelini taşıyan istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpScopeRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpScopeDTO"
      x-operation-save: "true"
  /dhcp/dhcpWeb/scope/search:
    post:
      tags:
      - "Dhcp"
      summary: "dhcp kapsam verileri arasında arama yapmaya yarar."
      operationId: "dhcpWebScopeSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısıdır."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpScopeDTO"
  /dhcpcentralwan/dhcpCentalWanWeb/ipPool/save:
    post:
      tags:
      - "Dhcp"
      summary: "dhcp ip pool verilerinin saklanmasını ve güncellenmesini sağlar."
      operationId: "dhcpcentralwanDhcpCentalWanWebIpPoolSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcp ip pool veri transfer modelini taşıyan istek nesnesidir."
        required: true
        schema:
          $ref: "#/definitions/DhcpIpPoolRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpScopeResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-dto: "DhcpIpPoolDTO"
      x-operation-save: "true"
  /dhcpcentralwan/dhcpCentalWanWeb/ipPool/search:
    post:
      tags:
      - "Dhcp"
      summary: "Dhcpde oluşturulabilecek ip aralıklarının listesini döner."
      operationId: "dhcpcentralwanDhcpCentalWanWebIpPoolSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "dhcpde oluşturulabilecek ip aralıklarının listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı (SUCCESS)"
          schema:
            $ref: "#/definitions/DhcpIpPoolListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Dhcp"
      x-operation-search: "true"
      x-dto: "DhcpIpPoolDTO"
  /edr/edrWeb/search:
    post:
      tags:
      - "EdrListAndSearch"
      summary: "Sistemdeki EDR kayırları arasında arama yapmak için kullanılan fonksiyon."
      operationId: "edrWebSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/EdrSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/EdrListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "EdrListAndSearch"
      x-operation-search: "true"
      x-dto: "EdrDTO"
  /nas/auth/changepwd:
    post:
      tags:
      - "NacUser"
      summary: "Son kullanıcıların kendi şifrelerini değiştirmek için kullanacakları\
        \ fonksiyondur."
      operationId: "changepwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Şifre değişikliği isteği."
        required: true
        schema:
          $ref: "#/definitions/NacChangeUserPwdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-any: "changepwd"
  /nas/auth/getsession:
    post:
      tags:
      - "NacAuth"
      summary: "NAC için IP, UserId sorgusu REST servisi"
      operationId: "getsessionPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sorgu için IP addresi kullanılacaktır. Boş IP adresi gelmesi\
          \ durumunda exception üretilecektir."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacSessionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacAuth"
      x-dto: "NacSessionDTO"
      x-operation-get: "true"
  /nas/auth/getsessioncount:
    post:
      tags:
      - "NacAuth"
      summary: "aktif kullanıcı sorgulayan REST servisi"
      operationId: "getsessioncountPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sorgu için IP addresi kullanılacaktır. Boş IP adresi gelmesi\
          \ durumunda exception üretilecektir."
        required: true
        schema:
          $ref: "#/definitions/GenericRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacSessionCountResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacAuth"
      x-dto: "NacSessionCountDTO"
      x-operation-get: "true"
  /nas/auth/login:
    post:
      tags:
      - "NacAuth"
      summary: "Son kullanıcıların sisteme giriş yapmaları için kullanılacak fonksiyondur."
      operationId: "loginPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Giriş için gerekli verilerin bulunduğu veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/NacLoginRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacLoginResponse"
        300:
          description: "Giriş işlemi sırasında Hata/Uyarılar (ERROR) durumları oluş\
            ması durumunda bu şekilde geri dönüş olacaktır.\n\nBu durumda 'errorInfo'\
            \ alanında aşağıdaki değerlerden biri dönülecektir.\n\n  | code  | message\
            \                |\n  |:-----:|:-----------------------|\n  | 100   |\
            \ Giriş işlemi başarısız |\n  | 200   | Hesap askıya alınmış   |\n  |\
            \ 300   | Hesap engellenmiş      |\n"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacAuth"
      x-dto: "NacUserDTO"
      x-operation-any: "login"
  /nas/auth/logout:
    post:
      tags:
      - "NacAuth"
      summary: "Son kullanıcının sistemden çıkış yapması için kullanılacak fonksiyondur."
      operationId: "logoutPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Çıkış için session ID değeri kullanılacaktır. Boş değer gönderilmesi\
          \ durumunda mevcut session'dan çıkış yapılacaktır."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacAuth"
      x-dto: "NacUserDTO"
      x-operation-any: "logout"
  /nas/auth/lostpwd:
    post:
      tags:
      - "NacAuth"
      summary: "Son kullanıcıların şifrelerini unutmaları durumunda kullanabilecekleri\
        \ fonksiyondur."
      description: "Son kullanıcıların şifrelerini unutmaları durumunda şifrelerini\
        \ sıfırlamak için bu fonksiyon kullanılacaktır.\n\nBu fonksiyonun kritik ö\
        zelliği, belirtilen kullanıcı adı sistemde _**olmasa bile hata vermemelidir**_.\n\
        Kullanıcı adının olması durumunda ise kullanıcıya e-posta ile şifre değiş\
        tirme ekranına yönlendirilmelidir.\n"
      operationId: "lostpwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        required: true
        schema:
          $ref: "#/definitions/NacUsernameRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacAuth"
      x-dto: "NacUserDTO"
      x-operation-any: "lostpwd"
  /nas/auth/setpwd:
    post:
      tags:
      - "NacUser"
      summary: "Bir son kullanıcının şifresini değiştirmek için kullanılan fonksiyon."
      operationId: "setpwdPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Şifre değişikliği isteği."
        required: true
        schema:
          $ref: "#/definitions/NacSetUserPwdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-any: "setpwd"
  /nas/device/delete:
    post:
      tags:
      - "NacDevice"
      summary: "Cihaz verilerinin silinmesini sağlayan fonksiyon."
      operationId: "deviceDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-operation-delete: "true"
      x-dto: "NacDeviceDTO"
  /nas/device/get:
    post:
      tags:
      - "NacDevice"
      summary: "ID değeri kullanılarak cihaz detaylarının alındığı fonksiyon."
      operationId: "deviceGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-dto: "NacDeviceDTO"
      x-operation-get: "true"
  /nas/device/list:
    post:
      tags:
      - "NacDevice"
      summary: "Sistemdeki tüm cihazlarının listesini dönen fonksiyon."
      operationId: "deviceListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-dto: "NacDeviceDTO"
      x-operation-list: "true"
  /nas/device/quarantine:
    post:
      tags:
      - "NacDevice"
      summary: "Cihazın karantinaya alınmasını sağlayan fonksiyon."
      operationId: "deviceQuarantinePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel karantina isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/DeviceQuarantineRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/DeviceQuarantineResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-dto: "DeviceQuarantineDTO"
      x-operation-any: "quarantine"
  /nas/device/save:
    post:
      tags:
      - "NacDevice"
      summary: "Cihaz verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Cihaz verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "deviceSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Cihaz veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacDeviceRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-dto: "NacDeviceDTO"
      x-operation-save: "true"
  /nas/device/search:
    post:
      tags:
      - "NacDevice"
      summary: "Sistemdeki cihaz verileri arasında arama yapmak için kullanılan fonksiyon."
      operationId: "deviceSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacDevice"
      x-operation-search: "true"
      x-dto: "NacDeviceDTO"
  /nas/group/delete:
    post:
      tags:
      - "NacGroup"
      summary: "Nac grup verilerinin silinmesini sağlayan fonksiyon."
      operationId: "groupDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacGroupResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacGroup"
      x-operation-delete: "true"
      x-dto: "NacGroupDTO"
  /nas/group/get:
    post:
      tags:
      - "NacGroup"
      summary: "ID değeri kullanılarak nac grup detaylarının alındığı fonksiyon."
      operationId: "groupGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacGroupResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacGroup"
      x-dto: "NacGroupDTO"
      x-operation-get: "true"
  /nas/group/list:
    post:
      tags:
      - "NacGroup"
      summary: "Sistemdeki tüm nac gruplarının listesini dönen fonksiyon."
      operationId: "groupListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacGroupListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacGroup"
      x-dto: "NacGroupDTO"
      x-operation-list: "true"
  /nas/group/save:
    post:
      tags:
      - "NacGroup"
      summary: "Nac grup verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Nac grup verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "groupSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Nac grup veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacGroupRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacGroupResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacGroup"
      x-dto: "NacGroupDTO"
      x-operation-save: "true"
  /nas/group/search:
    post:
      tags:
      - "NacGroup"
      summary: "Sistemdeki nac grup verileri arasında arama yapmak için kullanılan\
        \ fonksiyon."
      operationId: "groupSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacGroupListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacGroup"
      x-operation-search: "true"
      x-dto: "NacGroupDTO"
  /nas/server/delete:
    post:
      tags:
      - "AAAServer"
      summary: "AAA sunucu verilerinin silinmesini sağlayan fonksiyon."
      operationId: "serverDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AAAServerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAServer"
      x-operation-delete: "true"
      x-dto: "AAAServerDTO"
  /nas/server/get:
    post:
      tags:
      - "AAAServer"
      summary: "ID değeri kullanılarak AAA sunucu detaylarının alındığı fonksiyon."
      operationId: "serverGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AAAServerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAServer"
      x-dto: "AAAServerDTO"
      x-operation-get: "true"
  /nas/server/list:
    post:
      tags:
      - "AAAServer"
      summary: "Sistemdeki tüm AAA sunucularının listesini dönen fonksiyon."
      operationId: "serverListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AAAServerListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAServer"
      x-dto: "AAAServerDTO"
      x-operation-list: "true"
  /nas/server/save:
    post:
      tags:
      - "AAAServer"
      summary: "AAA sunucu verilerinin saklanmasını sağlayan fonksiyondur."
      description: "AAA sunucu verilerinin saklanmasını sağlayan fonksiyondur. (!)Dikkat:\
        \ ID değeri olmayan veri modelleri veri tabanında oluşturulacaktır. ID değ\
        eri olanlar için güncelleme yapılacaktır."
      operationId: "serverSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "AAA sunucu veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/AAAServerRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AAAServerResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAServer"
      x-dto: "AAAServerDTO"
      x-operation-save: "true"
  /nas/server/search:
    post:
      tags:
      - "AAAServer"
      summary: "Sistemdeki AAA sunucu verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "serverSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/AAAServerListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "AAAServer"
      x-operation-search: "true"
      x-dto: "AAAServerDTO"
  /nas/user/checkusr:
    post:
      tags:
      - "NacUser"
      summary: "Bir son kullanıcı adının uygun olup olmadığını kontrol eden fonksiyon.\
        \ Yeni kullanıcı tanımlarken kullanılacaktır."
      operationId: "userCheckusrPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrol edilecek kullanıcı adı isteği."
        required: true
        schema:
          $ref: "#/definitions/NacUsernameRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-any: "checkusr"
  /nas/user/delete:
    post:
      tags:
      - "NacUser"
      summary: "Son kullanıcı verilerinin silinmesini sağlayan fonksiyon."
      operationId: "userDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri   yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-operation-delete: "true"
      x-dto: "NacUserDTO"
  /nas/user/device/delete:
    post:
      tags:
      - "NacUserDevice"
      summary: "Son kullanıcı cihaz atama verilerinin silinmesini sağlayan fonksiyon."
      operationId: "userDeviceDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUserDevice"
      x-operation-delete: "true"
      x-dto: "NacUserDeviceDTO"
  /nas/user/device/get:
    post:
      tags:
      - "NacUserDevice"
      summary: "Son kullanıcıya cihaz atama detaylarının alındığı fonksiyon."
      operationId: "userDeviceGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUserDevice"
      x-dto: "NacUserDeviceDTO"
      x-operation-get: "true"
  /nas/user/device/list:
    post:
      tags:
      - "NacUserDevice"
      summary: "Bir son kullanıcıya ait cihazların listesini dönen fonksiyon."
      operationId: "userDeviceListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Son kullanıcıta göre cihaz listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacUserDeviceListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUserDevice"
      x-dto: "NacUserDeviceDTO"
      x-operation-list: "true"
  /nas/user/device/save:
    post:
      tags:
      - "NacUserDevice"
      summary: "Son kullanıcı cihaz atama verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Son kullanıcı cihaz atama verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID değeri olmayan veri modelleri veri tabanında oluşturulacaktı\
        r. ID değeri olanlar için güncelleme yapılacaktır."
      operationId: "userDeviceSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Son kullanıcı cihaz atama veri transfer modelini taşıyan istek\
          \ nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacUserDeviceRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserDeviceResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUserDevice"
      x-dto: "NacUserDeviceDTO"
      x-operation-save: "true"
  /nas/user/device/search:
    post:
      tags:
      - "NacUserDevice"
      summary: "Bir son kullanıcıya ait cihazların arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "userDeviceSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Son kullanıcıta göre cihaz arama parametrelerinin belirtildiğ\
          i veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/NacUserDeviceSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserDeviceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUserDevice"
      x-operation-search: "true"
      x-dto: "NacUserDeviceDTO"
  /nas/user/forget:
    post:
      tags:
      - "NacUser"
      summary: "Nac Login şifremi unuttum sayfası"
      operationId: "userForgetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Kontrol edilecek kullanıcı adı isteği."
        required: true
        schema:
          $ref: "#/definitions/NacForgettenPasswordRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/GenericResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-any: "forget"
  /nas/user/get:
    post:
      tags:
      - "NacUser"
      summary: "ID değeri kullanılarak son kullanıcı detaylarının alındığı fonksiyon."
      operationId: "userGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-get: "true"
  /nas/user/list:
    post:
      tags:
      - "NacUser"
      summary: "Sistemdeki tüm son kullanıcıların listesini dönen fonksiyon."
      operationId: "userListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-list: "true"
  /nas/user/save:
    post:
      tags:
      - "NacUser"
      summary: "Son kullanıcı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Son kullanıcı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID değeri olmayan veri modelleri veri tabanında oluşturulacaktı\
        r. ID değeri olanlar için güncelleme yapılacaktır."
      operationId: "userSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Son kullanıcı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacUserRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-save: "true"
  /nas/user/search:
    post:
      tags:
      - "NacUser"
      summary: "Sistemdeki son kullanıcı verileri arasında arama yapmak için kullanı\
        lan fonksiyon."
      operationId: "userSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Arama parametrelerinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-operation-search: "true"
      x-dto: "NacUserDTO"
  /nas/user/status:
    post:
      tags:
      - "NacUser"
      summary: "Sistemdeki tüm son kullanıcıların statuslerini editleyen fonksiyon."
      operationId: "userStatusPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel status nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NacUserStatusRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NacUserStatusResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NacUser"
      x-dto: "NacUserDTO"
      x-operation-any: "status"
  /nfva/nsd/delete:
    post:
      tags:
      - "NFV"
      summary: "İstenen ağ servis tanımı'ın silinmesini saglayan fonksiyon."
      operationId: "nsdDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceDescResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-operation-delete: "true"
      x-dto: "NetServiceDescDTO"
  /nfva/nsd/get:
    post:
      tags:
      - "NFV"
      summary: "ID değeri kullanılarak ağ servis tanımı detaylarının alındığı fonksiyon."
      operationId: "nsdGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceDescResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceDescDTO"
      x-operation-get: "true"
  /nfva/nsd/list:
    post:
      tags:
      - "NFV"
      summary: "Sistemdeki tüm ağ servis tanımları'ın listesini dönen fonksiyon."
      operationId: "nsdListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceDescListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceDescDTO"
      x-operation-list: "true"
  /nfva/nsd/save:
    post:
      tags:
      - "NFV"
      summary: "Ağ servis tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Ağ servis tanımı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "nsdSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Ağ servis tanımı veri transfer modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/NetServiceDescRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceDescResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceDescDTO"
      x-operation-save: "true"
  /nfva/nsr/delete:
    post:
      tags:
      - "NFV"
      summary: "ID değeri kullanılarak ağ servis kayıdını durduran fonksiyon."
      operationId: "nsrDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-operation-delete: "true"
      x-dto: "NetServiceRecordDTO"
  /nfva/nsr/get:
    post:
      tags:
      - "NFV"
      summary: "Çalıştırılmış ağı görüntüler"
      operationId: "nsrGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceRecordDTO"
      x-operation-get: "true"
  /nfva/nsr/list:
    post:
      tags:
      - "NFV"
      summary: "Çalıştırılmış ağların tümünü listeler"
      operationId: "nsrListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceRecordDTO"
      x-operation-list: "true"
  /nfva/nsr/save:
    post:
      tags:
      - "NFV"
      summary: "ID değeri kullanılarak ağ servis kayıdını çalıştıran fonksiyon."
      operationId: "nsrSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/NetServiceRecordLaunchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceRecordDTO"
      x-operation-save: "true"
  /nfva/nsr/update:
    post:
      tags:
      - "NFV"
      summary: "ID değeri kullanılarak ağ servis kayıdını çalıştıran fonksiyon."
      operationId: "nsrUpdatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/NetServiceRecordRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "NetServiceRecordDTO"
      x-operation-any: "update"
  /nfva/vim/computeHost/getByIp:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki ip degerine gore compute host'u doner"
      operationId: "vimComputeHostGetByIpPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/ComputeHostRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ComputeHostResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ComputeHostGenericDTO"
      x-operation-get: "true"
  /nfva/vim/computeHost/getStatistic:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vimComputeHostGetStatisticPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/ComputeHostStatisticRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ComputeHostStatisticResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ComputeStatisticsDTO"
      x-operation-get: "true"
  /nfva/vim/computeHost/list:
    post:
      tags:
      - "NFV"
      summary: "Compute host listesini doner"
      operationId: "vimComputeHostListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ComputeHostListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ComputeHostListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ComputeHostListDTO"
      x-operation-list: "true"
  /nfva/vim/getAllComputeHostStatistic:
    post:
      tags:
      - "NFV"
      summary: "Compute host'ta bulunan genel istatistiki bilgileri listeler"
      operationId: "vimGetAllComputeHostStatisticPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/ComputeHostStatisticListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/ComputeHostStatisticListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ComputeHostStatisticListDTO"
      x-operation-get: "true"
  /nfva/vim/list:
    post:
      tags:
      - "NFV"
      summary: "Sistem mevcut bütün VIM'leri listeler"
      operationId: "vimListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VimInfoListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VimInfoDTO"
      x-operation-list: "true"
  /nfva/vim/vm/restart:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vimVmRestartPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionInstanceActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: null
      x-operation-any: "restart"
  /nfva/vim/vm/start:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vimVmStartPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionInstanceActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: null
      x-operation-any: "start"
  /nfva/vim/vm/statusInfo:
    post:
      tags:
      - "NFV"
      summary: "OpenStack'te olan sanal makinaların anlık durumunu gösterir"
      operationId: "vimVmStatusInfoPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VimVmStatusInfoRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VimVmStatusInfoResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VimVmStatusInfoDTO"
      x-operation-any: "statusInfo"
  /nfva/vim/vm/stop:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vimVmStopPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionInstanceActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: null
      x-operation-any: "stop"
  /nfva/vim/zone/getByIp:
    post:
      tags:
      - "NFV"
      summary: "Ip'ye gore zone zone bilgisini getirir"
      operationId: "vimZoneGetByIpPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ZoneObjectDTO"
      x-operation-get: "true"
  /nfva/vim/zone/getByName:
    post:
      tags:
      - "NFV"
      summary: "Isime gore zone zone bilgisini getirir"
      operationId: "vimZoneGetByNamePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NetServiceRecordResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ZoneObjectDTO"
      x-operation-get: "true"
  /nfva/vim/zone/list:
    post:
      tags:
      - "NFV"
      summary: "Sistem mevcut bütün Zone'ları listeler"
      operationId: "vimZoneListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel listeleme istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VimInfoListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "ZoneObjectDTO"
      x-operation-list: "true"
  /nfva/vnf/delete:
    post:
      tags:
      - "NFV"
      summary: "İstenen sanal ağ fonksiyonu tanımı'ın silinmesini saglayan fonksiyon."
      operationId: "vnfDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-operation-delete: "true"
      x-dto: "VirtualNetFunctionDTO"
  /nfva/vnf/deregisterVnfFailOver:
    post:
      tags:
      - "NFV"
      summary: "Calisması durdurulacak vnf'in  isaretlenmesi"
      operationId: "vnfDeregisterVnfFailOverPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "aaa"
        required: true
        schema:
          $ref: "#/definitions/VnfActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-any: "deregisterVnfFailOver"
  /nfva/vnf/get:
    post:
      tags:
      - "NFV"
      summary: "ID değeri kullanılarak sanal ağ fonksiyonu tanımı detaylarının alı\
        ndığı fonksiyon."
      operationId: "vnfGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-get: "true"
  /nfva/vnf/list:
    post:
      tags:
      - "NFV"
      summary: "Sistemdeki tüm sanal ağ fonksiyonu tanımlaları'ın listesini dönen\
        \ fonksiyon."
      operationId: "vnfListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ fonksiyonu tanımı listeleme işlemi için kullanılacak\
          \ veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-list: "true"
  /nfva/vnf/registerVnfFailOver:
    post:
      tags:
      - "NFV"
      summary: "Calisması durdurulacak vnf'in  isaretlenmesi"
      operationId: "vnfRegisterVnfFailOverPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "aaa"
        required: true
        schema:
          $ref: "#/definitions/VnfActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-any: "registerVnfFailOver"
  /nfva/vnf/removeVnf:
    post:
      tags:
      - "NFV"
      summary: "İstenen  sanal ağ fonksiyonu tanımı'ın çalışmasını saglayan fonksiyon."
      operationId: "vnfRemoveVnfPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/VnfActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-any: "removeVnf"
  /nfva/vnf/save:
    post:
      tags:
      - "NFV"
      summary: "Sanal ağ fonksiyonu tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Sanal ağ fonksiyonu tanımı verilerinin saklanmasını sağlayan fonksiyondur.\
        \ (!)Dikkat: ID boş olması durumunda Insert işlemi yapılmalıdır."
      operationId: "vnfSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ fonksiyonu tanımı veri transfer modelini taşıyan istek\
          \ nesnesi."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-save: "true"
  /nfva/vnf/searchVnfInstanceInfo:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vnfSearchVnfInstanceInfoPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionInstanceListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-operation-search: "true"
      x-dto: "VirtualNetFunctionInstanceListDTO"
  /nfva/vnf/startVnf:
    post:
      tags:
      - "NFV"
      summary: "İstenen çalışan sanal ağ fonksiyonu silinmesini saglayan fonksiyon."
      operationId: "vnfStartVnfPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme isteğinin belirtildiği veri yapısı."
        required: true
        schema:
          $ref: "#/definitions/VnfActionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfActionResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-any: "startVnf"
  /nfva/vnf/update:
    post:
      tags:
      - "NFV"
      summary: "Sanal ağ fonksiyonu tanımı verilerinin saklanmasını sağlayan fonksiyondur."
      description: "Sanal ağ fonksiyonunun guncelleme servisi"
      operationId: "vnfUpdatePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sanal ağ fonksiyonu tanımı veri transfer modelini taşıyan istek\
          \ nesnesi."
        required: true
        schema:
          $ref: "#/definitions/VirtualNetFunctionRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VirtualNetFunctionDTO"
      x-operation-any: "update"
  /nfva/vnf/vnfci/start:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vnfVnfciStartPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VnfciActionResponse"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VnfciActionRequest"
      x-operation-any: "start"
  /nfva/vnf/vnfci/startByIp:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vnfVnfciStartByIpPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VnfciActionResponse"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VnfciActionRequest"
      x-operation-any: "startByIp"
  /nfva/vnf/vnfci/stop:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vnfVnfciStopPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VnfciActionResponse"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VnfciActionRequest"
      x-operation-any: "stop"
  /nfva/vnf/vnfci/stopByIp:
    post:
      tags:
      - "NFV"
      summary: "Sistemde ki compute host'un genel istatistiki degerini doner"
      operationId: "vnfVnfciStopByIpPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/VnfciActionResponse"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VirtualNetFunctionInstanceListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "NFV"
      x-dto: "VnfciActionRequest"
      x-operation-any: "stopByIp"
  /sdnip/policy/assignment/get:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Politika tipine göre politika detaylarının alınması için kullanılan\
        \ fonksiyondur."
      operationId: "sdnipPolicyAssignmentGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipPolicyAssignmentResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipPolicyAssignmentDTO"
      x-operation-get: "true"
  /sdnip/policy/assignment/save:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Politika tipine göre politika tanımı oluşturulmasını sağlayan servis."
      operationId: "sdnipPolicyAssignmentSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Politika tipine göre politika tanımı oluşturmak için kullanı\
          lan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipPolicyAssignmentSaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipPolicyAssignmentDTO"
      x-operation-save: "true"
  /sdnip/policy/assignment/search:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Arama kriterlerine uyan politika tipine göre politika tanımı bilgilerini\
        \ döner."
      operationId: "sdnipPolicyAssignmentSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Politika tipine göre politika tanımı arama kriterlerini tutan\
          \ veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipPolicyAssignmentListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-operation-search: "true"
      x-dto: "SdnipPolicyAssignmentDTO"
  /sdnip/policy/defined/set/delete:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip liste tanımı silmek için kullanılan servistir."
      operationId: "sdnipPolicyDefinedSetDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Silinmesi istenen liste tanımı numara bilgisi."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-operation-delete: "true"
      x-dto: "SdnipDefinedSetDTO"
  /sdnip/policy/defined/set/get:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip liste tanımı detaylarının alınması için kullanılan fonksiyondur."
      operationId: "sdnipPolicyDefinedSetGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipDefinedSetResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipDefinedSetDTO"
      x-operation-get: "true"
  /sdnip/policy/defined/set/save:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip liste tanımı oluşturulmasını sağlayan servis."
      operationId: "sdnipPolicyDefinedSetSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sdnip liste tanımı oluşturmak için kullanılan istek veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipDefinedSetSaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipDefinedSetDTO"
      x-operation-save: "true"
  /sdnip/policy/defined/set/search:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Arama kriterlerine uyan Sdnip liste tanımı bilgilerini döner."
      operationId: "sdnipPolicyDefinedSetSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sdnip liste tanımı arama kriterlerini tutan veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipDefinedSetListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-operation-search: "true"
      x-dto: "SdnipDefinedSetDTO"
  /sdnip/policy/delete:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip politika silmek için kullanılan servistir."
      operationId: "sdnipPolicyDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Silinmesi istenen politika numara bilgisi."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-operation-delete: "true"
      x-dto: "SdnipPolicyDTO"
  /sdnip/policy/get:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip Politika detaylarının alınması için kullanılan fonksiyondur."
      operationId: "sdnipPolicyGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipPolicyResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipPolicyDTO"
      x-operation-get: "true"
  /sdnip/policy/save:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Sdnip politika oluşturulmasını sağlayan servis."
      operationId: "sdnipPolicySavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sdnip politika oluşturmak için kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipPolicySaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-dto: "SdnipPolicyDTO"
      x-operation-save: "true"
  /sdnip/policy/search:
    post:
      tags:
      - "SdnipPolicy"
      summary: "Arama kriterlerine uyan Sdnip politika bilgilerini döner."
      operationId: "sdnipPolicySearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sdnip politika arama kriterlerini tutan veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipPolicyListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SdnipPolicy"
      x-operation-search: "true"
      x-dto: "SdnipPolicyDTO"
  /sdnip/router/as/number/get:
    post:
      tags:
      - "Sdnip"
      summary: "otomon sistem numarasını veren servistir."
      operationId: "sdnipRouterAsNumberGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sdnip genel istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipASNumberResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-get: "true"
  /sdnip/router/delete:
    post:
      tags:
      - "Sdnip"
      summary: "Rotalayıcı silmek için kullanılan servistir."
      operationId: "sdnipRouterDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Silinmesi istenen rotalayıcı numara bilgisi."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-delete: "true"
      x-dto: "SdnipRouterDTO"
  /sdnip/router/get:
    post:
      tags:
      - "Sdnip"
      summary: "Talep edilen ağ topolojisinin detaylarının alınması için kullanılan\
        \ fonksiyondur."
      operationId: "sdnipRouterGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipRouterResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-dto: "SdnipRouterDTO"
      x-operation-get: "true"
  /sdnip/router/neighbor/delete:
    post:
      tags:
      - "Sdnip"
      summary: "BGP sözcüsüne atanmış tüm komşulukları silmek için kullanılan servistir."
      operationId: "sdnipRouterNeighborDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Komşulukları kaldırılmak istenen BGP sözcüsü numarası."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-delete: "true"
      x-dto: "NeighborRelationDTO"
  /sdnip/router/neighbor/get:
    post:
      tags:
      - "Sdnip"
      summary: "Bir BGP sözcüsüne ait eş yönlendiriciler bilgisini veren servistir."
      operationId: "sdnipRouterNeighborGetPOST"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel ID değeri istek yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NeighborRelationResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-dto: "NeighborRelationDTO"
      x-operation-get: "true"
  /sdnip/router/neighbor/save:
    post:
      tags:
      - "Sdnip"
      summary: "Sdnip rotalayıcıya komşu atamak için kullanılan servistir."
      operationId: "sdnipRouterNeighborSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sdnip rotalayıcıya komşu atamak için kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/NeighborRelationSaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-dto: "NeighborRelationDTO"
      x-operation-save: "true"
  /sdnip/router/neighbor/search:
    post:
      tags:
      - "Sdnip"
      summary: "Arama kriterlerine BGP komşuluk bilgilerini döner."
      operationId: "sdnipRouterNeighborSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "BGP komşuluk arama kriterlerini tutan veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NeighborRelationListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-search: "true"
      x-dto: "NeighborRelationDTO"
  /sdnip/router/neighbor/status/list:
    post:
      tags:
      - "Sdnip"
      summary: "Bir BGP sözcüsünün komşuları ile olan bağlantı durumunu verir."
      operationId: "sdnipRouterNeighborStatusListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Komşuluk bağlantı durumu istenen BGP sözcüsü numarası."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/NeighborRelationStatusListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-dto: "NeighborRelationDTO"
      x-operation-list: "true"
  /sdnip/router/route/delete:
    post:
      tags:
      - "Sdnip"
      summary: "Rota silmek için kullanılan servistir."
      operationId: "sdnipRouterRouteDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Silinmesi istenen rota numara bilgisi."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-delete: "true"
  /sdnip/router/route/save:
    post:
      tags:
      - "Sdnip"
      summary: "Sdnip rota anons etmeyi sağlayan servis."
      operationId: "sdnipRouterRouteSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sdnip rota tanımlamak için kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipRouteSaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-save: "true"
  /sdnip/router/route/search:
    post:
      tags:
      - "Sdnip"
      summary: "Bir otomon sistem içindeki ve öğrenilmiş rotaları arama için kullanı\
        lan servistir."
      operationId: "sdnipRouterRouteSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Rota arama için kullanılan istek veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipRouteListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-search: "true"
      x-dto: "SdnipRouteDTO"
  /sdnip/router/save:
    post:
      tags:
      - "Sdnip"
      summary: "Sdnip rotalayıcı oluşturulmasını sağlayan servis."
      operationId: "sdnipRouterSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yeni sdnip rotalayıcı oluşturmak için kullanılan istek veri\
          \ modelidir."
        required: true
        schema:
          $ref: "#/definitions/SdnipRouterSaveRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-dto: "SdnipRouterDTO"
      x-operation-save: "true"
  /sdnip/router/search:
    post:
      tags:
      - "Sdnip"
      summary: "Arama kriterlerine uyan yönlendirici bilgilerini döner."
      operationId: "sdnipRouterSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Yönlendirici arama kriterlerini tutan veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SdnipRouterListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sdnip"
      x-operation-search: "true"
      x-dto: "SdnipRouterDTO"
  /sfc/chain/delete:
    post:
      tags:
      - "Sfc"
      summary: "Sfc silinmesini sağlayan fonksiyondur."
      description: "Sfc silinmesini sağlayan fonksiyondur."
      operationId: "sfcChainDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sfc"
      x-operation-delete: "true"
      x-dto: "SfcDTO"
  /sfc/chain/get:
    post:
      tags:
      - "Sfc"
      summary: "Sfc dönmesini sağlayan fonksiyondur."
      description: "Sfc dönmesini sağlayan fonksiyondur."
      operationId: "sfcChainGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel getirme talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sfc"
      x-dto: "SfcDTO"
      x-operation-get: "true"
  /sfc/chain/list:
    post:
      tags:
      - "Sfc"
      summary: "Sfc listelenmesini sağlayan fonksiyondur."
      description: "Sfc listelenmesini sağlayan fonksiyondur."
      operationId: "sfcChainListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel liste talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sfc"
      x-dto: "SfcDTO"
      x-operation-list: "true"
  /sfc/chain/save:
    post:
      tags:
      - "Sfc"
      summary: "Sfc tanımlaması için kullanılan fonksiyondur."
      description: "Sfc tanımlaması için kullanılan fonksiyondur."
      operationId: "sfcChainSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Sfc tanımlama modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/SfcRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sfc"
      x-dto: "SfcDTO"
      x-operation-save: "true"
  /sfc/chain/search:
    post:
      tags:
      - "Sfc"
      summary: "Sfc arasında arama için kullanılan fonksiyondur."
      description: "Sfc arasında arama için kullanılan fonksiyondur."
      operationId: "sfcChainSearchPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel sorgu yapılmasını sağlayan veri modeli."
        required: true
        schema:
          $ref: "#/definitions/GenericSearchRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Sfc"
      x-operation-search: "true"
      x-dto: "SfcDTO"
  /sfc/sfcType/list:
    post:
      tags:
      - "SfcType"
      summary: "Sfc tiplerinin listelenmesini sağlayan fonksiyondur."
      description: "Sfc tiplerinin listelenmesini sağlayan fonksiyondur."
      operationId: "sfcSfcTypeListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel liste talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/SfcTypeListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "SfcType"
      x-dto: "SfcTypeDTO"
      x-operation-list: "true"
  /sfc/vnfd/list:
    post:
      tags:
      - "Vnfd"
      summary: "Vnf tanımlarının listelenmesini sağlayan fonksiyondur."
      description: "Vnf tanımlarının listelenmesini sağlayan fonksiyondur."
      operationId: "sfcVnfdListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel liste talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfdListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Vnfd"
      x-dto: "VnfdDTO"
      x-operation-list: "true"
  /sfc/vnfr/delete:
    post:
      tags:
      - "Vnfr"
      summary: "Vnfr silinmesini sağlayan fonksiyondur."
      description: "Vnfr silinmesini sağlayan fonksiyondur."
      operationId: "sfcVnfrDeletePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel silme talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericDeleteRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfrResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Vnfr"
      x-operation-delete: "true"
      x-dto: "VnfrDTO"
  /sfc/vnfr/get:
    post:
      tags:
      - "Vnfr"
      summary: "Vnfr dönmesini sağlayan fonksiyondur."
      description: "Vnfr dönmesini sağlayan fonksiyondur."
      operationId: "sfcVnfrGetPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel getirme talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericIdRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfrResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Vnfr"
      x-dto: "VnfrDTO"
      x-operation-get: "true"
  /sfc/vnfr/list:
    post:
      tags:
      - "Vnfr"
      summary: "Vnfr tanımlarının listelenmesini sağlayan fonksiyondur."
      description: "Vnfr tanımlarının listelenmesini sağlayan fonksiyondur."
      operationId: "sfcVnfrListPOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Genel liste talebi için kullanılacak veri modelidir."
        required: true
        schema:
          $ref: "#/definitions/GenericListRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfrListResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Vnfr"
      x-dto: "VnfrDTO"
      x-operation-list: "true"
  /sfc/vnfr/save:
    post:
      tags:
      - "Vnfr"
      summary: "Vnfr tanımlaması için kullanılan fonksiyondur."
      description: "Vnfr tanımlaması için kullanılan fonksiyondur."
      operationId: "sfcVnfrSavePOST"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "request"
        description: "Vnfr tanımlama modelini taşıyan istek nesnesi."
        required: true
        schema:
          $ref: "#/definitions/VnfrRequest"
      responses:
        200:
          description: "Başarılı işlemler (SUCCESS)"
          schema:
            $ref: "#/definitions/VnfrResponse"
        300:
          description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        400:
          description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
          schema:
            $ref: "#/definitions/GenericResponse"
        500:
          description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
          schema:
            $ref: "#/definitions/GenericResponse"
      x-swagger-router-controller: "Vnfr"
      x-dto: "VnfrDTO"
      x-operation-save: "true"
definitions:
  RETURN_STATUS:
    type: "string"
    title: "RETURN_STATUS"
    description: "Tüm API cevaplarında kullanılacak genel durum belirten değerdir."
    enum:
    - "SUCCESS"
    - "ERROR"
    - "SERVER_ERROR"
    - "ACCESS_DENIED"
    - "ACCESS_LIMITED"
    - "NOT_MODIFIED"
    - "NOT_IMPLEMENTED"
    - "INVALID_SESSION"
    - "DEPRECATED"
    default: "NOT_IMPLEMENTED"
  QUERY_OP:
    type: "string"
    title: "QUERY_OP"
    description: "Tüm arama API’larında kullanılacak işlem değeridir."
    enum:
    - "NOOP"
    - "VALUE"
    - "AND"
    - "OR"
    - "NOT"
    - "EXACT_VALUE"
    - "GREATER"
    - "SMALLER"
    - "GREATER_EQUAL"
    - "SMALLER_EQUAL"
    - "LIST"
    default: "NOOP"
  UNIQUENESS_TYPE:
    type: "string"
    title: "UNIQUENESS_TYPE"
    description: "Sorgulama cevaplarında kullanılacak değerdir."
    enum:
    - "UNIQUE"
    - "NON_UNIQUE"
    - "UNKNOWN"
    default: "UNKNOWN"
  SecurityToken:
    type: "object"
    required:
    - "requestId"
    - "timestamp"
    properties:
      requestId:
        type: "string"
        description: "Her istek için yeniden üretilecek bir değer. Bu değer her isteğ\
          in tek seferlik olmasını sağlayacak ve sistem günlüklerine kayıt edilerek\
          \ isteklerin uçtan uca takibini kolaylaştıracaktır. Timestamp ve Gizli bir\
          \ Anahtar kullanılarak üretilecektir."
        maxLength: 32
      timestamp:
        type: "string"
        format: "date-time"
        description: "İstek ve cevabın oluştuğu tarih-saat bilgisi [RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)’\
          da tanımlanmış formatta bu alanda saklanacaktır."
    externalDocs:
      description: "Daha fazla detay için API Tasarım Dokümanını inceleyiniz."
      url: "http://milat.argela.com.tr/Shared%20Documents/ARG_NWI_SECN_SSMU_MLAT/WREQ-1119/Ortak%20Ç\
        alışma/UI%20Grubu%20Çalışmaları/Mimari%20ve%20Tasarım%20Dökümanları/API%20Tasarı\
        m%20Dokümanı.docx?web=1"
    description: "API iletişimi sırasında iletilen verilerin güvenliğinin sağlanması\
      \ ve fonksiyonlara yapılan isteklerin kontrol edilmesi amacıyla tüm istek-cevap\
      \ verilerinde eklenecek veri yapısıdır."
  ErrorInfo:
    type: "object"
    required:
    - "code"
    properties:
      code:
        type: "integer"
        format: "int32"
        description: "Hata kodu. İstek yapılan fonksiyona göre farklılık gösterecektir."
        readOnly: true
      message:
        type: "string"
        description: "Hata ile ilgili kısa açıklama."
        readOnly: true
      extras:
        type: "object"
        description: "Hata ile ilgili verilerin eklenebileceği genel alan."
        properties: {}
    description: "API cevaplarında hata oluşması durumunda, hata detayları bu veri\
      \ yapısı kullanılarak istemcilere iletilecektir. "
  AbstractSortOptions:
    type: "object"
    required:
    - "fieldName"
    properties:
      fieldName:
        type: "string"
        description: "Veri modelinde sıralama yapılmak istenen alanın adı."
      isAscend:
        type: "boolean"
        description: "Değerinin anlamına göre; - 'true':  Küçükten-Büyüğe, - 'false':\
          \ Büyükten-Küçüğe sıralama yaptıran parametre."
        default: true
    description: "API fonksiyonlarında veri sıralamasının nasıl yapılacağının iletilmesini\
      \ sağlayan soyut veri modelidir."
  SortOptions:
    allOf:
    - $ref: "#/definitions/AbstractSortOptions"
    - type: "object"
    description: "API fonksiyonlarında veri sıralamasının nasıl yapılacağının iletilmesini\
      \ sağlayan soyut veri modelidir."
  QueryOptions:
    type: "object"
    required:
    - "operator"
    properties:
      operator:
        $ref: "#/definitions/QUERY_OP"
      fieldName:
        type: "string"
        description: "Arama yapılacak veri modeli alanının adı. "
      fieldValue:
        type: "string"
        description: "Aranacak değer."
      leftQuery:
        $ref: "#/definitions/QueryOptions"
      rightQuery:
        $ref: "#/definitions/QueryOptions"
    description: "API fonksiyonlarında arama yapılması için kullanılacak kıstasları\
      n tanımlanmasını sağlayan soyut veri modelidir."
  AbstractListOptions:
    type: "object"
    required:
    - "startPage"
    properties:
      startPage:
        type: "integer"
        format: "int64"
        description: "Sayfalama için başlangıç sayfa değeri.'0' değeri ilk sayfayı\
          \ belirtir."
        default: 0
      pageSize:
        type: "integer"
        format: "int64"
        description: "Sayfalama için bir sayfada kaç adet öğe olacağını tanımlayan\
          \ değer. '0' verilmesi durumunda sayfalama işlemi yapılmayacak ve tüm veriler\
          \ listelenecektir."
        default: 10
      sortOptions:
        $ref: "#/definitions/SortOptions"
      fields:
        type: "array"
        description: "Veri transfer modelindeki verilerden sadece bu listede belirtilen\
          \ alanlar dönülecektir. 'null' olması durumunda tüm alanlar dönülecektir."
        items:
          type: "string"
    description: "Tüm listeleme fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan soyut veri modelidir."
  ListOptions:
    allOf:
    - $ref: "#/definitions/AbstractListOptions"
    - type: "object"
    description: "Tüm listeleme fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan veri modelidir."
  AbstractSearchOptions:
    allOf:
    - $ref: "#/definitions/AbstractListOptions"
    - type: "object"
      properties:
        queryOptions:
          $ref: "#/definitions/QueryOptions"
    description: "Tüm Arama fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan soyut veri modelidir."
  SearchOptions:
    allOf:
    - $ref: "#/definitions/AbstractSearchOptions"
    - type: "object"
    description: "Tüm Arama fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan veri modelidir."
  AbstractDeleteOptions:
    type: "object"
    required:
    - "id"
    - "isReturnModel"
    properties:
      id:
        type: "string"
        description: "Silinmek istenen modelin ID değeri."
      isReturnModel:
        type: "boolean"
        description: "Silinen modelin verilerinin cevapta dönülüp dönülmemesini kontrol\
          \ eden değer.'true' ise silinen model cevapta dönülür. Varsılan olarak 'false'."
        default: false
    description: "Tüm Silme fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan soyut veri modelidir."
  DeleteOptions:
    allOf:
    - $ref: "#/definitions/AbstractDeleteOptions"
    - type: "object"
    description: "Tüm Silme fonksiyonlarında kullanılacak kıstasların tanımlanması\
      nı sağlayan veri modelidir."
  BaseDTO:
    type: "object"
    required:
    - "revision"
    - "timestamp"
    - "version"
    properties:
      id:
        type: "string"
        description: "Veri tekil anahtarı(primary key) değeridir."
        minLength: 0
        maxLength: 32
        default: ""
      version:
        type: "integer"
        format: "int32"
        description: "Veri yapısının sürüm değeri. Bilgi amaçlı olup hardcoded bir\
          \ değer olacaktır."
        readOnly: true
        default: 1
      revision:
        type: "integer"
        format: "int32"
        description: "Verinin revizyon numarası. Veride her değişiklik olduğunda 1\
          \ arttırılacaktır."
        default: 1
      timestamp:
        type: "string"
        format: "date-time"
        description: "[RFC3339](http://xml2rfc.ietf.org/public/rfc/html/rfc3339.html#anchor14)’\
          da tanımlanmış formatta tarih-saat verisi. Veride her değişiklik olduğunda\
          \ güncellenecektir."
    description: "Temel veri transfer model tanımıdır. Tüm veri transfer modelleri\
      \ bu model’i temel alarak tanımlanacaktır."
  BaseListDTO:
    type: "object"
    required:
    - "currentPageNumber"
    - "currentPageSize"
    - "sortOptions"
    - "totalItems"
    - "totalPages"
    properties:
      currentPageNumber:
        type: "integer"
        format: "int64"
        description: "Listelenmekte olan verilerin mevcut sayfa numarasıdır.'0' değ\
          eri ilk sayfayı belirtir."
        readOnly: true
        default: 0
      currentPageSize:
        type: "integer"
        format: "int64"
        description: "Sayfalama için bir sayfada kaç adet öğe olduğunu belirten değ\
          er. '0' olması durumunda sayfalama işlemi yapılmamakta ve tüm veriler listelenmektedir."
        readOnly: true
        default: 0
      totalPages:
        type: "integer"
        format: "int64"
        description: "Sistemde yer alan tüm verilere göre toplam sayfa sayısını belirtir."
        default: 0
      totalItems:
        type: "integer"
        format: "int64"
        description: "Sistemde yer alan tüm verilerin sayısını belirtir."
        default: 0
      sortOptions:
        description: "İstek sırasında belirtilen sıralama ayarları bu alanda geri\
          \ dönülür."
        $ref: "#/definitions/SortOptions"
    description: "Temel liste dönülen veri transfer model tanımıdır. Tüm liste fonksiyonları\
      ndan dönülecek veri transfer modelleri bu model’i temel alarak tanımlanacaktı\
      r."
  UniquenessControlDTO:
    type: "object"
    required:
    - "fieldName"
    - "value"
    properties:
      fieldName:
        type: "string"
        description: "Veritabanından sorgulanacak alanın/kolonun adı"
      value:
        type: "string"
        description: "Veritabanından sorgulanacak değer bilgisi"
    description: "Temel liste dönülen veri transfer model tanımıdır. Tüm liste fonksiyonları\
      ndan dönülecek veri transfer modelleri bu model’i temel alarak tanımlanacaktı\
      r."
  GenericRequest:
    type: "object"
    required:
    - "token"
    properties:
      token:
        $ref: "#/definitions/SecurityToken"
      etag:
        type: "string"
        description: "Önbellek kontrolü için kullanılacak alan."
      digest:
        type: "string"
        description: "İstek verilerinin bütünlüğünün kontrol edilmesi için kullanı\
          lacak bir sayısal imza verisi olacaktır."
    description: "API sisteminde tüm istekler için kullanılacak veri modelleri bu\
      \ veri modeli temel alınarak tanımlanacaktır."
  GenericIdRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "ID değeri."
    description: "Genel olarak ID değeri ile yapılan isteklerde kullanılan veri yapı\
      sı."
  GenericIdListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "idList"
      properties:
        idList:
          type: "array"
          description: "ID listesi"
          items:
            type: "string"
    description: "Genel olarak ID listesi ile yapılan isteklerde kullanılan veri yapı\
      sı."
  GenericListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/ListOptions"
    description: "API sisteminde listeleme işlemleri için kullanılacak genel veri\
      \ modelidir."
  GenericSearchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/SearchOptions"
    description: "API sisteminde arama istekleri için kullanılacak genel veri modelidir."
  GenericDeleteRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/DeleteOptions"
    description: "API sisteminde silme istekleri için kullanılacak genel veri modelidir."
  ApiCoreRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
    description: "Api Core modülünün basic request türü"
  UniquenessControlRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/UniquenessControlDTO"
    description: "Benzersiz olması gereken alanları veritabanından sorgulamak için\
      \ kullanılan veri modelidir."
  ApiCoreResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
    description: "Api Core modülünün basic response türü"
  GenericResponse:
    type: "object"
    required:
    - "status"
    - "token"
    properties:
      token:
        $ref: "#/definitions/SecurityToken"
      etag:
        type: "string"
        description: "Önbellek kontrolü için kullanılacak alan."
      digest:
        type: "string"
        description: "İstek verilerinin bütünlüğünün kontrol edilmesi için kullanı\
          lacak bir sayısal imza verisi olacaktır."
      status:
        description: "İstek durumunun belirtildiği enum tipi."
        $ref: "#/definitions/RETURN_STATUS"
      errorInfo:
        description: "Hata durumlarında, hata detaylarının iletilmesi için kullanı\
          labilecek veri tipi."
        $ref: "#/definitions/ErrorInfo"
    description: "API sisteminde tüm cevaplar için kullanılacak veri modelleri bu\
      \ veri modeli temel alınarak tanımlanacaktır."
  IdResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "ID değeri."
    description: "ID değeri dönülen işlemlerin cevap veri yapısı."
  UniquenessControlResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          description: "Benzersiz alan sorgulamasının sonuç değeri"
          $ref: "#/definitions/UNIQUENESS_TYPE"
    description: "Benzersiz olması gereken alanları veritabanı sorgulamasının cevap\
      \ veri modelidir."
  LOG_LEVEL:
    type: "string"
    title: "LOG_LEVEL"
    description: "Günlük seviyesini belirten ENUM değeri.\nDeğerler şunlardır;\n\n\
      | Adı   | Açıklama                      |\n|:------|:------------------------------|\n\
      | OFF   | Günlük Kapalı.                |\n| FATAL | Ölümcül  Günlük Seviyesi.\
      \     |\n| ERROR | Hata Günlük Seviyesi.         |\n| WARN  | Uyarı Günlük Seviyesi\
      \         |\n| INFO  | Bilgi Günlük Seviyesi         |\n| DEBUG | Hata Ayıklama\
      \ Günlük Seviyesi |\n| TRACE | Takip Günlük Seviyesi         |\n| ALL   | Tü\
      m Seviyeler.                |\n"
    enum:
    - "OFF"
    - "FATAL"
    - "ERROR"
    - "WARN"
    - "INFO"
    - "DEBUG"
    - "TRACE"
    - "ALL"
    default: "ALL"
  LogLevelListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Günlük mesajlarının bulunduğu listelerin yer aldığı veri yapı\
            sıdır."
          items:
            $ref: "#/definitions/LogLevelDTO"
    description: "Günlük verilerinin seviyelerinin listelerinin yer aldığı veri yapı\
      sıdır."
  LogLevelDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "displayName"
      - "level"
      properties:
        displayName:
          type: "string"
          description: "Günlük verileri dosyasının adı"
        level:
          description: "Günlük seviyesi."
          $ref: "#/definitions/LOG_LEVEL"
    description: "Günlük verilerinin seviyelerinin bulunduğu veri yapısı."
  LogDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "level"
      - "message"
      properties:
        level:
          description: "Günlük seviyesi."
          $ref: "#/definitions/LOG_LEVEL"
        message:
          type: "string"
          description: "Günlük’e eklenecek mesaj."
        extras:
          type: "object"
          description: "Günlüğe eklenecek ekstra veriler."
          properties: {}
    description: "Günlük verilerinin yer aldığı veri yapısıdır."
  LogLevelListRequest:
    allOf:
    - $ref: "#/definitions/GenericIdRequest"
    - type: "object"
    description: "Günlük verilerinin seviyelerinin listelenmesi için kullanılan veri\
      \ yapısı"
  LogLevelRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/definitions/LogLevelDTO"
    description: "Günlük verilerinin seviyelerinin değiştirilebilmesi için kullanı\
      lan veri yapısı"
  SaveLogRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LogDTO"
    description: "Günlük verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı"
  SaveLogListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/definitions/LogDTO"
    description: "Günlük verilerinin toplu olarak sunucuya iletilmesi için kullanı\
      lan veri yapısı"
  LogLevelListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LogLevelListDTO"
    description: "Günlük listeleme işleminin cevap veri yapısı."
  LogLevelResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LogLevelListDTO"
    description: "Günlük seviye değişimi işleminin cevap veri yapısı."
  LogResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    description: "Günlük işleminin cevap veri yapısı."
  TOPOLOGY_TYPE:
    type: "string"
    title: "TOPOLOGY_TYPE"
    description: "Topoloji tipini belirten ENUM değeri.\nDeğerler şunlardır;\n\n|\
      \ Adı             | Açıklama                 |\n|:----------------|:-------------------------|\n\
      | PHYSICAL        | Fiziksel Topoloji        |\n| VIRTUAL         | Sanal Topoloji\
      \           |\n| VIRTUAL_REQUEST | Sanal ağ İstek Topolojisi|\n| SUPER     \
      \      | WAN Topolojisi           |\n"
    enum:
    - "PHYSICAL"
    - "VIRTUAL"
    - "VIRTUAL_REQUEST"
    - "SUPER"
    default: "PHYSICAL"
  TOPOLOGY_ITEM_TYPE:
    type: "string"
    title: "TOPOLOGY_ITEM_TYPE"
    description: "Topoloji öğe tipini belirten ENUM değeri.\nDeğerler şunlardır;\n\
      \n| Adı      | Açıklama          |\n|:---------|:------------------|\n| TOPOLOGY\
      \ | Topoloji Tanımı   |\n| SWITCH   | Anahtarlayıcı     |\n| LINK     | Bağ\
      lantı          |\n| HOST     | Uç Birim Cihazı   |\n"
    enum:
    - "TOPOLOGY"
    - "SWITCH"
    - "LINK"
    - "HOST"
    default: "TOPOLOGY"
  TOPOLOGY_STATUS:
    type: "string"
    title: "TOPOLOGY_STATUS"
    description: "Topoloji durumunu belirten ENUM değeridir.\nDeğerler şunlardır;\n\
      \n| Adı      | Açıklama                                             |\n|:---------|:-----------------------------------------------------|\n\
      | DOWN          | Topoloji çökmüş durumda                         |\n| PARTIAL_DOWN\
      \  | Topoloji sorunlu, düşük performansta çalışıyor. |\n| ACTIVE        | Topoloji\
      \ problemsiz durumda                     |\n| DESIGNED      | Topoloji tasarlanmı\
      ş durumda.                   |\n| SUBMITTED     | Topoloji onay bekliyor durumda\
      \                  |\n| SETUP         | Topoloji oluşturuluyor.            \
      \             |\n| SUSPENDED     | Topoloji askıda.                        \
      \        |\n| REJECTED      | Topoloji red edilmiş.                        \
      \   |\n| INVALID       | Topoloji kullanılamaz durumda.                  |\n"
    enum:
    - "DOWN"
    - "PARTIAL_DOWN"
    - "ACTIVE"
    - "DESIGNED"
    - "SUBMITTED"
    - "SETUP"
    - "SUSPENDED"
    - "REJECTED"
    - "INVALID"
    default: "DOWN"
  SWITCH_STATUS:
    type: "string"
    title: "SWITCH_STATUS"
    description: "Anahtarlayıcı durumunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı         | Açıklama                               |\n|:------------|:---------------------------------------|\n\
      | DOWN        | Anahtarlayıcı çökmüş durumda           |\n| UP          | Anahtarlayı\
      cı problemsiz durumda       |\n| POWER_SAVER | Anahtarlayıcı enerji tasarrufu\
      \ modunda |\n| EMERGENCY   | Anahtarlayıcı acil durumda             |\n"
    enum:
    - "DOWN"
    - "UP"
    - "POWER_SAVER"
    - "EMERGENCY"
    default: "DOWN"
  SWITCH_MODE:
    type: "string"
    title: "SWITCH_MODE"
    description: "Anahtarlayıcı modunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı         | Açıklama         |\n|:------------|:-----------------|\n\
      | ACTIVE      | Aktif durumda.   |\n| PASSIVE     | Pasif durumda.   |\n| BACKUP\
      \      | Yedek durumunda. |\n| MAINTANENCE | Bakımda.         |\n"
    enum:
    - "ACTIVE"
    - "PASSIVE"
    - "BACKUP"
    - "MAINTANENCE"
    default: "PASSIVE"
  DEVICE_TYPE:
    type: "string"
    title: "DEVICE_TYPE"
    description: "Cihaz tipini belirten ENUM değeridir.\nDeğerler şunlardır;\n\n|\
      \ Adı             | Açıklama                       |\n|:----------------|:-------------------------------|\n\
      | PHISICAL_SWITCH | Fiziksel Anahtarlayıcı.        |\n| VIRTUAL_SWITCH  | Sanal\
      \ Anahtarlayıcı.           |\n| LEGACY_SWITCH   | Geleneksel Anahtarlayıcı.\
      \      |\n| ROUTER          | Yönlendirici.                  |\n| MODEM    \
      \       | Modem.                         |\n| ACCESS_POINT    | Erişim Noktası\
      .                |\n| IP_PHONE        | IP Telefon                     |\n|\
      \ APPLIANCE       | Ağ Uygulaması (firewall, vs..) |\n| UNKNOWN         | Bilinmiyor.\
      \                    |\n"
    enum:
    - "PHISICAL_SWITCH"
    - "VIRTUAL_SWITCH"
    - "LEGACY_SWITCH"
    - "ROUTER"
    - "MODEM"
    - "ACCESS_POINT"
    - "IP_PHONE"
    - "APPLIANCE"
    - "UNKNOWN"
    default: "UNKNOWN"
  PORT_STATE:
    type: "string"
    title: "PORT_STATE"
    description: "Anahtarlayıcı Portunun kontrolcü tarafından yapılandırılamayan durum\
      \ belirten ENUM değeridir.\nDeğerler şunlardır;\n\n| Adı          | Açıklama\
      \                                     |\n|:-------------|:---------------------------------------------|\n\
      | LINK_DOWN    | Fiziksel link kopmuş.                        |\n| BLOCKED \
      \     | Port engellenmiş.                            |\n| LIVE         | Port\
      \ aktif.                                  |\n| STP_LISTEN   | Stp aktif.   \
      \                                |\n"
    enum:
    - "LINK_DOWN"
    - "BLOCKED"
    - "LIVE"
    - "STP_LISTEN"
    default: "LINK_DOWN"
  PORT_CONFIG:
    type: "string"
    title: "PORT_CONFIG"
    description: "Anahtarlayıcı Portunun durumunu belirten ENUM değeridir. Bunlar\
      \ port davranışlarını yapılandırmak için kullanılırlar.\nDeğerler şunlardır;\n\
      \n| Adı          | Açıklama                                     |\n|:-------------|:---------------------------------------------|\n\
      | PORT_DOWN    | Port, yönetimsel olarak kapatılmış.          |\n| NO_RECV \
      \     | Açıklama için SITD Dokümanı EK-B’ye bakınız. |\n| NO_FWD       | Açı\
      klama için SITD Dokümanı EK-B’ye bakınız. |\n| NO_PACKET_IN | Açıklama için\
      \ SITD Dokümanı EK-B’ye bakınız. |\n"
    enum:
    - "PORT_DOWN"
    - "NO_RECV"
    - "NO_FWD"
    - "NO_PACKET_IN"
    default: "PORT_DOWN"
  ALARM_STATUS:
    type: "string"
    title: "ALARM_STATUS"
    description: "Alarm durumu"
    enum:
    - "ON"
    - "OFF"
    - "NONE"
    default: "NONE"
  LINK_MEDIUM:
    type: "string"
    title: "LINK_STATUS"
    description: "nın veri iletimi için kullandığı ortam tipini belirten ENUM değ\
      eridir.\nDeğerler şunlardır;\n\n| Adı      | Açıklama                      \
      \  |\n|:---------|:--------------------------------|\n| COPPER   | Bakır kablo\
      \ ile bağlantı.       |\n| OPTICAL  | Fiber optik kablo ile bağlantı. |\n| WIRELESS\
      \ | Kablosuz iletişim.              |\n"
    enum:
    - "COPPER"
    - "OPTICAL"
    - "WIRELESS"
    default: "COPPER"
  CONNECTION_TYPE:
    type: "string"
    title: "CONNECTION_TYPE"
    description: "Bağlantının hangi 2 tip cihaz arasında kurulduğunu belirten ENUM\
      \ değeridir.\n| Adı          | Açıklama           |\n|:-------------|:-------------------|\n\
      | OF_SWITCH    | OpenFlow Switch    |\n| OF_LEGACY    | OpenFlow - Legacy  |\n\
      | OTHER        | Diğer              |\n"
    enum:
    - "OF_SWITCH"
    - "OF_LEGACY"
    - "OTHER"
    default: "OTHER"
  LINK_STATUS:
    type: "string"
    title: "LINK_STATUS"
    description: "Bağlantı durumunu belirten ENUM değeridir.\nDeğerler şunlardır;\n\
      \n| Adı     | Açıklama              |\n|:--------|:----------------------|\n\
      | DOWN    | Bağlantı arızalı.     |\n| BLOCKED | Bağlantı engellenmiş. |\n|\
      \ LIVE    | Bağlantı aktif.       |\n| LEGACY  | Bağlantı geleneksel.  |\n|\
      \ INDIRECT| Dolaylı bağlantı.     |\n"
    enum:
    - "DOWN"
    - "BLOCKED"
    - "LIVE"
    - "LEGACY"
    - "INDIRECT"
    default: "DOWN"
  HOST_TYPE:
    type: "string"
    title: "HOST_TYPE"
    description: "Uç Birimlerin tipini belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı          | Açıklama           |\n|:-------------|:-------------------|\n\
      | COMPUTER     | Bilgisayar.        |\n| PRINTER      | Yazıcı.            |\n\
      | PHONE        | Telefon.           |\n| IPTV_STB     | IPTV Cihazı.       |\n\
      | SMART_TV     | Akıllı Televizyon. |\n| MEDIA_PLAYER | Medya Oynatıcı.    |\n\
      | CELL_PHONE   | Cep Telefonu       |\n| CAMERA       | Video Kamera.      |\n\
      | SERVER       | Sunucu.            |\n| SFC_FIREWALL | Güvenlik Duvarı.   |\n\
      | LOAD_BALANCER| Yük Dengeleyici.   |\n| DPI          | Derin Paket İncl.  |\n\
      | UNKNOWN      | Bilinmiyor.        |\n"
    enum:
    - "COMPUTER"
    - "PRINTER"
    - "PHONE"
    - "IPTV_STB"
    - "SMART_TV"
    - "MEDIA_PLAYER"
    - "CELL_PHONE"
    - "CAMERA"
    - "SERVER"
    - "SFC_FIREWALL"
    - "LOAD_BALANCER"
    - "DPI"
    - "UNKNOWN"
    default: "UNKNOWN"
  HOST_STATUS:
    type: "string"
    title: "HOST_STATUS"
    description: "Uç Birimlerin durumunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı     | Açıklama              |\n|:--------|:----------------------|\n\
      | LIVE    | Bağlantı aktif.       |\n| GRANTED | Bağlantı kimlik doğrulaması\
      \ yapılmış. |\n"
    enum:
    - "LIVE"
    - "GRANTED"
    default: "LIVE"
  DOMAIN_STATUS:
    type: "string"
    title: "HOST_STATUS"
    description: "Uç Birimlerin durumunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı           | Açıklama                        |\n|:--------------|:--------------------------------|\n\
      | UP            | Domain aktif.                   |\n| POWER_SAVER   | Domain\
      \ güç tasarrufu durumunda. |\n| EMERGENCY     | Domain acil durumda.       \
      \     |\n| DOWN          | Domain aktif değil.             |\n"
    enum:
    - "UP"
    - "POWER_SAVER"
    - "EMERGENCY"
    - "DOWN"
    default: "DOWN"
  TOPOLOGY_EVENT_TYPE:
    type: "string"
    title: "TOPOLOGY_EVENT_TYPE"
    description: "Topoloji event tipini belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı                       | Açıklama                            |\n\
      |:--------------------------|:------------------------------------|\n| TOPOLOGY_UPDATED\
      \          | Topolojide değişiklik oldu.         |\n| SWITCH_ADDED         \
      \     | Anahtarlayıcı eklendi.              |\n| SWITCH_REMOVED            |\
      \ Anahtarlayıcı kaldırıldı.           |\n| SWITCH_UPDATED            | Anahtarlayı\
      cı güncellendi.          |\n| HOST_ADDED                | Uç birim cihazı eklendi.\
      \            |\n| HOST_REMOVED              | Uç birim cihazı kaldırıldı.  \
      \       |\n| HOST_UPDATED              | Uç birim cihazı güncellendi.      \
      \  |\n| LINK_ADDED                | Bağlantı eklendi.                   |\n\
      | LINK_REMOVED              | Bağlantı kaldırıldı.                |\n| LINK_UPDATED\
      \              | Bağlantı güncellendi.               |\n| STATS_UPDATED    \
      \         | İstatistikler güncellendi.          |\n| PORTS_UPDATED         \
      \    | Port bilgileri güncellendi.         |\n| CONTROLLER_DEACTIVATED    |\
      \ Kontrolcü düştü.                    |\n| CONTROLLER_ACTIVATED      | Kontrolcü\
      \ ayaklandı.                |\n| CONTROLLER_UPDATED        | Kontrolcü güncellendi.\
      \              |\n| MASTER_CHANGED            | Usta kontrolcu degisti     \
      \         |\n| RULE_ADDED                | Yeni bir akış kuralı eklendi    \
      \    |\n| RULE_REMOVED              | Bir akış kuralı silindi             |\n\
      | NETWORK_DEVICE_ADDED      | Network cihazı eklendi              |\n| NETWORK_DEVICE_UPDATED\
      \    | Network cihazı güncellendi          |\n| NETWORK_DEVICE_REMOVED    |\
      \ Network cihazı silindi              |\n| DOMAIN_ADDED              | Geniş\
      \ alan ağı eklendi              |\n| DOMAIN_REMOVED            | Geniş alan\
      \ ağı silindi              |\n| DOMAIN_UPDATED            | Geniş alan ağı gü\
      ncellendi          |\n| WAN_PORT_ADDED            | Uç birimi eklendi      \
      \             |\n| WAN_PORT_REMOVED          | Uç birimi silindi           \
      \        |\n| WAN_PORT_UPDATED          | Uç birimi güncellendi            \
      \   |\n| ROUTER_ADDED              | Internete çıkış birimi eklendi      |\n\
      | ROUTER_REMOVED            | Internete çıkış birimi silindi      |\n| ROUTER_UPDATED\
      \            | Internete çıkış birimi güncellendi  |\n| DOMAIN_INFO_UPDATED\
      \       | Domain bilgilerinde değişiklik oldu.|\n"
    enum:
    - "TOPOLOGY_UPDATED"
    - "SWITCH_ADDED"
    - "SWITCH_REMOVED"
    - "SWITCH_UPDATED"
    - "HOST_ADDED"
    - "HOST_REMOVED"
    - "HOST_UPDATED"
    - "LINK_ADDED"
    - "LINK_REMOVED"
    - "LINK_UPDATED"
    - "STATS_UPDATED"
    - "PORTS_UPDATED"
    - "CONTROLLER_ACTIVATED"
    - "CONTROLLER_DEACTIVATED"
    - "CONTROLLER_UPDATED"
    - "MASTER_CHANGED"
    - "RULE_ADDED"
    - "RULE_REMOVED"
    - "NETWORK_DEVICE_ADDED"
    - "NETWORK_DEVICE_UPDATED"
    - "NETWORK_DEVICE_REMOVED"
    - "DOMAIN_ADDED"
    - "DOMAIN_REMOVED"
    - "DOMAIN_UPDATED"
    - "WAN_PORT_ADDED"
    - "WAN_PORT_REMOVED"
    - "WAN_PORT_UPDATED"
    - "ROUTER_ADDED"
    - "ROUTER_REMOVED"
    - "ROUTER_UPDATED"
    - "DOMAIN_INFO_UPDATED"
    default: "TOPOLOGY_UPDATED"
  SECURITY_MODE:
    type: "string"
    title: "SECURITY_MODE"
    description: "Kontrolcü güvenlik modunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı         | Açıklama                 |\n|:------------|:-------------------------|\n\
      | OFF         | Güvenlik aktif değil.    |\n| TLS         | TLS güvenliği sağ\
      lanmış. |\n"
    enum:
    - "OFF"
    - "TLS"
    default: "OFF"
  CONTROLLER_STATE:
    type: "string"
    title: "CONTROLLER_STATE"
    description: "Kontrolcü durumunu belirten ENUM değeridir.\nDeğerler şunlardır;\n\
      \n| Adı         | Açıklama                 |\n|:------------|:-------------------------|\n\
      | ACTIVE      | Kontrolcü aktif.         |\n| READY       | Kontrolcü hazır.\
      \         |\n| GREEN_MODE  | Kontrolcü kapatılabilir. |\n| INACTIVE    | Kontrolcü\
      \ aktif değil    |\n"
    enum:
    - "ACTIVE"
    - "READY"
    - "GREEN_MODE"
    - "INACTIVE"
    default: "ACTIVE"
  NETWORK_DEVICE_TYPE:
    type: "string"
    title: "NETWORK_DEVICE_TYPE"
    description: "Ağ cihaz tipini belirten ENUM değeridir.\nDeğerler şunlardır;\n\n\
      | Adı              | Açıklama           |\n|:-----------------|:-------------------|\n\
      | GATEWAY          | Ağ Geçidi          |\n| ACCESS_POINT     | Erişim Noktası\
      \     |\n| DHCP_SERVER      | DHCP Sunucusu      |\n| VIRTUAL_GATEWAY  | Sanal\
      \ Ağ Geçidi    |\n| NTOP             | NTOP               |\n| VRR         \
      \     | Yedeklenen Cihazlar|\n| FIREWALL         | Güvenlik Duvarı    |\n"
    enum:
    - "GATEWAY"
    - "ACCESS_POINT"
    - "DHCP_SERVER"
    - "VIRTUAL_GATEWAY"
    - "VRR"
    - "NTOP"
    - "FIREWALL"
    - "INTERNAL_GATEWAY"
  NETWORK_DEVICE_STATUS:
    type: "string"
    title: "NETWORK_DEVICE_STATUS"
    description: "Anahtarlayıcı durumunu belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı      | Açıklama                         |\n|:---------|:---------------------------------|\n\
      | DOWN     | Ağ Cihazı çökmüş durumda         |\n| UP       | Ağ Cihazı problemsiz\
      \ durumda     |\n"
    enum:
    - "DOWN"
    - "UP"
    default: "DOWN"
  CONNECTION_MODE:
    type: "string"
    title: "CONNECTION_MODE"
    description: "Kontrolcü bağlantı tipini belirten ENUM değeridir.\nDeğerler şunlardı\
      r;\n\n| Adı     | Açıklama          |\n|:--------|:------------------|\n| INBAND\
      \  | INBAND Modu       |\n| OUTBAND | OUTBAND Modu      |\n"
    enum:
    - "INBAND"
    - "OUTBAND"
    default: "OUTBAND"
  OFFLINE_MODE:
    type: "string"
    title: "OFFLINE_MODE"
    description: "Kontrolcünün offline tipini belirten ENUM değeridir.\nDeğerler ş\
      unlardır;\n\n| Adı        | Açıklama        |\n|:-----------|:----------------|\n\
      | SECURE     | SECURE Modu     |\n| STANDALONE | STANDALONE Modu |\n"
    enum:
    - "SECURE"
    - "STANDALONE"
    default: "STANDALONE"
  SUPER_TOPOLOGY_TYPE:
    type: "string"
    title: "SUPER_TOPOLOGY_TYPE"
    description: "Süper Topolojideki birimlerin tipini belirten ENUM değeridir.\n\
      Değerler şunlardır;\n\n| Adı          | Açıklama           |\n|:-------------|:-------------------|\n\
      | DOMAIN       | Süper Ağ.          |\n| PORT        | Internet Cihazı    |\n"
    enum:
    - "DOMAIN"
    - "PORT"
    default: "DOMAIN"
  LINK_TYPE:
    type: "string"
    title: "LINK_TYPE"
    description: "Link tipini belirten ENUM değeridir. Değerler şunlardır;\n\n| Adı\
      \             | Açıklama                 |\n|-----------------|--------------------------|\n\
      | COPPER          | Bakır kablo              |\n| FIBER           | Fiber-optik\
      \ kablo        |\n| PACKET          |                          |\n| ODUCLT \
      \         |                          |\n| OCH             |                \
      \          |\n| OMS             |                          |\n| VIRTUAL    \
      \     |                          |\n| OTU             |                    \
      \      |\n| SECURE          |                          |\n"
    enum:
    - "COPPER"
    - "FIBER"
    - "PACKET"
    - "ODUCLT"
    - "OCH"
    - "OMS"
    - "VIRTUAL"
    - "OTU"
    - "SECURE"
    default: "COPPER"
  AlarmInfo:
    type: "object"
    required:
    - "id"
    - "message"
    - "name"
    - "status"
    properties:
      id:
        type: "string"
        description: "Alarm ID değeri."
      name:
        type: "string"
        description: "Alarm adı."
      message:
        type: "string"
        description: "Alarm açıklaması."
      status:
        description: "Alarm Durumu."
        $ref: "#/definitions/ALARM_STATUS"
    description: "Alarm detaylarının yer aldığı veri yapısıdır."
  NetworkCounter:
    type: "object"
    required:
    - "received"
    - "sent"
    properties:
      sent:
        type: "integer"
        format: "int64"
        description: "Gönderim sayıları."
      received:
        type: "integer"
        format: "int64"
        description: "Alış sayıları."
    description: "Ağ istatistiklerinin tutan temel veri yapısı."
  SendReceiveRates:
    type: "object"
    required:
    - "received"
    - "sent"
    properties:
      sent:
        type: "integer"
        format: "int64"
        description: "gönderme debisi (bytes/sec)."
      received:
        type: "integer"
        format: "int64"
        description: "alma debisi (bytes/sec)."
    description: "Alma/gönderme trafik hızı temel veri yapısı."
  BandwidthInfo:
    type: "object"
    required:
    - "current"
    - "max"
    - "min"
    properties:
      current:
        type: "integer"
        format: "int32"
        description: "Mevcut bant genişliği kullanım değeri."
      min:
        type: "integer"
        format: "int32"
        description: "Minimum bant genişliği kullanım değeri. Bu değer belli aralı\
          klarda anlamlı veriler üretebilecektir."
      max:
        type: "integer"
        format: "int32"
        description: "Maksimum bant genişliği kullanım değeri."
    description: "Bant genişliği kullanım istatistiklerinin tutulduğu veri yapısı\
      . Belli aralıklarla bu verilerin güncellendiği varsayılmaktadır."
  StatsDetail:
    type: "object"
    required:
    - "bytes"
    - "collisions"
    - "packetDrops"
    - "packetErrors"
    - "packets"
    - "rates"
    properties:
      packets:
        description: "Paket istatistikleri"
        $ref: "#/definitions/NetworkCounter"
      packetErrors:
        description: "Hatalı Paket istatistikleri"
        $ref: "#/definitions/NetworkCounter"
      packetDrops:
        description: "Drop Paket istatistikleri"
        $ref: "#/definitions/NetworkCounter"
      bytes:
        description: "Byte istatistikleri"
        $ref: "#/definitions/NetworkCounter"
      rates:
        description: "Güncel alma/gönderme debisi (bytes/sec)"
        $ref: "#/definitions/SendReceiveRates"
      collisions:
        type: "integer"
        format: "int64"
        description: "Çakışma sayıları"
    description: "İstatistik detaylarının tutulduğu veri yapısı."
  AddressInfo:
    type: "object"
    properties:
      mac:
        type: "string"
        description: "MAC adresi."
      ipv4:
        type: "string"
        description: "IPv4 adresi."
      ipv6:
        type: "string"
        description: "IPv6 adresi."
    description: "Cihaz ağ adreslerinin bulunduğu veri yapısı."
  SupportInfo:
    type: "object"
    properties:
      openFlow:
        type: "string"
        description: "Desteklenen OpenFlow sürümü."
      netFlow:
        type: "string"
        description: "Desteklenen netFlow sürümü."
      sFlow:
        type: "string"
        description: "Desteklenen sFlow sürümü."
      jFlow:
        type: "string"
        description: "Desteklenen jFlow(Juniper) sürümü."
      netStream:
        type: "string"
        description: "Desteklenen netStream(HP/Huawei) sürümü."
      rFlow:
        type: "string"
        description: "Desteklenen RFlow(Ericsson) sürümü."
      cFlow:
        type: "string"
        description: "Desteklenen CFlowd(Alcatel-Lucent) sürümü."
    description: "Cihazlar tarafından desteklenen protokollerin belirtildiği veri\
      \ yapısı."
  LocationInfo:
    type: "object"
    required:
    - "x"
    - "y"
    properties:
      x:
        type: "string"
        description: "X koordinatı. (Longitude)."
      y:
        type: "string"
        description: "Y koordinatı. (Latitude)."
    description: "Lokasyon bilgilerinin tutulduğu veri yapısı."
  DeviceInfo:
    type: "object"
    required:
    - "model"
    - "type"
    - "vendor"
    properties:
      vendor:
        type: "string"
        description: "Üretici bilgisi."
      model:
        type: "string"
        description: "Model bilgisi."
      type:
        description: "Cihaz Tipi."
        $ref: "#/definitions/DEVICE_TYPE"
      swVersion:
        type: "string"
        description: "Cihazın işletim sistemi sürümü."
    description: "Cihaz detaylarının tutulduğu veri yapısı."
  PortDetail:
    type: "object"
    required:
    - "address"
    - "number"
    properties:
      id:
        type: "string"
        description: "Port ID"
      number:
        type: "integer"
        format: "int64"
        description: "Port numarası."
      states:
        type: "array"
        description: "Port durum bilgisini içeren liste."
        items:
          $ref: "#/definitions/PORT_STATE"
      configs:
        type: "array"
        description: "Port yapılandırma bilgisini içeren liste."
        items:
          $ref: "#/definitions/PORT_CONFIG"
      address:
        description: "Port adresleri."
        $ref: "#/definitions/AddressInfo"
      stats:
        description: "Port istatistikleri."
        $ref: "#/definitions/StatsDetail"
      speed:
        type: "integer"
        format: "int64"
        description: "Port hızı."
      averageSpeed:
        type: "integer"
        format: "int64"
        description: "Ortalama port hızı."
      name:
        type: "string"
        description: "Port adı"
      switches:
        type: "array"
        description: "Ait olunana anahtarlayıcılar. (fiziksel ve sanal)"
        items:
          type: "string"
          description: "Anahtarlayıcı ID değeri"
      alarms:
        type: "array"
        description: "Alarmlar"
        items:
          $ref: "#/definitions/AlarmInfo"
      linkType:
        description: "Link tipi."
        $ref: "#/definitions/LINK_TYPE"
    description: "Tek bir portun detaylarının tutulduğu veri yapısı."
  PortInfo:
    type: "object"
    required:
    - "activePorts"
    - "deadPorts"
    - "passivePorts"
    - "totalPorts"
    properties:
      totalPorts:
        type: "integer"
        format: "int32"
        description: "Toplam port sayısı."
      activePorts:
        type: "integer"
        format: "int32"
        description: "Aktif port sayısı."
      passivePorts:
        type: "integer"
        format: "int32"
        description: "Pasif port sayısı."
      deadPorts:
        type: "integer"
        format: "int32"
        description: "Arızalı port sayısı."
      portDetails:
        type: "array"
        description: "Port Detayları"
        items:
          $ref: "#/definitions/PortDetail"
    description: "Cihaz portları hakkında detayların bulunduğu veri yapısı."
  DeviceProfileInfo:
    type: "object"
    properties:
      profileId:
        type: "string"
        description: "Device'a ait profile id bilgisi."
      profileName:
        type: "string"
        description: "Device'a ait profile ismi."
    description: "Cihaz profil bilgilerinin bulunduğu veri yapısı"
  UserInfo:
    type: "object"
    required:
    - "name"
    - "surname"
    - "userName"
    properties:
      userName:
        type: "string"
        description: "Kullanıcı Adı."
      name:
        type: "string"
        description: "Kullanıcının ismi."
      surname:
        type: "string"
        description: "Kullanıcının soy ismi"
    description: "Kullanıcı verisinin bulunduğu veri yapısı"
  TopologyInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "status"
      - "type"
      properties:
        name:
          type: "string"
          description: "Topoloji adı."
        status:
          description: "Topoloji durumu."
          $ref: "#/definitions/TOPOLOGY_STATUS"
        type:
          description: "Topoloji tipi."
          $ref: "#/definitions/TOPOLOGY_TYPE"
        stats:
          description: "Topoloji istatistikleri."
          $ref: "#/definitions/StatsDetail"
        alarms:
          type: "array"
          description: "Alarmlar"
          items:
            $ref: "#/definitions/AlarmInfo"
        activeSince:
          type: "string"
          format: "date-time"
          description: "Aktif olduğu zaman."
        weight:
          type: "integer"
          format: "int32"
          description: "??"
        mvtnType:
          description: "Sanal ağ talep değiştirilebilirliğnini bilgisi."
          $ref: "#/definitions/MVTN_TYPE"
        maxDepth:
          type: "integer"
          format: "int32"
          description: "??"
        elementCountPerDepth:
          type: "array"
          description: "??"
          items:
            type: "integer"
            format: "int32"
        macAddresses:
          type: "array"
          items:
            type: "string"
            description: "Eşleştirme işlemi yapılacak kaynak/hedef mac adresleri."
        ipAddressess:
          type: "array"
          items:
            type: "string"
            description: "Eşleştirme işlemi yapılacak kaynak/hedef ip adresleri."
        dnsServers:
          type: "array"
          items:
            type: "string"
            description: "DNS sunucu adresleri."
        portRanges:
          type: "array"
          items:
            type: "string"
            description: "Eşleştirme işlemi yapılacak kaynak/hedef port aralıkları\
              \ bilgisi."
        topologyGateway:
          description: "Topoloji gateway bilgisi."
          $ref: "#/definitions/TopologyGatewayDTO"
        bandwidth:
          type: "integer"
          format: "int64"
          description: "Bağlantının bant genişliği değeri."
        switchSecurityLevel:
          type: "integer"
          format: "int32"
          description: "Sanal ağ switchlerinin güvenlik seviyesini gösterir"
        linkSecurityLevel:
          type: "integer"
          format: "int32"
          description: "Sanal ağ linklerinin güvnlik seviyesini gösterir"
        delay:
          type: "integer"
          format: "int64"
          description: "Sanal ağ oluşturulurken kullanılacak topolojideki gecikme\
            \ miktarını gösterir"
        jitter:
          type: "number"
          format: "float"
          description: "Sanal ağ oluşturulurken kullanılacak topolojideki jitter miktarı\
            nı gösterir"
        packetLossRate:
          type: "number"
          format: "float"
          description: "Sanal ağ oluşturulurken kullanılacak topolojideki paket kaybı\
            \ oranı"
        collision:
          type: "number"
          format: "float"
          description: "Sanal ağ oluşturulurken kullanılacak topolojideki çakışma\
            \ bilgisi"
        maximumNumberOfUser:
          type: "integer"
          format: "int32"
          description: "Sanal ağı kullanabilecek maksimum kullanıcı sayısını gösterir"
        vlanTag:
          type: "integer"
          format: "int32"
          description: "Sanal ağın akışlarında kullanılacak vlan etiketi bilgisi"
        dnsServer:
          type: "string"
          description: "DNS Sunucusu."
        energyConsumption:
          type: "integer"
          format: "int32"
          description: "Sanal ağ kurulurken seçilecek anahtarlayıcıların maximum enerji\
            \ kullanımını belirtir"
    description: "Topoloji detaylarının bulunduğu veri yapısı."
  TopologyInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Topoloji detay modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/TopologyInfoDTO"
    description: "Topoloji detaylarının listesinin bulunduğu veri yapısı."
  IndicatorsResponseDTO:
    type: "object"
    required:
    - "controllerList"
    - "summary"
    properties:
      summary:
        description: "Özet gösterge sayıları veri transfer modeli."
        $ref: "#/definitions/SummaryIndicatorNumbersDTO"
      controllerList:
        description: "Kontrolcü gösterge veri transfer modellerinin bulunduğu liste."
        $ref: "#/definitions/ControllerIndicatorListDTO"
    description: "Göstergeler yanıt veri transfer modeli."
  SummaryIndicatorNumbersDTO:
    type: "object"
    required:
    - "controllerNumber"
    - "hostNumber"
    - "linkNumber"
    - "mvtnNumber"
    - "switchNumber"
    properties:
      controllerNumber:
        type: "integer"
        format: "int32"
        description: "Kontrolcü sayısını tutar."
      switchNumber:
        type: "integer"
        format: "int32"
        description: "Anahtarlayıcı sayısını tutar."
      linkNumber:
        type: "integer"
        format: "int32"
        description: "Bağlantı sayısını tutar."
      hostNumber:
        type: "integer"
        format: "int32"
        description: "Uç birim sayısını tutar."
      mvtnNumber:
        type: "integer"
        format: "int32"
        description: "Sanal ağ sayısını tutar."
  ControllerIndicatorListDTO:
    type: "object"
    required:
    - "list"
    properties:
      list:
        type: "array"
        description: "Kontrolcü gösterge veri transfer modellerinin bulunduğu liste."
        items:
          $ref: "#/definitions/ControllerIndicatorDTO"
    description: "Kontrolcü gösterge listesi veri transfer modeli."
  ControllerIndicatorDTO:
    type: "object"
    required:
    - "address"
    - "switchList"
    properties:
      address:
        type: "string"
        description: "IPv4 adresi."
      switchList:
        description: "Anahtarlayıcı gösterge veri transfer modelinin bulunduğu liste."
        $ref: "#/definitions/SwitchIndicatorListDTO"
    description: "Kontrolcü gösterge veri transfer modeli."
  SwitchIndicatorListDTO:
    type: "object"
    required:
    - "list"
    properties:
      list:
        type: "array"
        description: "Anahtarlayıcı gösterge veri transfer modellerinin bulunduğu\
          \ listedir."
        items:
          $ref: "#/definitions/SwitchIndicatorDTO"
    description: "Anahtarlayıcı gösterge listesi veri transfer modeli."
  SwitchIndicatorDTO:
    type: "object"
    required:
    - "id"
    - "portList"
    properties:
      id:
        type: "string"
        description: "Anahtarlayıcı id değeridir."
      portList:
        description: "Port gösterge veri transfer modelinin bulunduğu liste."
        $ref: "#/definitions/PortIndicatorListDTO"
    description: "Anahtarlayıcı gösterge veri transfer modeli."
  TopologyGatewayDTO:
    type: "object"
    properties:
      gatewayRequired:
        type: "boolean"
        description: "Gateway kullanılacak mı bilgisi."
        default: false
      gatewayIp:
        type: "string"
        description: "Gateway ip değeri."
      gatewaySubnet:
        type: "string"
        description: "Gateway subnet değeri."
    description: "Topoloji gateway transfer modeli."
  PortIndicatorListDTO:
    type: "object"
    required:
    - "list"
    properties:
      list:
        type: "array"
        description: "Port numaralarının listesi."
        items:
          type: "integer"
          format: "int32"
    description: "Port gösterge liste veri transfer modeli."
  ControllerDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "address"
      - "controllerState"
      - "deviceCount"
      - "name"
      - "openflowVersions"
      - "securityMode"
      properties:
        address:
          description: "Kontrolcü adres bilgilerinin bulunduğu veri yapısı."
          $ref: "#/definitions/AddressInfo"
        name:
          type: "string"
          description: "Kontrolcü adı."
        securityMode:
          description: "Kontrolcü güvenlik modu."
          $ref: "#/definitions/SECURITY_MODE"
        deviceCount:
          type: "integer"
          format: "int32"
          description: "Kontrolcüde bulunan anahtarlayıcı sayısı."
        controllerState:
          description: "Kontrolcü durumu."
          $ref: "#/definitions/CONTROLLER_STATE"
        openflowVersions:
          type: "string"
          description: "Kontrolcünün konuştuğu openflow versiyonları."
    description: "Kontrolcü veri transfer modeli."
  SwitchDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Anahtarlayıcının adı."
        controllerId:
          type: "string"
          description: "Kontrolcü kimlik numarası."
        slaveControllerIds:
          type: "array"
          description: "Anahtarlayıcının bağlı olduğu kontrolcüleri belirtir"
          items:
            type: "string"
        address:
          description: "Anahtarlayıcıya ait kontrol adres bilgilerinin bulunduğu veri\
            \ yapısı. (IPv4,IPv6,MAC)"
          $ref: "#/definitions/AddressInfo"
        managementPort:
          type: "string"
          description: "Anahtarlayıcının Ovs için kullandığı portun adıdır"
        connectionMode:
          description: "Anahtarlayıcının bağlantı türü"
          $ref: "#/definitions/CONNECTION_MODE"
        offlineMode:
          description: "Anahtarlayıcının çevrimdışı modu"
          $ref: "#/definitions/OFFLINE_MODE"
        datapathId:
          type: "string"
          description: "Anahtarlayıcı veri katmanı için tanımlanacak değer (00:00:00:00:00:00:00:03\
            \ gibi)"
        enrichedDeviceId:
          type: "string"
          description: "Anahtarlayıcının zenginleştirilmiş ID'si"
        status:
          description: "Anahtarlayıcının sağlık durumu."
          $ref: "#/definitions/SWITCH_STATUS"
        utilization:
          type: "string"
          description: "Anahtarlayıcının kullanım oranı (0-100 aralığında bir string\
            \ değeri)."
        deviceType:
          type: "string"
          description: "Anahtarlayıcının tipini belirtir (OVSDB vs.)"
        mode:
          description: "Anahtarlayıcının cihaz modu."
          $ref: "#/definitions/SWITCH_MODE"
        supports:
          description: "Anahtarlayıcının desteklediği özellikler ve sürümlerinin bulunduğ\
            u veri yapısı."
          $ref: "#/definitions/SupportInfo"
        deviceInfo:
          description: "Anahtarlayıcı cihaz hakkında bilgilerin tutulduğu veri yapı\
            sı."
          $ref: "#/definitions/DeviceInfo"
        bandwidth:
          description: "Anahtarlayıcının bant genişliği kullanım bilgileri."
          $ref: "#/definitions/BandwidthInfo"
        portInfo:
          description: "Anahtarlayıcının port bilgileri."
          $ref: "#/definitions/PortInfo"
        activeSince:
          type: "string"
          format: "date-time"
          description: "Anahtarlayıcının aktif olduğu zaman."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Anahtarlayıcının güvenlik seviyesi."
        topologyId:
          type: "string"
          description: "Anahtarlayıcının bağlı olduğu topoloji kimlik numarası"
        securityMode:
          description: "Anahtarlayıcının güvenlik modu."
          $ref: "#/definitions/SECURITY_MODE"
        isEdgeSwitch:
          type: "boolean"
          description: "Anahtarlayıcı'ya Uç Birim bağlanabilir mi? 'True' ise uç birim\
            \ bağlanabilir."
          default: false
        location:
          description: "Anahtarlayıcının lokasyon bilgisi bu alanda tutlacaktır."
          $ref: "#/definitions/LocationInfo"
        alarms:
          type: "array"
          description: "Alarmlar"
          items:
            $ref: "#/definitions/AlarmInfo"
        networks:
          type: "array"
          description: "Anahtarlayıcının atandığı ağ topolojilerinin ID değerleri."
          items:
            type: "string"
            description: "Topoloji ID değeri"
        stats:
          description: "Anahtarlayıcı istatistikleri."
          $ref: "#/definitions/StatsDetail"
        flows:
          type: "integer"
          format: "int64"
          description: "Anahtarlayıcı üzerindeki flow sayısı."
          default: 0
        powerUsage:
          type: "number"
          format: "double"
          description: "Anahtarlayıcının Watt birimi cinsinden harcadığı gücü belirtir."
          default: 0
        totalBandwidth:
          type: "string"
          description: "Anahtarlayıcının toplam bant genişliğini belirtir."
        powerSaverModeEnabled:
          type: "boolean"
          description: "Anahtarlayıcının enerji tasarrufu moduna geçebilme durumunu\
            \ belirtir."
          default: true
        depth:
          type: "integer"
          format: "int64"
          description: "??"
          default: 0
        blocked:
          type: "boolean"
          description: "??"
          default: false
        required:
          type: "boolean"
          description: "Bu anahtarlayıcının topoloji'de her zaman yer alması gerektiğ\
            i gösteren değer. Eğer bu anahtarlayıcı topolojiden kalkarsa sistemde\
            \ bir problem var demektir."
          default: true
        colorCode:
          type: "string"
          description: "??"
        deviceProfile:
          description: "Devicea ait profili belirten veri modeli."
          $ref: "#/definitions/DeviceProfileInfo"
        mvtnPortInfo:
          description: "Sanal aga ayrilan portlar"
          $ref: "#/definitions/MvtnPortInfo"
        isBlockedForMvtn:
          type: "boolean"
          description: "Anahtarlayıcı kullanılan sanal ağ için engelli mi? 'true'\
            \ ise engellidir. "
          default: false
        netconfName:
          type: "string"
          description: "Username for Netconf device"
        netconfPassword:
          type: "string"
          description: "Password for Netconf device"
        groupName:
          type: "string"
          description: "Switch's group name"
        dpdk:
          type: "boolean"
          description: "Is dpdk enabled ?"
        isMeterEnabled:
          type: "boolean"
          description: "Anahtarlayıcının meter desteği olup olmadığı bilgisini tutar."
          default: true
        isSSLSupported:
          type: "boolean"
          description: "Anahtarlayıcının ssl desteği olup olmadığı bilgisini tutar."
          default: false
        isOpenStackSupported:
          type: "boolean"
          description: "Anahtarlayıcının OpenStack desteği olup olmadığı bilgisini\
            \ tutar."
          default: false
        isControllerDevice:
          type: "boolean"
          description: "Anahtarlayıcının Kontrol katmanında olup olmadığını söyler."
          default: false
        usingControlChannel:
          type: "boolean"
          description: "Anahtarlayıcının Kontrol kanalını kullanıp kullanamadığını\
            \ söyler."
          default: false
        openStackNodeName:
          type: "string"
          description: "Anahtarlayıcının OpenStack bilgisini tutar."
    description: "Anahtarlayıcı veri transfer veri modeli."
  LinkDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "destPort"
      - "securityLevel"
      - "srcPort"
      - "status"
      - "topologyId"
      properties:
        status:
          description: "Bağlantı sağlık durumu."
          $ref: "#/definitions/LINK_STATUS"
        srcPort:
          description: "Kaynak Port detayları."
          $ref: "#/definitions/PortDetail"
        destPort:
          description: "Kaynak Port detayları."
          $ref: "#/definitions/PortDetail"
        signalQuality:
          type: "integer"
          format: "int32"
          description: "Bağlantı sinyal kalitesi yüzdesidir. 0-100 arası değer. (RadioLink\
            \ gibi ortamlar için)"
        loss:
          type: "number"
          format: "float"
          description: "Link kayıp yüzdesidir. 0-100 arası değer."
        delay:
          type: "integer"
          format: "int64"
          description: "Gecikme değeri"
        isWanLink:
          type: "boolean"
          description: "Bu bağlantının WAN linki olup olmadığını gösteren değer."
          default: false
        measureDelay:
          type: "boolean"
          description: "Bu bağlantının gecikme değerinin ölçülüp ölçülmeyeceğini gö\
            steren değer."
          default: false
        jitter:
          type: "number"
          format: "float"
          description: "Seğirme değeri (Paket Gecikme Değişkenliği)"
        bandwidth:
          type: "integer"
          format: "int64"
          description: "Bağlantının bant genişliği değeri."
        bandwidthUtilization:
          type: "number"
          format: "double"
          description: "Bağlantının bant genişliği kullanım oranı."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Bağlantının güvenlik seviyesi."
        collision:
          type: "number"
          format: "float"
          description: "Veri çarpışma oranı"
        medium:
          description: "Bağlantının veri iletimi için kullandığı ortam bilgisi."
          $ref: "#/definitions/LINK_MEDIUM"
        alarms:
          type: "array"
          description: "Alarmlar"
          items:
            $ref: "#/definitions/AlarmInfo"
        blocked:
          type: "boolean"
          description: "Bu bağlantının loop oluşturduğunu gösteren değer."
          default: false
        required:
          type: "boolean"
          description: "Bu bağlantının topoloji'de her zaman yer alması gerektiği\
            \ gösteren değer. Eğer bu bağlantı topolojiden kalkarsa sistemde bir problem\
            \ var demektir."
          default: true
        colorCode:
          type: "string"
          description: "Bağlantının istenilen default renk değeri. Örn: red, blue,\
            \ yellow, pink.."
        linkWeight:
          type: "string"
          description: "??"
        connectionType:
          description: "Bağlantı tipi. Bağlantının hangi 2 tip cihaz arasında olduğ\
            unu belirtir."
          $ref: "#/definitions/CONNECTION_TYPE"
        topologyId:
          type: "string"
          description: "Bağlantının bulunduğu topolojinin kimlik bilgisi"
        constraints:
          description: "Constraint listesi."
          $ref: "#/definitions/PathConstraintInfo"
        queueId:
          type: "integer"
          format: "int64"
          description: "Switchteki yüksek öncelikli queueId değeri."
    description: "Bağlantı veri transfer veri modeli."
  HostDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "activeSince"
      - "lastSeen"
      - "port"
      - "securityLevel"
      - "status"
      - "type"
      - "userInfo"
      properties:
        userInfo:
          description: "Kullanıcı bilgileri."
          $ref: "#/definitions/UserInfo"
        name:
          type: "string"
          description: "Cihaz adı."
        port:
          description: "Cihazın bağlı bulunduğu port bilgisi."
          $ref: "#/definitions/PortDetail"
        status:
          description: "Cihaz sağlık durumu."
          $ref: "#/definitions/HOST_STATUS"
        type:
          description: "Cihaz tipi."
          $ref: "#/definitions/HOST_TYPE"
        activeSince:
          type: "string"
          format: "date-time"
          description: "Cihazın aktif olduğu zaman."
        lastSeen:
          type: "string"
          format: "date-time"
          description: "Cihazın en son ağda görüldüğü zaman."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Cihazın güvenlik seviyesi."
        depth:
          type: "integer"
          format: "int32"
          description: "??"
        blocked:
          type: "boolean"
          description: "??"
          default: false
        required:
          type: "boolean"
          description: "Bu uç birim cihazının topoloji'de her zaman yer alması gerektiğ\
            i gösteren değer. Eğer bu cihaz topolojiden kalkarsa sistemde bir problem\
            \ var demektir."
          default: true
        colorCode:
          type: "string"
          description: "??"
        networks:
          type: "array"
          description: "Cihazın ait olduğu ağ topolojilerinin değerleri."
          items:
            description: "Cihazın ait olduğu ağ topoloji değeri"
            $ref: "#/definitions/HostNetworkDTO"
        vnfdId:
          type: "string"
          description: "??"
        vnfdType:
          type: "string"
          description: "??"
        vnfdName:
          type: "string"
          description: "??"
        vnfrId:
          type: "string"
          description: "??"
        vnfrType:
          type: "string"
          description: "??"
        vnfrName:
          type: "string"
          description: "??"
        quarantined:
          type: "boolean"
          description: "Cihaz karantinada ise true; değil ise false"
          default: false
        hostName:
          type: "string"
          description: "??"
        isExempt:
          type: "boolean"
          description: "??"
    description: "Uç birim veri transfer veri modeli."
  HostNetworkDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          description: "Network ismi."
    description: "Hostun bağlı olduğu network'ün id ve name değerleri"
  DomainDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Cihaz adı."
        ip:
          type: "string"
          description: "Cihaz ipsi."
        port:
          description: "Cihazın bağlı bulunduğu port bilgisi."
          $ref: "#/definitions/PortDetail"
        status:
          description: "Cihaz sağlık durumu."
          $ref: "#/definitions/DOMAIN_STATUS"
        type:
          description: "Cihaz tipi."
          $ref: "#/definitions/SUPER_TOPOLOGY_TYPE"
        alarms:
          description: "Cihazın alarmlarının bilgisi."
          $ref: "#/definitions/WanAlarmInfoDTO"
        activeSince:
          type: "string"
          format: "date-time"
          description: "Cihazın aktif olduğu zaman."
        location:
          description: "Anahtarlayıcının lokasyon bilgisi bu alanda tutlacaktır."
          $ref: "#/definitions/LocationInfo"
        lastSeen:
          type: "string"
          format: "date-time"
          description: "Cihazın en son ağda görüldüğü zaman."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Cihazın güvenlik seviyesi."
        blocked:
          type: "boolean"
          description: "??"
          default: false
        colorCode:
          type: "string"
          description: "Modelin Topolojide gösterilmesi istenen renk kodu"
    description: "Süper Topolojideki, gruplanmış topoloji modeli."
  TopologyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "info"
      properties:
        info:
          description: "Topoloji detaylarının bulunduğu veri yapısı."
          $ref: "#/definitions/TopologyInfoDTO"
        switches:
          type: "array"
          description: "Topolojideki anahtarlayıcıların listesi."
          items:
            $ref: "#/definitions/SwitchDTO"
        links:
          type: "array"
          description: "Topolojideki bağlantıların listesi."
          items:
            $ref: "#/definitions/LinkDTO"
        hosts:
          type: "array"
          description: "Topolojideki uç birimlerinin listesi."
          items:
            $ref: "#/definitions/HostDTO"
        controllers:
          type: "array"
          description: "Topolojideki kontrolcülerin listesi."
          items:
            $ref: "#/definitions/ControllerDTO"
        networkdevices:
          type: "array"
          description: "Topolojideki ağ cihazları listesi."
          items:
            $ref: "#/definitions/NetworkDeviceDTO"
        domains:
          type: "array"
          description: "Topolojideki domain listesi."
          items:
            $ref: "#/definitions/DomainDTO"
        ports:
          type: "array"
          description: "Topolojideki internet çıkışları listesi."
          items:
            $ref: "#/definitions/WanPortInfoDTO"
        requestStatus:
          description: "Topolojinin eğer talep durumundaysa bulunduğu statü bilgisi"
          $ref: "#/definitions/MVTN_REQUEST_STATUS"
        routers:
          type: "array"
          description: "Topolojinin internete çıkış birimleri"
          items:
            $ref: "#/definitions/SdnipRouterDTO"
        isLldpDisabled:
          type: "boolean"
          description: "Topoloji keşfini açıp kapatan enum değeri"
          default: true
    description: "Topoloji veri transfer veri modeli."
  SubSwitchDTO:
    allOf:
    - $ref: "#/definitions/SwitchDTO"
    - type: "object"
      required:
      - "isMvtnSwitch"
      - "isMvtnUsed"
      properties:
        isMvtnSwitch:
          type: "boolean"
          description: "Sanal ağ anahtarlayıcısı mı?"
          default: false
        isMvtnUsed:
          type: "boolean"
          description: "Sanal ağ tarafından kullanılan bir anahtarlayıcı mı?"
          default: false
        mvtnDeviceId:
          type: "string"
          description: "Sanal ağ anahtarlayıcısı ise sanal ağ anahtarlayıcısı tekil\
            \ (primary key) değeridir"
          minLength: 0
          maxLength: 32
          default: ""
    description: "Anahtarlayıcı veri transfer veri modeli."
  SubLinkDTO:
    allOf:
    - $ref: "#/definitions/LinkDTO"
    - type: "object"
      properties:
        physicalLinks:
          type: "array"
          description: "Sanal bağlantının kullandığı fiziksel bağlantı listesi"
          items:
            $ref: "#/definitions/LinkDTO"
    description: "Sanal Bağlantı veri transfer veri modeli."
  SubTopologyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "info"
      properties:
        info:
          description: "Topoloji detaylarının bulunduğu veri yapısı."
          $ref: "#/definitions/TopologyInfoDTO"
        switches:
          type: "array"
          description: "Topolojideki anahtarlayıcıların listesi."
          items:
            $ref: "#/definitions/SubSwitchDTO"
        links:
          type: "array"
          description: "Topolojideki bağlantıların listesi."
          items:
            $ref: "#/definitions/LinkDTO"
        subLinks:
          type: "array"
          description: "Sanal topolojideki bağlantıların listesi."
          items:
            $ref: "#/definitions/SubLinkDTO"
        hosts:
          type: "array"
          description: "Topolojideki uç birimlerinin listesi."
          items:
            $ref: "#/definitions/HostDTO"
    description: "Sanal topolojinin fiziksel karşılığı veri transfer veri modeli."
  TopologyEventDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "type"
      properties:
        type:
          description: "Event tipi."
          $ref: "#/definitions/TOPOLOGY_EVENT_TYPE"
        value:
          type: "object"
          description: "Topolojide meydana gelen değişikliklere göre dönülecek veri\
            \ yapısı.\nDönülecek veri yapısı \"type\" alanındaki değere göre aşağı\
            daki şekilde belirlenecektir.\n\n| Event Tipi            | Dönülen Veri\
            \ Tipi | Açıklama                                                    \
            \       |\n|:----------------------|:------------------|:-------------------------------------------------------------------|\n\
            | TOPOLOGY_UPDATED      | TopologyOptions   | Değişiklik olan topolojiye\
            \ ait istek veri modeli                   |\n| SWITCH_ADDED          |\
            \ SwitchDTO         | Eklenen anahtarlayıcıya ait veri transfer modeli\
            \                   |\n| SWITCH_REMOVED        | String            | Anahtarlayı\
            cının ID değeri                                         |\n| SWITCH_UPDATED\
            \        | SwitchDTO         | Güncellenen anahtarlayıcıya ait veri trasnfer\
            \ modeli               |\n| HOST_ADDED            | HostDTO          \
            \ | Eklenen uç birim cihazına ait veri transfer modeli               \
            \  |\n| HOST_REMOVED          | String            | Uç birim cihazını\
            n ID değeri                                       |\n| HOST_UPDATED  \
            \        | HostDTO           | Güncellenen uç birim cihazına ait veri\
            \ transfer modeli             |\n| LINK_ADDED            | LinkDTO   \
            \        | Eklenen bağlantıya ait veri transfer modeli               \
            \         |\n| LINK_REMOVED          | String            | Bağlantını\
            n ID değeri                                              |\n| LINK_UPDATED\
            \          | LinkDTO           | Güncellenen bağlantıya ait veri transfer\
            \ modeli                    |\n| STATS_UPDATED         | TopologyDTO \
            \      | Güncellenen istatistiğe ait veri transfer modeli            \
            \       |\n| PORTS_UPDATED         | SwitchDTO         | Güncellenen port\
            \ bilgilerine ait veri transfer modeli              |\n| NETWORK_DEVICE_ADDED\
            \  | NetworkDeviceDTO  | Yeni network cihazı bilgilerine ait veri transfer\
            \ modeli           |\n| NETWORK_DEVICE_UPDATED| NetworkDeviceDTO  | Gü\
            ncellenen network cihazı bilgileri veri transfer modeli          |\n|\
            \ NETWORK_DEVICE_REMOVED| NetworkDeviceDTO  | Silinen network cihazı bilgilerine\
            \ ait veri transfer modeli        |\n| DOMAIN_ADDED          | WanDomainDTO\
            \      | Eklenen geniş alan ağına ait veri transfer modeli           \
            \       |\n| DOMAIN_REMOVED        | WanDomainDTO      | Silinen geniş\
            \ alan ağına ait veri transfer modeli                  |\n| DOMAIN_UPDATED\
            \        | WanDomainDTO      | Güncellenen geniş alan ağına ait veri transfer\
            \ modeli              |\n| WAN_PORT_ADDED        | WanPortInfoDTO    |\
            \ Eklenen uç birime ait veri transfer modeli                         |\n\
            | WAN_PORT_REMOVED      | WanPortInfoDTO    | Silinen uç birime ait veri\
            \ transfer modeli                         |\n| WAN_PORT_UPDATED      |\
            \ WanPortInfoDTO    | Güncellenen uç birime ait veri transfer modeli \
            \                    |\n| ROUTER_ADDED          | SdnipRouterDTO    |\
            \ Eklenen internete çıkış birime ait veri transfer modeli            |\n\
            | ROUTER_REMOVED        | SdnipRouterDTO    | Silinen internete çıkış\
            \ birime ait veri transfer modeli            |\n| ROUTER_UPDATED     \
            \   | SdnipRouterDTO    | Güncellenen internete çıkış birime ait veri\
            \ transfer modeli        |\n| DOMAIN_INFO_UPDATED   | BaseDTO        \
            \   | Değişiklik olan domainlere ait istek veri modeli               \
            \    |\n"
          properties: {}
        topologyId:
          type: "string"
          description: "Topoloji ID değeri"
    description: "Topoloji event veri transfer veri modeli."
  TopologyOptions:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "type"
      properties:
        type:
          description: "Detayları istenen topolojinin tipini belirtmek için kullanı\
            lır."
          $ref: "#/definitions/TOPOLOGY_TYPE"
    description: "Topoloji istek veri transfer veri modeli."
  TopologyListOptions:
    allOf:
    - $ref: "#/definitions/AbstractListOptions"
    - type: "object"
      required:
      - "topologyType"
      properties:
        topologyType:
          description: "Listelenmek istenen topolojilerin tipini belirtmek için kullanı\
            lır."
          $ref: "#/definitions/TOPOLOGY_TYPE"
    description: "Topoloji listelenmesinde kullanılacak parametrelerin tanımlanması\
      nı sağlayan veri modelidir."
  TopologyRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/TopologyOptions"
    description: "Topoloji isteğinin sunucuya iletilmesi için kullanılan veri yapı\
      sı"
  TopologyListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/TopologyListOptions"
    description: "Topolojilerin listelenmesi için kullanılacak istek veri modelidir."
  TopologyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/TopologyDTO"
    description: "Topoloji isteğine ait cevap veri yapısı."
  SubTopologyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnSubTopologyDTO"
    description: "Sanal topolojinin fiziksel karşılığına ait cevap veri yapısı."
  TopologyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/TopologyInfoListDTO"
    description: "Topoloji detaylarının listelendiği işleminin cevap veri yapısı."
  SwitchListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Anahtarlayıcı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/SwitchDTO"
    description: "Anahtarlayıcı listesinin bulunduğu veri yapısı."
  ControllerListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Kontrolcü veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/ControllerDTO"
    description: "Anahtarlayıcı listesinin bulunduğu veri yapısı."
  SwitchListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchListDTO"
    description: "Anahtarlayıcı listeleme işleminin cevap veri yapısı."
  ControllerListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ControllerListDTO"
    description: "Kontrolcü listeleme işleminin cevap veri yapısı."
  IndicatorsResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/IndicatorsResponseDTO"
    description: "Basit Kontrolcü listeleme işleminin cevap veri yapısı."
  SwitchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchDTO"
    description: "Anahtarlayıcı verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  SwitchResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/SwitchDTO"
    description: "Anahtarlayıcı detaylarının dönüldüğü veri yapısı."
  LinkListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Bağlantı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/LinkDTO"
    description: "Bağlantı listesinin bulunduğu veri yapısı."
  LinkListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LinkListDTO"
    description: "Bağlantı listeleme işleminin cevap veri yapısı."
  LinkRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LinkDTO"
    description: "Bağlantı verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  LinkResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/LinkDTO"
    description: "Bağlantı detaylarının dönüldüğü veri yapısı."
  NetworkDeviceDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "ip"
      - "mac"
      - "port"
      - "status"
      - "type"
      properties:
        port:
          description: "Ağ cihazının bağlı bulunduğu port bilgisi."
          $ref: "#/definitions/PortDetail"
        type:
          description: "Ağ cihazının türü."
          $ref: "#/definitions/NETWORK_DEVICE_TYPE"
        redundancyDevices:
          type: "array"
          description: "Ağ cihazının özellik seti."
          items:
            $ref: "#/definitions/NetworkDeviceDTO"
        vlanid:
          type: "integer"
          format: "int16"
          description: "Ağ cihazının bağlı olduğu VLANID bilgisi."
        mac:
          type: "string"
          description: "Ağ cihazının MAC bilgisi."
        ip:
          type: "string"
          description: "Ağ cihazının IP bilgisi."
        status:
          description: "Ağ cihazının durumu."
          $ref: "#/definitions/NETWORK_DEVICE_STATUS"
    description: "Ağ cihazı veri transfer veri modeli."
  NetworkDeviceListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Ağ cihazı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NetworkDeviceDTO"
    description: "Ağ cihazı listesinin bulunduğu veri yapısı."
  NetworkDeviceRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetworkDeviceDTO"
    description: "NetworkDevice verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısıdır."
  NetworkDeviceDeleteRequest:
    allOf:
    - $ref: "#/definitions/GenericDeleteRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetworkDeviceDTO"
    description: "NetworkDevice delete isteğinin sunucuya iletilmesi için kullanı\
      lan veri yapısıdır."
  NetworkDeviceListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
    description: "NetworkDevice'lerin listelenmesi için kullanılacak istek veri modelidir."
  NetworkDeviceResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetworkDeviceDTO"
    description: "NetworkDevice isteğine ait cevap veri yapısıdır."
  NetworkDeviceListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetworkDeviceListDTO"
    description: "NetworkDevice detaylarının listelendiği işlemin cevap veri yapı\
      sıdır."
  HostStat:
    type: "object"
    required:
    - "receiveByteCount"
    - "sendByteCount"
    properties:
      mac:
        type: "string"
        description: "Source MAC Address"
      sendByteCount:
        type: "integer"
        format: "int64"
        description: "Gönderilen Byte Sayısı"
      receiveByteCount:
        type: "integer"
        format: "int64"
        description: "Alınan paket sayısı"
    description: "Hostların istatistiklerinin tutulduğu veri yapısıdır."
  PortStat:
    type: "object"
    required:
    - "number"
    - "stats"
    properties:
      id:
        type: "string"
        description: "Port ID"
      number:
        type: "integer"
        format: "int32"
        description: "Port numarası."
      stats:
        description: "Port istatistikleri."
        $ref: "#/definitions/StatsDetail"
    description: "Tek bir portun istatistiklerinin tutulduğu veri yapısı."
  MeterStat:
    type: "object"
    required:
    - "bytes"
    - "life"
    - "packets"
    properties:
      life:
        type: "integer"
        format: "int64"
        description: "OF meter yaşı (saniye)."
      packets:
        type: "integer"
        format: "int64"
        description: "OF meter geçen paket sayısı."
      bytes:
        type: "integer"
        format: "int64"
        description: "OF meter geçen byte sayısı."
    description: "OF meter istatistiklerinin tutulduğu veri yapısı."
  MeterIdentifier:
    type: "object"
    required:
    - "deviceId"
    - "meterId"
    properties:
      deviceId:
        type: "string"
      meterId:
        type: "integer"
        format: "int64"
    description: "OF meter kimliği"
  SwitchStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "stats"
      properties:
        stats:
          description: "Anahtarlayıcı istatistikleri."
          $ref: "#/definitions/StatsDetail"
    description: "Anahtarlayıcıya ait istatistik veri transfer modeli."
  PortStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "portDetails"
      properties:
        portDetails:
          type: "array"
          description: "Port İstatistikleri"
          items:
            $ref: "#/definitions/PortStat"
    description: "Anahtarlayıcı portlarına ait istatistik veri transfer modeli."
  LinkStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "srcPortStats"
      properties:
        srcPortStats:
          description: "Kaynak Port detayları."
          $ref: "#/definitions/PortStat"
        dstPortStats:
          description: "Kaynak Port detayları."
          $ref: "#/definitions/PortStat"
        signalQuality:
          type: "integer"
          format: "int32"
          description: "Bağlantı sinyal kalitesi yüzdesidir. 0-100 arası değer. (RadioLink\
            \ gibi ortamlar için)"
        loss:
          type: "integer"
          format: "int32"
          description: "Bağlantı kayıp yüzdesidir. 0-100 arası değer."
        delay:
          type: "integer"
          format: "int32"
          description: "Gecikme değeri"
        jitter:
          type: "integer"
          format: "int32"
          description: "Seğirme değeri (Paket Gecikme Değişkenliği)"
    description: "Bağlantıya ait istatistik veri transfer modeli."
  HostStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "hostStats"
      properties:
        hostStats:
          description: "Cihazın bağlı bulunduğu portun istatistikleri."
          $ref: "#/definitions/HostStat"
    description: "Uç Birime ait istatistik veri transfer modeli."
  MeterStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "meterStats"
      properties:
        meterStats:
          description: "OF meter istatistikleri."
          $ref: "#/definitions/MeterStat"
    description: "OF meter istatistikleri veri transfer nesnesi."
  MeterIdListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "idList"
      properties:
        idList:
          type: "array"
          description: "ID listesi"
          items:
            $ref: "#/definitions/MeterIdentifier"
    description: "Birden çok OF meter için istekte bulunmak için."
  SwitchStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Anahtarlayıcılara ait istatistik verilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/SwitchStatsDTO"
    description: "Anahtarlayıcılara ait istatistik verilerini dönen cevap veri yapı\
      sı."
  PortStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Anahtarlayıcıların portlarına ait istatistik verilerinin bulunduğ\
            u listedir."
          items:
            $ref: "#/definitions/PortStatsDTO"
    description: "Anahtarlayıcıların portlarına ait istatistik verilerini dönen cevap\
      \ veri yapısı."
  LinkStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Bağlantılara ait istatistik verilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/LinkStatsDTO"
    description: "Bağlantılara ait istatistik verilerini dönen cevap veri yapısı."
  HostStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Uç Birime ait istatistik verilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/HostStatsDTO"
    description: "Uç Birime ait istatistik verilerini dönen cevap veri yapısı."
  MeterStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "OF meter istatistik verilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/MeterStatsDTO"
    description: "OF meter istatistik verilerini dönen cevap veri yapısı."
  AAA_STATUS:
    type: "string"
    title: "AAA_STATUS"
    description: "AAA nesnelerinin genel durumunu belirten ENUM değeri.\nDeğerler\
      \ şunlardır;\n\n| Adı      | Açıklama          |\n|:---------|:------------------|\n\
      | ACTIVE   | Aktif AAA nesnesi |\n| PASSIVE  | Pasif AAA nesnesi |\n"
    enum:
    - "ACTIVE"
    - "PASSIVE"
    default: "ACTIVE"
  LoginOpts:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        description: "Kullanıcı Adı."
      password:
        type: "string"
        format: "password"
        description: "Kullanıcı şifresi."
      isRemember:
        type: "boolean"
        description: "Kullanıcı hesabının hatırlanmasını kontrol eden boolean değ\
          er."
        default: false
      params:
        type: "object"
        description: "Giriş işlemi sırasında sunucuya iletilmesi istenen ekstra verilerin\
          \ yer aldığı veri yapısı.  'user_agent' ve 'user_ip' key'leri kullanılarak\
          \ ilgili veriler geçilmektedir."
        additionalProperties:
          type: "string"
    description: "Giriş işlemi için gerekli veri yapısı.\""
  LoginResult:
    type: "object"
    required:
    - "user"
    properties:
      user:
        description: "Giriş yapan kullanıcının detayları."
        $ref: "#/definitions/UserDTO"
      settings:
        type: "object"
        description: "Kullanıcıya ait ayarların bulunduğu bir map. Key/value olarak\
          \ pekçok veri dönülebilir."
        additionalProperties:
          type: "string"
    description: "Giriş işlemi sonunda dönülen veri yapısı."
  PermDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "securityLevel"
      - "status"
      properties:
        name:
          type: "string"
          description: "Yetkinin adı."
        tag:
          type: "string"
          description: "AAA-Permissionsi gruplamak için kullanılan alan. Birbiri ile\
            \ ilişkili yetkileri gruplamak için aynı TAG değerleri verilmelidir."
        notes:
          type: "string"
          description: "Yetki hakkında alınabilecek notlar için ayrılmış alan."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Yetkinin güvenlik seviyesi."
        status:
          description: "Yetkinin durumu."
          $ref: "#/definitions/AAA_STATUS"
    description: "Yetki detaylarının bulunduğu veri yapısı."
  PermListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Yetki veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/PermDTO"
    description: "Yetki listesinin bulunduğu veri yapısı."
  RoleDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "securityLevel"
      - "status"
      properties:
        name:
          type: "string"
          description: "Rolün adı"
        notes:
          type: "string"
          description: "Rol hakkında alınabilecek notlar için ayrılmış alan."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Rolün güvenlik seviyesi."
        status:
          description: "Rolün durumu."
          $ref: "#/definitions/AAA_STATUS"
        created:
          type: "string"
          format: "date-time"
          description: "Rolün oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "Rolün son güncellendiği tarih."
        permList:
          type: "array"
          description: "Rolün sahip olduğu yetkilerin listesi."
          items:
            $ref: "#/definitions/PermDTO"
        appId:
          type: "integer"
          format: "int64"
          description: "Kullanıcının application numarası"
    description: "Rol Detaylarının bulunduğu veri yapısı."
  RoleListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Rol veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/RoleDTO"
    description: "Rol listesinin bulunduğu veri yapısı."
  UserDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "appId"
      - "name"
      - "roleList"
      - "securityLevel"
      - "status"
      - "surname"
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı Adı."
        password:
          type: "string"
          format: "password"
          description: "Kullanıcı şifresi. Bu değer sadece Save işlemi sırasında doldurulacaktı\
            r. Get/List/Search isteklerinde boş gelecektir."
          x-mode: "writeonly"
        name:
          type: "string"
          description: "Kullanıcının İsmi."
        surname:
          type: "string"
          description: "Kullanıcının Soyismi."
        email:
          type: "string"
          description: "Kullanıcının E-posta adresi."
        notes:
          type: "string"
          description: "Kullanıcı hakkında alınabilecek notlar için ayrılmış alan."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Kullanıcının güvenlik seviyesi."
        status:
          description: "Kullanıcının durumu."
          $ref: "#/definitions/AAA_STATUS"
        image:
          type: "string"
          description: "Kullanıcının profil resmi. URI formatında veri bulunacaktı\
            r."
        created:
          type: "string"
          format: "date-time"
          description: "Kullanıcının oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "Kullanıcının son güncellendiği tarih."
        lastAccess:
          type: "string"
          format: "date-time"
          description: "Kullanıcının son erişim zamanı."
        roleList:
          type: "array"
          description: "Kullanıcının sahip olduğu röllerin listesi."
          items:
            $ref: "#/definitions/RoleDTO"
        permList:
          type: "array"
          description: "Kullanıcının sahip olduğu yetkilerin listesi."
          items:
            $ref: "#/definitions/PermDTO"
        appId:
          type: "integer"
          format: "int64"
          description: "Kullanıcının application numarası"
        parentUserId:
          type: "integer"
          format: "int64"
          description: "Kullanıcının parent user idsi"
        type:
          type: "integer"
          format: "int32"
          description: "Kullanıcı tipi"
    description: "Kullanıcı Detaylarının bulunduğu veri yapısı."
  UserListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Kullanıcı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/UserDTO"
    description: "Kullanıcı listesinin bulunduğu veri yapısı."
  AppDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "maxPolicyPriority"
      - "maxUserCount"
      - "name"
      - "roleList"
      - "status"
      - "type"
      - "userCount"
      - "userList"
      properties:
        name:
          type: "string"
          description: "Uygulamanın adı."
        roleList:
          type: "array"
          description: "Uygulamanın kullanıcıların hangi rollerde olabileceğinin listesi"
          items:
            $ref: "#/definitions/RoleDTO"
        userList:
          type: "array"
          description: "Uygulamaya kullanıcı eklemek için kullanıcıların listesi"
          items:
            $ref: "#/definitions/UserDTO"
        maxUserCount:
          type: "integer"
          format: "int32"
          description: "Uygulama için en fazla kaç kullanıcı yaratılabileceği."
        status:
          description: "Uygulamanın durumu."
          $ref: "#/definitions/AAA_STATUS"
        type:
          type: "integer"
          format: "int32"
          description: "Uygulamanın düzenlenebilirlik durumu."
        callCount:
          type: "integer"
          format: "int32"
          description: "Uygulamada kaç istek kaydı olduğunu tutan değişken."
        maxCallCount:
          type: "integer"
          format: "int32"
          description: "Uygulama için en fazla kaç istek yaratılabileceği."
        userCount:
          type: "integer"
          format: "int32"
          description: "Uygulamaya kaç kullanıcının kayıt olduğunu tutan değişken."
        maxPolicyPriority:
          type: "integer"
          format: "int32"
          description: "Maks Politika Önceliği"
    description: "Uygulama detaylarının bulunduğu veri yapısı."
  AppListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Uygulama veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AppDTO"
    description: "Uygulama listesinin bulunduğu veri yapısı."
  PermRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/PermDTO"
    description: "Yetki verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  RoleRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/RoleDTO"
    description: "Rol verilerinin sunucuya iletilmesi için kullanılan veri yapısı."
  UserRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/UserDTO"
    description: "Kullanıcı verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  ChangePwdRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "newPassword"
      - "oldPassword"
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı Adı."
        oldPassword:
          type: "string"
          format: "password"
          description: "Kullanıcının mevcut şifresi."
        newPassword:
          type: "string"
          format: "password"
          description: "Kullanıcının yeni şifresi. (!) DİKKAT: Şifrenin doğru yazı\
            ldığının kontrolünü UI katmanı sağlamalıdır."
    description: "Kullanıcıların şifre değişikliği için kullanılan veri yapısı."
  SetPwdRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "id"
      - "newPassword"
      properties:
        id:
          type: "string"
          description: "Kullanıcı ID değeri."
        newPassword:
          type: "string"
          format: "password"
          description: "Kullanıcının yeni şifresi. (!) DİKKAT: Şifrenin doğru yazı\
            ldığının kontrolünü UI katmanı sağlamalıdır."
    description: "Kullanıcıların şifresi değiştirmek için kullanılan veri yapısı."
  LoginRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LoginOpts"
    description: "Giriş işlemi için kullanılan veri yapısı."
  UsernameRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı adı."
    description: "Kullanıcı adı ile yapılan isteklerde kullanılan veri yapısı."
  AppRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AppDTO"
    description: "Uygulama verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  PermResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/PermDTO"
    description: "Yetki detaylarının dönüldüğü veri yapısı."
  PermListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/PermListDTO"
    description: "Yetki listeleme işleminin cevap veri yapısı."
  RoleResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/RoleDTO"
    description: "Role detaylarının dönüldüğü veri yapısı."
  RoleListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/RoleListDTO"
    description: "Rol listeleme işleminin cevap veri yapısı."
  UserResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/UserDTO"
    description: "Kullanıcı detaylarının dönüldüğü veri yapısı."
  UserListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/UserListDTO"
    description: "Kullanıcı listeleme işleminin cevap veri yapısı."
  LoginResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/LoginResult"
    description: "Giriş işleminin cevap veri yapısı."
  AppResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AppDTO"
    description: "Uygulama detaylarının dönüldüğü veri yapısı."
  AppListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AppListDTO"
    description: "Uygulama listeleme işleminin cevap veri yapısı."
  FLOW_STATE:
    type: "string"
    title: "FLOW_STATE"
    description: "Akış durumunu belirten ENUM değeri.\nDeğerler şunlardır;\n\n| Adı\
      \            | Değeri                                              |\n|----------------|-----------------------------------------------------|\n\
      | PENDING_ADD    | cihaza girilmek üzere bekleniyor                    |\n|\
      \ ADDED          | cihaza eklenmiş                                     |\n|\
      \ PENDING_REMOVE | cihazdan silinmek üzere bekleniyor                  |\n|\
      \ REMOVED        | cihazdan silinmiş                                   |\n|\
      \ FAILED         | akışın eklenmesinde ya da silinmesinde hata alınmış |\n"
    enum:
    - "PENDING_ADD"
    - "ADDED"
    - "PENDING_REMOVE"
    - "REMOVED"
    - "FAILED"
    default: "FAILED"
  FlowListOptions:
    allOf:
    - $ref: "#/definitions/AbstractListOptions"
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "Akışların listeleneceği anahtarlayıcıya ait ID değeri."
        mvtnNetworkId:
          type: "string"
          description: "Akışların listeleneceği sanal ağ anahtarlayıcısına ait ID\
            \ değeri."
    description: "Akışların listelenmesinde kullanılacak parametrelerin tanımlanması\
      nı sağlayan veri modelidir."
  FlowSearchOptions:
    allOf:
    - $ref: "#/definitions/AbstractSearchOptions"
    - type: "object"
      required:
      - "id"
      properties:
        id:
          type: "string"
          description: "Akışlarda arama yapılacak anahtarlayıcıya ait ID değeri."
    description: "Akışlar içinde arama yapılması için kullanılacak parametrelerin\
      \ tanımlanmasını sağlayan veri modelidir."
  FlowDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        appId:
          type: "integer"
          format: "int32"
          description: "Akışın hangi application tarafından eklendiği Rest, CLI, OVSDB."
        groupId:
          type: "integer"
          format: "int32"
          description: "Akışın hangi gruba ait olduğu. Cihaz içindeki grup tablo no'su."
        priority:
          type: "integer"
          format: "int32"
          description: "Akışın önceliği."
        deviceId:
          type: "string"
          description: "Akışın tanımlandığı anahtarlayıcının ID değeri."
        tableId:
          type: "integer"
          format: "int32"
          description: "Akışın bulunduğu cihaz içindeki akış tablo no'su."
        matchList:
          type: "array"
          description: "Akışın eşleşme listesi (örneğin in_port = 2, eth_src = xx)"
          items:
            type: "string"
        instructionList:
          type: "array"
          description: "Akışa eşleşme olduğunda yapılacaklar işlemler listesi."
          items:
            type: "string"
        idleTimeout:
          type: "integer"
          format: "int64"
          description: "Bu süre içinde paket eşleşmesi olmadığı takdirde akış silinecektir\
            \ (Şu an ONOS'da yok)"
        hardTimeout:
          type: "integer"
          format: "int64"
          description: "Bu süre bitiminde akış mutlaka silinecektir (Şu an ONOS'da\
            \ yok)"
        cookie:
          type: "integer"
          format: "int64"
          description: "Akış'a atanmış çerez değeri"
        state:
          $ref: "#/definitions/FLOW_STATE"
        life:
          type: "integer"
          format: "int64"
          description: "Akış cihaza eklendiğinden beri ne kadar süre geçmiş"
        packets:
          type: "integer"
          format: "int64"
          description: "Akışa eşleşen paket sayısı"
        bytes:
          type: "integer"
          format: "int64"
          description: "Akışa eşleşen byte sayısı"
        lastSeen:
          type: "integer"
          format: "int64"
          description: "Aktif olduğu son zaman. Unix timestamp?"
        errType:
          type: "integer"
          format: "int32"
          description: "Hata tipi (ENUM olması gerekmez mi?)"
        errCode:
          type: "integer"
          format: "int32"
          description: "Hata kodu"
        controllerName:
          type: "string"
          description: "Akışın kurulduğu kontrolcünün ismi"
        controllerAddress:
          description: "Akışın kurulduğu kontrolcünün adresi"
          $ref: "#/definitions/AddressInfo"
        controllerPort:
          type: "string"
          description: "Akışın kurulduğu kontrolcünün portu"
    description: "Akış detaylarının bulunduğu veri transfer modeli."
  FlowListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Akış veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/FlowDTO"
    description: "Akış listesinin bulunduğu veri yapısı."
  FlowDeleteOptions:
    type: "object"
    required:
    - "deviceId"
    - "id"
    - "isReturnModel"
    properties:
      id:
        type: "string"
        description: "Silinmek istenen modelin ID değeri."
      deviceId:
        type: "string"
        description: "Akışlarda silme yapılacak anahtarlayıcıya ait ID değeri."
      isReturnModel:
        type: "boolean"
        description: "Silinen modelin verilerinin cevapta dönülüp dönülmemesini kontrol\
          \ eden değer.'true' ise silinen model cevapta dönülür. Varsılan olarak 'false'."
        default: false
    description: "Akışların silinmesinde kullanılacak parametrelerin tanımlanması\
      nı sağlayan veri modelidir."
  FlowListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/FlowListOptions"
    description: "Akışların listelenmesi için kullanılacak istek veri modelidir."
  FlowSearchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/FlowSearchOptions"
    description: "Akışlar içinde arama yapılması için kullanılacak istek veri modelidir."
  FlowDeleteRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/FlowDeleteOptions"
    description: "Akış silme yapılması için kullanılacak istek veri modelidir."
  FlowListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FlowListDTO"
    description: "Akış listeleme işlemleri tarafından dönülen cevap veri yapısı."
  FlowResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FlowDTO"
    description: "Akış silme işlemleri tarafından dönülen cevap veri yapısı."
  ONOS_PORT_TYPE:
    type: "string"
    title: "ONOS_PORT_TYPE"
    description: "PortType nesnesine karşılık gelen ENUM değerleri.\nDeğerler şunlardı\
      r;\n\n| Adı      | Açıklama                               |\n|:---------|:---------------------------------------|\n\
      | UNKNOWN  | Bilinmeyen port tipi                   |\n| COPPER   | Bakır tabanlı\
      \ port                     |\n| FIBER    | Optik fiber tabanlı port        \
      \       |\n| PACKET   | Optik fiber tabanlı paket portu        |\n| ODUCLT \
      \  | Optik fiber tabanlı T-port (tributary) |\n| OCH      | Optik fiber tabanlı\
      \ L-port (line-side) |\n| OMS      | Optik fiber tabanlı W-port (WDM)      \
      \ |\n| VIRTUAL  | Sanal port                             |\n| OTU      | Optik\
      \ fiber tabanlı OTN portu          |\n"
    enum:
    - "UNKNOWN"
    - "COPPER"
    - "FIBER"
    - "PACKET"
    - "ODUCLT"
    - "OCH"
    - "OMS"
    - "VIRTUAL"
    - "OTU"
    default: "UNKNOWN"
  OvsdbControllerDTO:
    type: "object"
    required:
    - "controllerInfoList"
    - "deviceId"
    properties:
      deviceId:
        type: "string"
        description: "Ağ anahtarlayıcı tekil numarası"
      controllerInfoList:
        type: "array"
        description: "Ağ kontrolcü listesi"
        items:
          type: "string"
    description: "Ağ anahtarlayıcı başına ağ kontrolcü listesi"
  OvsdbPortNumberDTO:
    type: "object"
    required:
    - "hasName"
    - "name"
    - "number"
    properties:
      number:
        type: "integer"
        format: "int64"
        description: "Port numarası"
      name:
        type: "string"
        description: "Port Adı"
      hasName:
        type: "boolean"
        description: "Port adı var mı yok mu bilgisini tutar"
    description: "Port tanımını tutar"
  OvsdbPortDescriptionDTO:
    type: "object"
    required:
    - "enabled"
    - "portNumber"
    - "portSpeed"
    - "portType"
    properties:
      portNumber:
        description: "Port tanımı"
        $ref: "#/definitions/OvsdbPortNumberDTO"
      enabled:
        type: "boolean"
        description: "Portun aktif pasif bilgisini tutar"
      portType:
        description: "Port tipini tutar"
        $ref: "#/definitions/ONOS_PORT_TYPE"
      portSpeed:
        type: "integer"
        format: "int64"
        description: "Port maksimum hızını tutar"
    description: "Portun genel bilgisini tutar"
  OvsdbControllerRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "controllerInfoList"
      - "deviceIds"
      properties:
        deviceIds:
          type: "array"
          description: "Ağ anahtarlayıcıların bulunduğu listedir."
          items:
            type: "string"
        controllerInfoList:
          type: "array"
          description: "Ağ kontrolcülerin bulunduğu listedir."
          items:
            type: "string"
    description: "Hangi ağ anahtarlayıcılar üzerinde hangi ağ kontrolcüler için iş\
      lem yapılacağı bilgisini tutar"
  OvsdbControllerInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "deviceIds"
      properties:
        deviceIds:
          type: "array"
          description: "Ağ anahtarlayıcıların bulunduğu listedir."
          items:
            type: "string"
    description: "Hangi ağ anahtarlayıcıların kontrolcü bilgisinin alınacağı bilgisini\
      \ tutar"
  OvsdbAddBridgeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "bridgeName"
      - "controllerInfoList"
      - "deviceId"
      - "dpid"
      properties:
        deviceId:
          type: "string"
          description: "Ağ anahtarlayıcı tekil numarası"
        bridgeName:
          type: "string"
          description: "Köprü adı"
        dpid:
          type: "string"
          description: "Köprü tekil numarası"
        controllerInfoList:
          type: "array"
          description: "Köprüye atanacak ağ kontrolcülerin bulunduğu listedir."
          items:
            type: "string"
    description: "Ağ anahtarlayıcı üzerinde tanımlanacak köprü bilgisini verir"
  OvsdbBridgeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "deviceId"
      properties:
        deviceId:
          type: "string"
          description: "Ağ anahtarlayıcı tekil numarası"
    description: "Bilgisi istenen ağ anahtarlayıcının adını tutar"
  OvsdbControllerResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/definitions/OvsdbControllerDTO"
    description: "İşlem sonrasında hangi ağ anahtarlayıcıyı hangi ağ kontrolcülerin\
      \ kontrol ettiği bilgisini tutar"
  OvsdbPortDescriptionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/definitions/OvsdbPortDescriptionDTO"
    description: "Ağ anahtarlayıcı üzerindeki portların tanımlarını tutar"
  OvsdbPortNumberResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          items:
            $ref: "#/definitions/OvsdbPortNumberDTO"
    description: "Ağ anahtarlayıcı üzerindeki portların isim ve numarasını tutar"
  OvsdbAddBridgeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "boolean"
          description: "Köprü ekleme işleminin mantıksal sonucu"
    description: "Ağ anahtarlayıcı üzerindeki portların isim ve numarasını tutar"
  PATH_TYPE:
    type: "string"
    title: "PATH_TYPE"
    description: "Patika tipini belirten ENUM değeri.\nDeğerler şunlardır;\n\n| Adı\
      \      | Açıklama                      |\n|:---------|:------------------------------|\n\
      | INTENT   | Intent tipi patika (proaktif) |\n| FLOW     | Flow tipi patika\
      \ (reaktif)    |\n"
    enum:
    - "INTENT"
    - "FLOW"
    default: "INTENT"
  PATH_STATE:
    type: "string"
    title: "PATH_STATE"
    description: "Patika durumunu belirten ENUM değeri.\nDeğerler şunlardır;\n\n|\
      \ Adı       | Açıklama                      |\n|:---------|:------------------------------|\n\
      | INSTALL_REQ    | Intent tipi patika (proaktif)   |\n| COMPILING      | Flow\
      \ tipi patika (reaktif)      |\n| INSTALLING     | Flow tipi patika (reaktif)\
      \      |\n| INSTALLED      | Flow tipi patika (reaktif)      |\n| RECOMPILING\
      \    | Flow tipi patika (reaktif)      |\n| WITHDRAW_REQ   | Flow tipi patika\
      \ (reaktif)      |\n| WITHDRAWN      | Flow tipi patika (reaktif)      |\n|\
      \ FAILED         | Flow tipi patika (reaktif)      |\n| CORRUPT        | Flow\
      \ tipi patika (reaktif)      |\n| PURGE_REQ      | Flow tipi patika (reaktif)\
      \      |\n"
    enum:
    - "INSTALL_REQ"
    - "COMPILING"
    - "INSTALLING"
    - "INSTALLED"
    - "RECOMPILING"
    - "WITHDRAW_REQ"
    - "WITHDRAWN"
    - "FAILED"
    - "CORRUPT"
    - "PURGE_REQ"
    default: "INSTALL_REQ"
  TRANSPORT_PROTOCOL:
    type: "string"
    title: "TRANSPORT_PROTOCOL"
    description: "Internet transport protokollerinden biri"
    enum:
    - "TCP"
    - "UDP"
    default: "TCP"
  PathDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        appId:
          type: "string"
          description: "Patikanın hangi application tarafından eklendiği Rest, CLI,\
            \ OVSDB."
        priority:
          type: "integer"
          format: "int32"
          description: "Patikanın önceliği."
        srcDeviceId:
          type: "string"
          description: "Source hostun bağlı olduğu anahtarlayıcının ID değeri."
        dstDeviceId:
          type: "string"
          description: "Destination hostun bağlı olduğu anahtarlayıcının ID değeri."
        srcHostId:
          type: "string"
          description: "Source hostun ID değeri."
        dstHostId:
          type: "string"
          description: "Destination hostun ID değeri."
        protocol:
          description: "Internet transport protokolü: TCP, UDP, vb"
          $ref: "#/definitions/TRANSPORT_PROTOCOL"
        srcPort:
          type: "integer"
          format: "1nt32"
          description: "Source hosttaki protocol (TCP/UDP) port numarası"
        dstPort:
          type: "integer"
          format: "1nt32"
          description: "Destination hosttaki protocol (TCP/UDP) port numarası"
        srcPortNumber:
          type: "integer"
          format: "int64"
          description: "Source hostun anahtarlayıcısına bağlı olduğu port numarası\
            \ değeri."
        dstPortNumber:
          type: "integer"
          format: "int64"
          description: "Destination hostun anahtarlayıcısına bağlı olduğu port numarası\
            \ değeri."
        links:
          type: "array"
          description: "Patika linki veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/LinkDTO"
        intentKey:
          type: "string"
          description: "Eğer patika intentse, intent key değeri."
        type:
          description: "Patika tipi."
          $ref: "#/definitions/PATH_TYPE"
        topologyType:
          description: "Listelenmek istenen topolojilerin tipini belirtmek için kullanı\
            lır."
          $ref: "#/definitions/TOPOLOGY_TYPE"
        topologyId:
          type: "string"
          description: "Sanal ağ için sanal ağ id'si ile doldurulmalıdır."
        bandwidthConstraint:
          type: "integer"
          format: "int64"
          description: "Minimum/Granti edilen bant genişliği kısıtı için kullanılmaktadı\
            r."
        maxBandwidthConstraint:
          type: "integer"
          format: "int64"
          description: "Maksimum/İlave bant genişliği kısıtı için kullanılmaktadı\
            r."
        state:
          description: "Patika durumu."
          $ref: "#/definitions/PATH_STATE"
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Patikanın güvenlik seviyesi."
        validatePath:
          type: "boolean"
          description: "Patikanın doğrulanıp doğrulanmayacağını gösteren değer."
          default: false
        validatePathPacketInterval:
          type: "integer"
          format: "int64"
          description: "Monitor paketleri arasındaki zamanın saniye cinsinden değ\
            eri."
        validatePathPacketNo:
          type: "integer"
          format: "int64"
          description: "Monitor paket sayısı."
        validatePathAvgDelay:
          type: "integer"
          format: "int64"
          description: "Monitor paket ortalama gecikmesi."
        sendMeasurePacket:
          type: "boolean"
          description: "Gecikme ölçüm paketinin gönderileceğini gösterir."
          default: false
        routeHopFrequency:
          type: "integer"
          format: "int64"
          description: "Patikada route hopping işleminin durumunu gösteren alandı\
            r.\n- '0' değeri route hopping *YOK* anlamındadır.\n- Diğer değerler route\
            \ hopping işleminin frekansını milisaniye cinsinden belirtir.\n"
    description: "Patika detaylarının bulunduğu veri transfer modeli."
  PathListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Patika veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/PathDTO"
    description: "Patika listesinin bulunduğu veri yapısı."
  PathListOptions:
    allOf:
    - $ref: "#/definitions/AbstractListOptions"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/PathDTO"
    description: "Patikaların listelenmesinde kullanılacak parametrelerin tanımlanması\
      nı sağlayan veri modelidir."
  PathConstraintInfo:
    type: "object"
    properties:
      availableBandwidth:
        type: "integer"
        format: "int64"
        description: "Link için gerekli bandwith değeridir."
      securityLevel:
        type: "integer"
        format: "int32"
        description: "Link için gerekli security değeridir."
    description: "Patika kurulum isteği sırasında gönderilen constraint veri modeli."
  PathRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/PathDTO"
    description: "Patika oluşturmak için kullanılacak istek veri modelidir."
  PathListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "options"
      properties:
        options:
          $ref: "#/definitions/PathListOptions"
    description: "Patikaların listelenmesi için kullanılacak istek veri modelidir."
  PathResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/PathDTO"
    description: "Patika oluşturmak için dönülen cevap veri yapısı."
  PathListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/PathListDTO"
    description: "Patika listeleme işlemleri tarafından dönülen cevap veri yapısı."
  VersionInfo:
    type: "object"
    required:
    - "buildDate"
    - "name"
    - "startUpDate"
    - "version"
    properties:
      name:
        type: "string"
        description: "Uygulama adı"
      version:
        type: "string"
        description: "Uygulama versiyonu"
      buildDate:
        type: "string"
        format: "date-time"
        description: "Uygulama derleme tarihi"
      startUpDate:
        type: "string"
        format: "date-time"
        description: "Uygulamanın çalıştırıldığı tarih"
    description: "Versiyon bilgilerini tutar"
  VersionListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Uygulama versiyon bilgilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VersionInfo"
    description: "Uygulama versiyon bilgilerini tutar"
  VersionListRequest:
    allOf:
    - $ref: "#/definitions/GenericIdRequest"
    description: "Prognet kontrolcü versiyon, build_date ve startUpDate bilgilerini\
      \ almak için kullanılır"
  VersionListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VersionListDTO"
    description: "Prognet kontrolcü versiyon, build_date ve startUpDate bilgilerini\
      \ tutar"
  DeviceProfileListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
    description: "Device profillerini listelemek için kullanılacak istek veri modelidir."
  MvtnChangeStatusRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnStatusDTO"
    description: "Sanal ağların durumlarını değiştirmek için kullanılacak veri modelidir."
  MvtnChangeTypeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnTypeDTO"
    description: "Sanal ağların tipini değiştirmek için kullanılacak veri modelidir."
  MvtnRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnDTO"
    description: "Sanal ağ talebi göndermek için kullanılacak veri modelidir"
  DeviceProfileListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DeviceProfileListDTO"
    description: "Device profillerinin listelendiği işleminin cevap veri yapısı."
  MvtnChangeStatusResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnStatusDTO"
    description: "Sanal ağ durum değişikliği cevap veri yapısı."
  MvtnChangeTypeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnTypeDTO"
    description: "Sanal ağ tip değişikliği cevap veri yapısı."
  MvtnCreateResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/MvtnDTO"
    description: "Sanal ağ talebinin cevabı olarak kullanılan veri yapısı"
  MvtnListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnListDTO"
    description: "Sanal ağ talebinin cevabı olarak kullanılan veri yapısı"
  MvtnParametersResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/TopologyInfoDTO"
    description: "Varsayılan sanal ağ parametrelerini isteme talebinin cevabı olarak\
      \ kullanlan veri yapısı"
  DeviceProfileDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        profileId:
          type: "string"
          description: "Devicea ait profile id bilgisi."
        profileName:
          type: "string"
          description: "Devicea ait profile ismi."
        mvtnPortInfo:
          $ref: "#/definitions/MvtnPortInfo"
    description: "Device profilini tanımlayan veri modeli."
  DeviceProfileListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Device profillerinin listesi."
          items:
            $ref: "#/definitions/DeviceProfileDTO"
    description: "Device profillerinin bulundugu veri modeli."
  MvtnStatusDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        mvtnStatus:
          description: "Sanal ağın durum bilgisi."
          $ref: "#/definitions/MVTN_STATUS"
    description: "Sanal ağ durumunu tanımlayan veri modeli."
  MvtnTypeDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        mvtnType:
          description: "Sanal ağın tip bilgisi."
          $ref: "#/definitions/MVTN_TYPE"
    description: "Sanal ağ tipini tanımlayan veri modeli."
  MvtnDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        userName:
          type: "string"
          description: "Talebi yapan kullanıcıya air username bilgisi"
        name:
          type: "string"
          description: "Sanal ağ ismi"
        mvtnStatus:
          description: "Talep durumunun belirtildiği enum tipi."
          $ref: "#/definitions/MVTN_STATUS"
        creationDate:
          type: "string"
          format: "date-time"
          description: "Talebin yaratılma zamanı"
        lastUpdateDate:
          type: "string"
          format: "date-time"
          description: "Talebin son güncellenme zamanı"
        topologyData:
          description: "Sanal topologi bilgisi."
          $ref: "#/definitions/TopologyDTO"
        excludedDevices:
          type: "array"
          description: "Sanal ağın fiziksel karşılığında üstünden geçilmesi istenmeyen\
            \ anahtarlayıcı listesi bilgisi"
          items:
            type: "string"
            description: "Anahtarlayıcı id bilgisi"
        mvtnType:
          description: "Talep durumunun değiştirilebilirliğinin belirtildiği enum\
            \ tipi."
          $ref: "#/definitions/MVTN_TYPE"
        wanMvtnId:
          type: "integer"
          description: "Bağlı olduğu geniş alan ağına ait sanal ağın idsi"
    description: "Sanal ağ talebini tanımlayan veri modeli."
  MvtnListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Cihaz veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/MvtnDTO"
    description: "Sanal ağ talepleri listesinin bulunduğu veri yapısı."
  MvtnPortInfo:
    type: "object"
    properties:
      portCount:
        type: "integer"
        format: "int32"
        description: "Sanal ag icin ayirilacak port sayisi"
      portDetails:
        type: "array"
        description: "Sanal ag icin ayirilacak port detaylari"
        items:
          $ref: "#/definitions/PortDetail"
    description: "Sanal ag talebinde hostlarin baglanacagi port bilgilerini tanimlayan\
      \ veri modeli."
  MvtnSubTopologyDTO:
    type: "object"
    required:
    - "mvtnNetworkId"
    - "selectedSubTopologyId"
    - "subTopologyList"
    properties:
      mvtnNetworkId:
        type: "integer"
        format: "int32"
        description: "Sanal ag fiziksel topolojideki karsilik gelen topoloji id bilgisi"
      subTopologyList:
        type: "array"
        description: "Sanal agin fiziksel topolojideki karsiliklari bilgisi"
        items:
          $ref: "#/definitions/SubTopologyDTO"
      selectedSubTopologyId:
        type: "string"
        description: "Sanal agin fizikseldeki topoloji karsiliklarindan secili olan\
          \ topolojinin id bilgisi"
    description: "Sanal agin fizikseldeki karsilik geldigi topoloji bilgisini tanimlayan\
      \ veri modeli."
  MVTN_STATUS:
    type: "string"
    title: "MVTN_REQUEST_STATUS"
    description: "MVTN taleplerinin durum bilgisi"
    enum:
    - "SUBMITTED"
    - "REJECTED"
    - "ACTIVE"
    - "SUSPENDED"
    - "INVALID"
    default: "SUBMITTED"
  MVTN_TYPE:
    type: "string"
    title: "MVTN_TYPE"
    description: "MVTN taleplerinin değiştirilebilirlik durum bilgisi"
    enum:
    - "DYNAMIC"
    - "STATIC"
    default: "DYNAMIC"
  NAC_STATUS:
    type: "string"
    title: "NAC_STATUS"
    description: "Son kullanıcı nesnelerinin genel durumunu belirten ENUM değeri.\n\
      Değerler şunlardır;\n\n| Adı          | Açıklama                  |\n|:---------\
      \    |:--------------------------|\n| ACTIVE       | Aktif nesne           \
      \    |\n| PASSIVE      | Pasif nesne               |\n"
    enum:
    - "ACTIVE"
    - "PASSIVE"
    default: "ACTIVE"
  NAC_DEVICE_STATUS:
    type: "string"
    title: "NAC_DEVICE_STATUS"
    description: "Cihaz nesnelerinin genel durumunu belirten ENUM değeri.\nDeğerler\
      \ şunlardır;\n\n| Adı          | Açıklama                  |\n|:---------  \
      \  |:--------------------------|\n| ACTIVE       | Aktif cihaz             \
      \  |\n| QUARANTINED  | Karantinaya alınmış cihaz |\n"
    enum:
    - "ACTIVE"
    - "QUARANTINED"
    default: "ACTIVE"
  NAC_ENTITY_TYPE:
    type: "string"
    title: "NAC_ENTITY_TYPE"
    description: "Son kullanıcıların tipini belirten ENUM değeri.\nDeğerler şunlardı\
      r;\n\n| Adı      | Açıklama           |\n|:---------|:-------------------|\n\
      | GUEST    | Misafir Kullanıcı  |\n| STAFF    | Personel Kullanıcı |\n"
    enum:
    - "GUEST"
    - "STAFF"
    default: "STAFF"
  AAA_PROTOCOL:
    type: "string"
    title: "AAA_PROTOCOL"
    description: "AAA Sunucuları tarafından desteklenen protokol tipini belirten ENUM\
      \ değeri.\nDeğerler şunlardır;\n\n| Adı      | Açıklama           |\n|:---------|:-------------------|\n\
      | RADIUS   | RADIUS Protokolü   |\n| LDAP     | LDAP Protokolü     |\n"
    enum:
    - "RADIUS"
    - "LDAP"
    default: "LDAP"
  NacLoginOpts:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
        description: "Kullanıcı Adı."
      password:
        type: "string"
        format: "password"
        description: "Kullanıcı şifresi."
      isRemember:
        type: "boolean"
        description: "Son kullanıcı hesabının hatırlanmasını kontrol eden boolean\
          \ değer."
        default: false
      params:
        type: "object"
        description: "Giriş işlemi sırasında sunucuya iletilmesi istenen ekstra verilerin\
          \ yer aldığı veri yapısı. 'user_agent' ve 'user_ip' key'leri kullanılarak\
          \ ilgili veriler geçilmektedir."
        additionalProperties:
          type: "string"
    description: "Son kullanıcı giriş işlemi için gerekli veri yapısı.\""
  NacLoginResult:
    type: "object"
    required:
    - "user"
    properties:
      user:
        description: "Giriş yapan son kullanıcının detayları."
        $ref: "#/definitions/NacUserDTO"
      settings:
        type: "object"
        description: "Son kullanıcıya ait ayarların bulunduğu bir map. Key/value olarak\
          \ pekçok veri dönülebilir."
        additionalProperties:
          type: "string"
    description: "Son kullanıcı giriş işlemi sonunda dönülen veri yapısı."
  NacLoginRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacLoginOpts"
    description: "Son kullanıcı giriş işlemi için kullanılan veri yapısı."
  NacLoginResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacLoginResult"
    description: "Son kullanıcı giriş işleminin cevap veri yapısı."
  NacUserDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "securityLevel"
      - "status"
      - "userType"
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı Adı."
        password:
          type: "string"
          format: "password"
          description: "Kullanıcı şifresi. Bu değer sadece Save işlemi sırasında doldurulacaktı\
            r. Get/List/Search isteklerinde boş gelecektir."
          x-mode: "writeonly"
        name:
          type: "string"
          description: "Son kullanıcının İsmi."
        surname:
          type: "string"
          description: "Son kullanıcının Soyismi."
        email:
          type: "string"
          description: "Son kullanıcının E-posta adresi."
        tcno:
          type: "string"
          description: "Son kullanıcının TC Kimlik Numarası."
        notes:
          type: "string"
          description: "Son kullanıcı hakkında alınabilecek notlar için ayrılmış alan."
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Son kullanıcının güvenlik seviyesi."
        userType:
          description: "Son kullanıcının tipi."
          $ref: "#/definitions/NAC_ENTITY_TYPE"
        status:
          description: "Son kullanıcının durumu."
          $ref: "#/definitions/NAC_STATUS"
        image:
          type: "string"
          description: "Son kullanıcının profil resmi. URI formatında veri bulunacaktı\
            r."
        created:
          type: "string"
          format: "date-time"
          description: "Son kullanıcının oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "Son kullanıcının son güncellendiği tarih."
        lastAccess:
          type: "string"
          format: "date-time"
          description: "Son kullanıcının son erişim zamanı."
        nacGroup:
          description: "Son kullanıcının NAC Grubu."
          $ref: "#/definitions/NacGroupDTO"
        byodNacGroup:
          description: "Son kullanıcının BYOD cihaz NAC Grubu."
          $ref: "#/definitions/NacGroupDTO"
        accessTimeStart:
          type: "string"
          format: "date-time"
          description: "Son kullanıcının erişim başlangıç tarihi."
        accessTimeEnd:
          type: "string"
          format: "date-time"
          description: "Son kullanıcının erişim bitiş tarihi."
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal ağ idsi"
        phoneNumber:
          type: "string"
          description: "Kullanıcının telefon numarası."
        verifyKey:
          type: "string"
          description: "Kullanıcıya gönderilen key."
        mvtnName:
          type: "string"
          description: "Sanal ağ ismi."
    description: "Son kullanıcı detaylarının bulunduğu veri yapısı."
  NacForgettenPassDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        mail:
          type: "string"
          description: "Son kullanıcının E-posta adresi."
        phoneNumber:
          type: "string"
          description: "Kullanıcının telefon numarası."
    description: "Son kullanıcı şifre unuttum DTOsu."
  NacUserListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Son kullanıcı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NacUserDTO"
    description: "Son kullanıcı listesinin bulunduğu veri yapısı."
  NacUserRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacUserDTO"
        isSendPwdEmail:
          type: "boolean"
          description: "Kullanıcı hesabı oluşturulduğunda, kullanıcı adı ve şifrenin\
            \ e-posta ile kullanıcıya iletilmesini sağlayan ayar."
    description: "Kullanıcı verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  NacChangeUserPwdRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "newPassword"
      - "oldPassword"
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı Adı."
        oldPassword:
          type: "string"
          format: "password"
          description: "Son kullanıcının mevcut şifresi."
        newPassword:
          type: "string"
          format: "password"
          description: "Son kullanıcının yeni şifresi. (!) DİKKAT: Şifrenin doğru\
            \ yazıldığının kontrolünü UI katmanı sağlamalıdır."
    description: "Son kullanıcıların şifre değişikliği için kullanılan veri yapısı\
      ."
  NacSetUserPwdRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "id"
      - "newPassword"
      properties:
        id:
          type: "string"
          description: "Kullanıcı ID değeri."
        newPassword:
          type: "string"
          format: "password"
          description: "Son kullanıcının yeni şifresi. (!) DİKKAT: Şifrenin doğru\
            \ yazıldığının kontrolünü UI katmanı sağlamalıdır."
    description: "Son kullanıcıların şifresi değiştirmek için kullanılan veri yapı\
      sı."
  NacUsernameRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı adı."
    description: "Son kullanıcı adı ile yapılan isteklerde kullanılan veri yapısı."
  NacUserResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacUserDTO"
    description: "Son kullanıcı detaylarının dönüldüğü veri yapısı."
  NacForgettenPasswordRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacForgettenPassDTO"
    description: "Son kullanıcı şifremi unuttum isteği."
  NacForgettenPasswordResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacForgettenPassDTO"
    description: "Son kullanıcı detaylarının dönüldüğü veri yapısı."
  NacUserListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacUserListDTO"
    description: "Son kullanıcı listeleme işleminin cevap veri yapısı."
  NacUserStatusRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "status"
      - "username"
      properties:
        ipv4:
          type: "string"
          description: "Cihaz ip'si."
        username:
          type: "string"
          description: "Kullanıcı adı."
        status:
          description: "Son kullanıcının durumu."
          $ref: "#/definitions/NAC_STATUS"
    description: "Son kullanıcı durum bilgisinin istek veri yapısı."
  NacUserStatusResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacUserStatusDTO"
    description: "Son kullanıcı statusunu değiştirme işleminin cevap veri yapısı."
  NacUserStatusDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "status"
      - "username"
      properties:
        username:
          type: "string"
          description: "Kullanıcı Adı."
        status:
          description: "Son kullanıcının durumu."
          $ref: "#/definitions/NAC_STATUS"
        ipv4:
          type: "string"
          description: "Cihaz ip'si."
    description: "Son kullanıcı durum detaylarının bulunduğu veri yapısı."
  NacDeviceDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "ipv4"
      - "isExempt"
      - "mac"
      - "securityLevel"
      - "status"
      - "type"
      properties:
        name:
          type: "string"
          description: "Cihaz adı."
        notes:
          type: "string"
          description: "Cihaz hakkında alınabilecek notlar için ayrılmış alan."
        ipv4:
          type: "string"
          description: "Cihaz ip'si."
        mac:
          type: "string"
          description: "Cihaz mac adresi."
        status:
          description: "Cihaz sağlık durumu."
          $ref: "#/definitions/NAC_DEVICE_STATUS"
        type:
          description: "Cihaz tipi."
          $ref: "#/definitions/HOST_TYPE"
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Cihazın güvenlik seviyesi."
        isExempt:
          type: "boolean"
          description: "Kimlik denetimi dışı olup olmama bilgisi."
        nacGroup:
          description: "Cihazın NAC Grup DTO nesnesi. Bu alanın boş(null) olması durumunda\
            \ cihaz'da kimlik denetimi kapalı olacaktır."
          $ref: "#/definitions/NacGroupDTO"
        accessPortList:
          type: "array"
          description: "Cihazın erişim yetkisi olduğu erişim portlarının listesi."
          items:
            description: "Erişim port veri transfer modeli."
            $ref: "#/definitions/NacAccessPortDTO"
        created:
          type: "string"
          format: "date-time"
          description: "Cihazın oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "Cihazın son güncellendiği tarih."
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal ağ idsi"
        mvtnName:
          type: "string"
          description: "Sanal ağ ismi."
    description: "Cihaz detaylarının bulunduğu veri yapısı."
  NacDeviceListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Cihaz veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NacDeviceDTO"
    description: "Cihaz listesinin bulunduğu veri yapısı."
  NacDeviceRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacDeviceDTO"
    description: "Cihaz verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  NacDeviceResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacDeviceDTO"
    description: "Cihaz detaylarının dönüldüğü veri yapısı."
  NacDeviceListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacDeviceListDTO"
    description: "Cihaz listeleme işleminin cevap veri yapısı."
  NacAccessPortDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "portNumberList"
      - "switchData"
      properties:
        switchData:
          description: "Erişim yetkisi verilen anahtarlayıcı bilgileri."
          $ref: "#/definitions/SwitchDTO"
        portNumberList:
          type: "array"
          description: "Anahtarlayıcı üzerinde erişim hakkı verilen port numaraları\
            nın listesi."
          items:
            type: "integer"
            format: "int64"
            description: "Anahtarlayıcı üzerindeki port numarası."
    description: "Erişim Portu bilgisinin bulunduğu veri yapısı."
  NacUserDeviceDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "nacDevice"
      - "nacUserId"
      properties:
        nacUserId:
          type: "string"
          description: "Son Kullanıcı ID değeri."
        nacDevice:
          description: "Atanmış CihazDTO nesnesi."
          $ref: "#/definitions/NacDeviceDTO"
        byodNacGroup:
          description: "BYOD NAC Grup DTO nesnesi. Bu alanın boş(null) olması durumunda\
            \ cihaz'da BYOD özelliği olmayacaktır."
          $ref: "#/definitions/NacGroupDTO"
        has8021xSupport:
          type: "boolean"
          description: "Cihazın 802.1x kimlik denetimi özelliğini desteklemisini belirten\
            \ alan.(true) 802.1x denetimi var, (false) 802.1x denetimi yok."
        isBYOD:
          type: "boolean"
          description: "Son kullanıcıya cihaz eklemede BYOD olduğunu belirten parametre.\
            \ true ise BYOD, false ise değil."
    description: "Son kullanıcı cihaz atama detaylarının bulunduğu veri yapısı."
  NacUserDeviceListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Son kullanıcı cihaz atama veri transfer modellerinin bulunduğ\
            u listedir."
          items:
            $ref: "#/definitions/NacUserDeviceDTO"
    description: "Son kullanıcı cihaz atama listesinin bulunduğu veri yapısı."
  NacUserDeviceRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacUserDeviceDTO"
    description: "Son kullanıcı cihaz atama verilerinin sunucuya iletilmesi için kullanı\
      lan veri yapısı."
  NacUserDeviceListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "nacUserId"
      - "options"
      properties:
        options:
          $ref: "#/definitions/ListOptions"
        nacUserId:
          type: "string"
          description: "Son kullanıcı ID değeri"
    description: "Son kullanıcıya ait cihazların listeleme işlemleri için kullanı\
      lacak veri modelidir."
  NacUserDeviceSearchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "nacUserId"
      - "options"
      properties:
        options:
          $ref: "#/definitions/SearchOptions"
        nacUserId:
          type: "string"
          description: "Son kullanıcı ID değeri"
    description: "Son kullanıcıya ait cihazlarda arama istekleri için kullanılacak\
      \ veri modelidir."
  NacUserDeviceResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacUserDeviceDTO"
    description: "Son kullanıcı cihaz atama detaylarının dönüldüğü veri yapısı."
  NacUserDeviceListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacUserDeviceListDTO"
    description: "Son kullanıcı cihaz atama verileri listeleme işleminin cevap veri\
      \ yapısı."
  NacGroupDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "accessPolicy"
      - "groupType"
      - "name"
      - "status"
      properties:
        name:
          type: "string"
          description: "Nac Grup adı."
        notes:
          type: "string"
          description: "Nac Grup hakkında alınabilecek notlar için ayrılmış alan."
        groupType:
          description: "Nac Grup tipi."
          $ref: "#/definitions/NAC_ENTITY_TYPE"
        status:
          description: "Nac Grup durumu."
          $ref: "#/definitions/NAC_STATUS"
        accessPolicy:
          description: "Erişim Kontrol Politikası."
          $ref: "#/definitions/AccessProfileDTO"
        aaaServer:
          description: "Kimlik Denetim Sunucusu."
          $ref: "#/definitions/AAAServerDTO"
        allowAutoBYOD:
          type: "boolean"
          description: "Otomatik BYOD ekleme izni.(true) izin var, (false) izin yok."
        userNumber:
          type: "integer"
          format: "int32"
          description: "NacGroup a bağlı kullanıcı sayısı."
        onlineUserNumber:
          type: "integer"
          format: "int32"
          description: "nacgroupid başına online user sayısı"
        virtualNetwork:
          description: "Gruba ilişkili sanal ağ"
          $ref: "#/definitions/MvtnDTO"
        created:
          type: "string"
          format: "date-time"
          description: "Nac Grupun oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "Nac Grupun son güncellendiği tarih."
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal ağ idsi."
        mvtnName:
          type: "string"
          description: "Sanal ağ ismi."
        priority:
          type: "integer"
          description: "Nac Group öncelik seviyesi."
    description: "Nac Grup detaylarının bulunduğu veri yapısı."
  NacGroupListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Nac Grup veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NacGroupDTO"
    description: "Nac Grup listesinin bulunduğu veri yapısı."
  NacGroupRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacGroupDTO"
    description: "Nac Grup verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  NacGroupResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NacGroupDTO"
    description: "Nac Grup detaylarının dönüldüğü veri yapısı."
  NacGroupListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacGroupListDTO"
    description: "Nac Grup listeleme işleminin cevap veri yapısı."
  NacSessionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "deviceId"
      - "macAddress"
      - "portNumber"
      properties:
        macAddress:
          type: "string"
          description: "Mac Adresi"
        sourceAddress:
          type: "string"
          description: "Kaynak Adresi"
        portNumber:
          type: "integer"
          format: "int64"
          description: "Port numarası"
        deviceId:
          type: "string"
          description: "Cihaz kimlik numarası"
        stateId:
          type: "integer"
          format: "int32"
          description: "Durum numarası"
        nacDeviceDTO:
          description: "nacDeviceDTO"
          $ref: "#/definitions/NacDeviceDTO"
        nacGroupDTO:
          description: "nacGroupDTO"
          $ref: "#/definitions/NacGroupDTO"
        nacUserDTO:
          description: "nacUserDTO"
          $ref: "#/definitions/NacUserDTO"
    description: "Nac Session alanlarının bulunduğu veri yapısı."
  NacSessionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacSessionDTO"
    description: "Nac Session Response veri yapısı."
  NacSessionCountDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        totalUserCount:
          type: "integer"
          format: "int64"
          description: "Toplam User Sayisi"
        activeUserCount:
          type: "integer"
          format: "int64"
          description: "Aktif User Sayisi"
    description: "Nac Session Count alanlarının bulunduğu veri yapısı."
  NacSessionCountResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NacSessionCountDTO"
    description: "Nac Session Count Response veri yapısı."
  AAAServerDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "address"
      - "deadTime"
      - "name"
      - "password"
      - "port"
      - "protocol"
      - "retransmission"
      - "userName"
      properties:
        name:
          type: "string"
          description: "AAA sunucu adı."
        userName:
          type: "string"
          description: "AAA sunucu kullanıcı adı."
        password:
          type: "string"
          description: "AAA sunucu kullanıcı parolası."
        secretKey:
          type: "string"
          description: "Radius sunucusu için gizli anahtar."
        notes:
          type: "string"
          description: "AAA sunucu hakkında alınabilecek notlar için ayrılmış alan."
        address:
          description: "AAA sunucusunun IP adresi."
          $ref: "#/definitions/AddressInfo"
        port:
          type: "integer"
          format: "int32"
          description: "AAA Sunucu Port numarası"
        protocol:
          description: "AAA sunucu protokolü."
          $ref: "#/definitions/AAA_PROTOCOL"
        deadTime:
          type: "integer"
          format: "int64"
          description: "Sunucu DeadTime değeri."
        retransmission:
          type: "integer"
          format: "int32"
          description: "Sunucu tekrar gönderim değeri."
        ldapUseSSL:
          type: "boolean"
          description: "LDAP iletişiminin SSL üzerinden çalışmasını belirlen alan.\
            \ (true) SSL kullan. (false) SSL _kullanma_."
        usingDB:
          type: "boolean"
          description: "Kimlik doğrulama için Radius seçildiğinde bu sunucunun veritabanı\
            \ kullanıp kullanmadığını belirtir."
          default: false
        created:
          type: "string"
          format: "date-time"
          description: "AAA sunucuın oluşturulduğu tarih."
        modified:
          type: "string"
          format: "date-time"
          description: "AAA sunucuın son güncellendiği tarih."
    description: "AAA sunucu detaylarının bulunduğu veri yapısı."
  AAAServerListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "AAA sunucu veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AAAServerDTO"
    description: "AAA sunucu listesinin bulunduğu veri yapısı."
  AAAServerRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AAAServerDTO"
    description: "AAA sunucu verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  AAAServerResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AAAServerDTO"
    description: "AAA sunucu detaylarının dönüldüğü veri yapısı."
  AAAServerListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AAAServerListDTO"
    description: "AAA sunucu listeleme işleminin cevap veri yapısı."
  DeviceQuarantineRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DeviceQuarantineDTO"
    description: "Cihaz karantina isteklerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  DeviceQuarantineResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    description: "Cihaz karantinaya alma işleminin cevap veri yapısı."
  DeviceQuarantineDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "macAddress"
      properties:
        macAddress:
          type: "string"
          description: "Cihazın MAC Adresi"
        portNumber:
          type: "integer"
          format: "int32"
          description: "Cihazın bağlı olduğu anahtarlayıcı portu"
        deviceId:
          type: "string"
          description: "Cihazın bağlı olduğu anahtarlayıcının kontrolcü tarafından\
            \ bilinen benzersiz kimlik bilgisi"
        type:
          description: "Cihaz tipi."
          $ref: "#/definitions/HOST_TYPE"
    description: "Karantinaya alınacak/alınmış cihazların başlıca bilgilerini taşı\
      yan veri yapısı"
  AlarmDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        time:
          type: "string"
          format: "date-time"
          description: "Alarmın / Eventin oluştuğu zaman"
        severity:
          description: "Alarm önem derecesi"
          $ref: "#/definitions/SEVERITY"
        source:
          description: "Alarmı atan uygulama adı"
          $ref: "#/definitions/ALARM_SOURCE"
        sourceHost:
          type: "string"
          description: "Alarmı atan uygulamanın üzerinde çalıştığı makinenin adı ya\
            \ da IP adresi"
        sourceInstance:
          type: "string"
          description: "Alarmı atan uygulamanın üzerinde çalıştığı uygulama sağlayı\
            cısının numarası"
        resource:
          description: "Alarma sebep olan kaynak"
          $ref: "#/definitions/ALARM_RESOURCE"
        description:
          type: "string"
          description: "Alarmın açıklaması"
        detail:
          type: "string"
          description: "Alarmın detayı"
        correctionAction:
          type: "string"
          description: "Alarm için yapılacak aksiyon"
        name:
          type: "string"
          description: "Alarmın adı"
        alarmStatus:
          description: "Alarm durumu"
          $ref: "#/definitions/ALARM_STATUS"
        type:
          description: "Alarm tipi (Event ya da Alarm)"
          $ref: "#/definitions/ALARM_TYPE"
        resourceId:
          type: "string"
          description: "Alarmın ilgili olduğu elemanın kimlik bilgisi"
        vtnId:
          type: "string"
          description: "Alarmın ait olduğu sanal ağın id bilgisi"
        vtnName:
          type: "string"
          description: "Alarmın ait olduğu sanal ağın isim bilgisi"
        resolver:
          type: "string"
          description: "Alarmın kimin tarafından çözüldüğü bilgisi."
        resolveNote:
          type: "string"
          description: "Alarmı çözen kişinin notu."
        reportingMethod:
          type: "string"
          description: "#/definitions/REPORTING_METHOD"
        solveTime:
          type: "string"
          format: "date-time"
          description: "Alarmın çözüldüğü zaman"
        guiNotification:
          description: "Alarmın UI tarafından gösterilirliği"
          $ref: "#/definitions/GUI_NOTIFICATION"
        emergencyPolicyIdArray:
          type: "array"
          description: "İhityaç duyulan acil durum politikası id'leri"
          items:
            type: "integer"
            format: "int64"
    description: "Alarm / Event bilgisinin bulunduğu veri yapısı."
  AlarmNotificationDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        creationDate:
          type: "string"
          format: "date-time"
          description: "Alarmın bildirim konfigürasyonun oluştuğu zaman"
        lastUpdateDate:
          type: "string"
          format: "date-time"
          description: "Alarmın bildirim konfigürasyonun son güncellendiği zaman"
        source:
          type: "array"
          description: "Alarmı atan uygulama adı"
          items:
            $ref: "#/definitions/ALARM_SOURCE"
        severity:
          type: "array"
          description: "Alarm önem derecesi"
          items:
            $ref: "#/definitions/SEVERITY"
        mvtnId:
          type: "array"
          description: "Alarm bildiriminin ilişkilendirildiği sanal ağlar id bilgisi"
          items:
            type: "integer"
        mvtnName:
          type: "array"
          description: "Alarm bildiriminin ilişkilendirildiği sanal ağlar isim bilgisi"
          items:
            type: "string"
        email:
          type: "array"
          description: "Alarm bildiriminin ilişkilendirildiği mail bilgisi"
          items:
            type: "string"
    description: "Alarm bildirim konfigürasyon bilgisinin bulunduğu veri yapısı."
  AlarmNotificationListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Alarm bildirim konfigürasyon modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AlarmNotificationDTO"
    description: "Alarm bildirim konfigürasyon listesinin bulunduğu veri yapısı."
  SEVERITY:
    type: "string"
    title: "SEVERITY"
    description: "Alarm önem derecesi"
    enum:
    - "MINOR"
    - "MAJOR"
    - "CRITICAL"
    - "FATAL"
    - "NONE"
    default: "MINOR"
  ALARM_TYPE:
    type: "string"
    title: "ALARM_TYPE"
    description: "Alarm tipi"
    enum:
    - "ALARM"
    - "EVENT"
    - "NONE"
    - "GENERIC_EVENT"
    default: "NONE"
  GUI_NOTIFICATION:
    type: "string"
    title: "GUI_NOTIFICATION"
    description: "Alarmın UI'da gösterilirliği"
    enum:
    - "VISIBLE"
    - "INVISIBLE"
    default: "INVISIBLE"
  REPORTING_METHOD:
    type: "string"
    title: "REPORTING_METHOD"
    description: "Alarm bildiriminin ne şekilde yapılacağı."
    enum:
    - "UI"
    - "E_MAIL"
    default: "UI"
  ALARM_SOURCE:
    type: "string"
    title: "ALARM_SOURCE"
    description: "Alarm kaynak tipi"
    enum:
    - "CONTROLLER"
    - "DATABASE"
    - "TOPOLOGY"
    - "MVTN"
    - "NAC"
    - "TSDB_SERVICE"
    - "LOOP_DETECTION"
    - "FLOW_STAT"
    - "MONITOR"
    - "PATHVALIDATION"
    - "NONE"
    - "POLICY_MANAGER"
    - "POWER_SAVER"
    - "PPP_MANAGER"
    - "SNMP_TRAP"
    - "PACKET_PROCESSOR"
    - "RABBIT_MQ"
    - "RADIUS_SERVER"
    - "LDAP_CLIENT"
    - "SSL_AUTH"
    - "UNALLOWED_DEVICE"
    - "WAN"
    - "SDNIP"
    - "INTEGRITY"
    - "WAN_PORT"
    - "IDS"
    - "SYSLOG"
    default: "NONE"
  ALARM_RESOURCE:
    type: "string"
    title: "ALARM_RESOURCE"
    description: "Alarmın sebep tipi"
    enum:
    - "DEVICE"
    - "CONTROLLER"
    - "CONTROLLER_MODE"
    - "MVTN_LINK"
    - "LINK"
    - "MVTN_DEVICE"
    - "DB"
    - "NAS_MANAGER"
    - "TSDB_PROVIDER"
    - "HBASE"
    - "MONITOR"
    - "PATHVLIDATION"
    - "NONE"
    - "POLICY_MANAGER"
    - "PPP_MANAGER"
    - "SNMP_TRAP"
    - "PACKET_PROCESSOR"
    - "RABBIT_MQ"
    - "RADIUS_SERVER"
    - "LDAP_CLIENT"
    - "SSL_AUTH"
    - "UNALLOWED_DEVICE"
    - "LOCAL_CONTROLLER"
    - "CENTRAL_CONTROLLER"
    - "DRILL"
    - "SDNIP"
    - "INTEGRITY"
    - "EMERGENCY_POLICY"
    - "INTRUSION_DETECTION_SYSTEM"
    - "PORT"
    - "SYSLOG"
    default: "NONE"
  Alarm:
    type: "object"
    required:
    - "detail"
    - "name"
    - "reportingMethod"
    - "resolver"
    - "resource"
    - "resourceId"
    - "solveTime"
    - "source"
    - "sourceHost"
    - "sourceInstance"
    - "status"
    - "type"
    - "vtnId"
    properties:
      name:
        type: "string"
        description: "Alarmın adı"
      resource:
        description: "Alarma sebep olan kaynak"
        $ref: "#/definitions/ALARM_RESOURCE"
      sourceHost:
        type: "string"
        description: "Alarmı atan uygulamanın üzerinde çalıştığı makinenin adı ya\
          \ da IP adresi"
      sourceInstance:
        type: "string"
        description: "Alarmı atan uygulamanın üzerinde çalıştığı uygulama sağlayı\
          cısının numarası"
      status:
        description: "Alarm durumu"
        $ref: "#/definitions/ALARM_STATUS"
      type:
        description: "Alarm tipi (Event ya da Alarm)"
        $ref: "#/definitions/ALARM_TYPE"
      source:
        description: "Alarmı atan uygulamanın adı"
        $ref: "#/definitions/ALARM_SOURCE"
      detail:
        type: "string"
        description: "Alarm ile ilgili detaylı bilgi"
      resourceId:
        type: "string"
        description: "Alarmın ilgili olduğu elemanın kimlik bilgisi"
      vtnId:
        type: "string"
        description: "Alarmın ait olduğu sanal ağın id bilgisi"
      vtnName:
        type: "string"
        description: "Alarmın ait olduğu sanal ağın isim bilgisi"
      resolver:
        type: "string"
        description: "Alarmın kimin tarafından çözüldüğü bilgisi."
      resolveNote:
        type: "string"
        description: "Alarmı çözen kişinin notu."
      reportingMethod:
        type: "string"
        description: "#/definitions/REPORTING_METHOD"
      solveTime:
        type: "string"
        format: "date-time"
        description: "Alarmın çözüldüğü zaman"
      GUI_notification:
        description: "Alarm tipi (Event ya da Alarm)"
        $ref: "#/definitions/GUI_NOTIFICATION"
      emergencyPolicyIdArray:
        type: "string"
        description: "İhityaç duyulan acil durum politikası id'leri"
    description: "Uygulamalar tarafından alarm yöneticisine gönderilecek detaysız\
      \ alarm objesi"
  AlarmListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Alarm veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AlarmDTO"
    description: "Alarm listesinin bulunduğu veri yapısı."
  AlarmListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AlarmListDTO"
    description: "Alarm listeleme işleminin cevap veri yapısı."
  AlarmRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AlarmDTO"
    description: "Alarm verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  AlarmResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AlarmDTO"
    description: "Alarm detaylarının dönüldüğü veri yapısı."
  AlarmNotificationRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AlarmNotificationDTO"
    description: "Alarm bildirim konfigürasonlarının iletimi için kullanılan veri\
      \ yapısı."
  AlarmNotificationResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AlarmNotificationDTO"
    description: "Alarm bildirim konfigürasyonlarının dönüldüğü veri yapısı."
  AlarmNotificationListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AlarmNotificationListDTO"
    description: "Alarm bildirim konfigürasyon listesinin dönüldüğü veri yapısı."
  MetricAndTagPrefixes:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "metricPrefix"
      - "tagPrefix"
      properties:
        metricPrefix:
          type: "string"
        tagPrefix:
          type: "string"
    description: "metrik ve tag listesi almak için önekleri verilmelidir"
  MetricAndTagNames:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "metricNames"
      - "tagNames"
      properties:
        metricNames:
          type: "array"
          description: "TSDB'deki metriklerin listesi"
          items:
            type: "string"
        tagNames:
          type: "array"
          description: "TSDB'deki taglerin listesi"
          items:
            type: "string"
    description: "Zaman serisi veritabanındaki metriklerin ve taglerin listesi"
  MetricNames:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "metricNames"
      properties:
        metricNames:
          type: "array"
          description: "tagleri istenen metriklerin adları"
          items:
            type: "string"
    description: "metrik adı"
  METRIC_TYPE:
    type: "string"
    title: "METRIC_TYPE"
    description: "metrik değerinin nasıl bir sayı olduğunu belirten ENUM değeri.\n\
      Değerler şunlardır;\n\n| Adı      | Açıklama       |\n|:---------|:---------------|\n\
      | LONG     | tamsayı        |\n| DOUBLE   | ondalıklı sayı |\n"
    enum:
    - "LONG"
    - "DOUBLE"
    default: "LONG"
  MetricDefinition:
    type: "object"
    required:
    - "metricName"
    - "metricType"
    - "metricUnit"
    - "producer"
    - "tagNames"
    properties:
      metricName:
        type: "string"
      producer:
        type: "string"
      metricType:
        description: "metrik değeri tamsayı mı ondalıklı mı?"
        $ref: "#/definitions/METRIC_TYPE"
      metricUnit:
        type: "string"
      tagNames:
        type: "array"
        description: "TSDB'deki taglerin listesi"
        items:
          type: "string"
  MetricDefinitions:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "metricDefs"
      properties:
        metricDefs:
          type: "array"
          items:
            $ref: "#/definitions/MetricDefinition"
    description: "metriklerinin ve taglerinin tanımı"
  TsdbQueryRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "aggregator"
      - "beginTime"
      - "downsampling"
      - "endTime"
      - "maxResult"
      - "metrics"
      - "tagValues"
      properties:
        metrics:
          type: "array"
          items:
            type: "string"
        beginTime:
          type: "integer"
          format: "int64"
          description: "1970'ten beri kaç milisaniye"
        endTime:
          type: "integer"
          format: "int64"
          description: "1970'ten beri kaç milisaniye"
        aggregator:
          $ref: "#/definitions/TsdbAggregator"
        downsampling:
          $ref: "#/definitions/DownSampling"
        tagValues:
          type: "array"
          items:
            $ref: "#/definitions/TsdbTagValue"
        maxResult:
          type: "integer"
          format: "int32"
    description: "TSDB sorgu parametreleri"
  TsdbQueryResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "datasets"
      - "tstamps"
      properties:
        tstamps:
          type: "array"
          description: "Tüm veri kümeler için ortak zaman damgaları dizisi"
          items:
            type: "integer"
            format: "int64"
        datasets:
          type: "array"
          description: "Anahtarlayıcılara ait istatistik verilerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/TsdbDataSet"
    description: "N tane metrik için yapılan sorgunun sonucu"
  TsdbDataSet:
    type: "object"
    required:
    - "metric"
    - "tagValues"
    - "values"
    properties:
      metric:
        type: "string"
      tagValues:
        type: "array"
        items:
          $ref: "#/definitions/TsdbTagValue"
      values:
        type: "array"
        items:
          type: "number"
          format: "double"
    description: "aynı tag=val değerlerine sahip veri  noktalarının kümesi"
  TsdbAggregator:
    type: "string"
    title: "TsdbAggregator"
    description: "TSDB sorgularında bir grup veri noktasını birleştirme yöntemi"
    enum:
    - "none"
    - "sum"
    - "avg"
    - "min"
    - "max"
    - "count"
    default: "none"
  TsdbTagValue:
    type: "object"
    required:
    - "tag"
    - "val"
    properties:
      tag:
        type: "string"
      val:
        type: "string"
    description: "Metrik veri noktalarında olması gereken tag=val"
  DownSampling:
    type: "object"
    required:
    - "aggregator"
    - "period"
    properties:
      period:
        type: "integer"
        format: "int64"
      aggregator:
        $ref: "#/definitions/TsdbAggregator"
    description: "Bir periyoda saçılmış çok sayıda veri noktasını birleştirmek"
  ACCESS_ACTION_TYPE:
    type: "string"
    title: "ACCESS_ACTION_TYPE"
    description: "Erişim politikası aksiyon\ntipini belirten ENUM değeri.\nDeğerler\
      \ şunlardır;\n\n| Adı      | Açıklama             |\n|:---------|:---------------------|\n\
      | ACCESS   | Erişim İzinli        |\n| DENIED   | Erişim Engellendi    |\n"
    enum:
    - "ACCESS"
    - "DENIED"
    default: "ACCESS"
  ETH_TYPE:
    type: "string"
    title: "ETH_TYPE"
    description: "Temel IP protokol tipini belirten ENUM değeri.\nDeğerler şunlardı\
      r;\n\n| Adı   | Açıklama          |\n|:------|:------------------|\n| TCP  \
      \ | TCP Protokolü     |\n| UDP   | UDP Protokolü     |\n| ANY   | Herhangi Protokol\
      \ |\n"
    enum:
    - "TCP"
    - "UDP"
    - "ANY"
    default: "ANY"
  BW_UNIT:
    type: "string"
    title: "BW_UNIT"
    description: "Bant genişliği birimi.\nDeğerler şunlardır;\n\n| Adı      | Açı\
      klama             |\n|:---------|:---------------------|\n| BPS      | Bit/saniye\
      \           |\n| KBPS     | KiloBit/saniye       |\n| MBPS     | MegaBit/saniye\
      \       |\n| GBPS     | GigaBit/saniye       |\n"
    enum:
    - "BPS"
    - "KBPS"
    - "MBPS"
    - "GBPS"
    default: "MBPS"
  FLOWBALANCECONSTRAINTTYPE:
    type: "string"
    title: "FLOWBALANCECONSTRAINTTYPE"
    description: "Akışları dengelemek için kullanılacak constraintler\n\n| Adı   \
      \                          | Açıklama             |\n|:--------------------------------|:---------------------|\n\
      | FLOW_COUNT_CONSTRAINT           | Minimum akış sayısı  |\n| AVAILABLE_BANDWIDTH_CONSTRAINT\
      \  | Bandwidth genişliği  |\n"
    enum:
    - "FLOW_COUNT_CONSTRAINT"
    - "AVAILABLE_BANDWITDH_CONSTRAINT"
    default: "AVAILABLE_BANDWITDH_CONSTRAINT"
  NTOP_ROUTE:
    type: "string"
    title: "NTOP_ROUTE"
    description: "NTOP rotalama durumu.\nDeğerler şunlardır;\n\n| Adı      | Açıklama\
      \                          |\n|:---------|:----------------------------------|\n\
      | NONE     | Belirtilmemiş                     |\n| DEACTIVE | NTOP Rotalama\
      \ Yapılmayacaktır     |\n| ACTIVE   | NTOP Rotalama Yapılacaktır        |\n"
    enum:
    - "NONE"
    - "ACTIVE"
    - "DEACTIVE"
    default: "NONE"
  RESERVED_PATH:
    type: "string"
    title: "RESERVED_PATH"
    description: "Patika rezervasyonu özelliği.\nDeğerler şunlardır;\n\n| Adı    \
      \  | Açıklama                           |\n|:---------|:-----------------------------------|\n\
      | NONE     | Belirtilmemiş                      |\n| DEACTIVE | Patika rezervasyonu\
      \ yapılmayacaktır|\n| ACTIVE   | Patika rezervasyonu yapılacaktır   |\n"
    enum:
    - "NONE"
    - "ACTIVE"
    - "DEACTIVE"
    default: "NONE"
  AccessProfileCountOptions:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "count"
      properties:
        count:
          type: "integer"
          format: "int32"
          description: "Politika profil sayısı."
    description: "Politika profil sayısı istek veri transfer veri modeli."
  AccessPolicyCountOptions:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "count"
      properties:
        count:
          type: "integer"
          format: "int32"
          description: "Politika sayısı."
    description: "Politika sayısı istek veri transfer veri modeli."
  AccessPolicyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        policyName:
          type: "string"
          description: "Politika isim bilgisi."
        priority:
          type: "integer"
          description: "Politika öncelik seviyesi."
        criteriaCount:
          type: "integer"
          format: "int32"
          description: "Kriter sayısı"
        creationTime:
          type: "string"
          format: "date-time"
          description: "Politikanın oluşma zamanı."
        updateTime:
          type: "string"
          format: "date-time"
          description: "Politikanın güncellenme zamanı."
        packetHeaderCriteria:
          description: "Paket eşleşme bilgilerinin olduğu veri modeli."
          $ref: "#/definitions/PacketHeaderCriteriaInfo"
        schedulerCriteria:
          description: "Politkanın çalışma zamanını ayarlayan veri modeli."
          $ref: "#/definitions/ScheduleCriteriaInfo"
        serviceAction:
          description: "Uygulanacak Hizmet Kalitesi politikası detayları."
          $ref: "#/definitions/ServiceActionDTO"
        accessPolicyAction:
          description: "Erişim izni olup olmadığını tutar."
          $ref: "#/definitions/ACCESS_ACTION_TYPE"
        conflictedPolicyIds:
          type: "array"
          description: "Çakışan politika id değerleri listesi."
          items:
            type: "string"
            description: "Çakışan politika id değerleri."
        userIds:
          description: "Eşleştirme işlemi yapılacak kaynak/hedef kullanıcı idleri."
          $ref: "#/definitions/CommonHeaderCriteriaInfo"
    description: "Erişim politikası bilgilerinin bulundugu veri modeli."
  AccessPolicyListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Erişim politikası veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AccessPolicyDTO"
    description: "Erişim politikası listesinin bulunduğu veri yapısı."
  PacketHeaderCriteriaInfo:
    type: "object"
    properties:
      macAddresses:
        description: "Eşleştirme işlemi yapılacak kaynak/hedef mac adresleri."
        $ref: "#/definitions/CommonHeaderCriteriaInfo"
      ipAddressess:
        description: "Eşleştirme işlemi yapılacak kaynak/hedef ip adresleri."
        $ref: "#/definitions/CommonHeaderCriteriaInfo"
      portRanges:
        description: "Eşleştirme işlemi yapılacak kaynak/hedef port aralıkları bilgisi."
        $ref: "#/definitions/CommonHeaderCriteriaInfo"
      endUserApplications:
        type: "array"
        description: "Eşleştirme işlemi yapılacak son kullanıcı uygulaması bilgileri."
        items:
          $ref: "#/definitions/EndUserApplicationDTO"
      vtnIds:
        type: "array"
        description: "Eşleştirme işlemi yapılacak sanal ağ id bilgisi."
        items:
          type: "string"
          description: "Eşleştirilecek sanal ağ id değeri."
      ethTypes:
        description: "Eşleştirme işlemi yapılacak eth protokol tipi bilgisi."
        $ref: "#/definitions/ETH_TYPE"
      protocols:
        type: "array"
        description: "Eşleştirme işlemi yapılacak paket protokol bilgileri."
        items:
          type: "string"
          description: "Eşleştirilecek paket protokol değeri."
      vlanTags:
        type: "array"
        description: "Eşleştirme işlemi yapılacak VLAN etiketleri bilgisi"
        items:
          type: "string"
          description: "Eşleştirilecek VLAN etiketi"
      mplsTags:
        type: "array"
        description: "Eşleştirme işlemi yapılacak MPLS etiketleri bilgisi"
        items:
          type: "string"
          description: "Eşleştirilecek MPLS etiketi"
      inPorts:
        type: "array"
        description: "Eşleştirme işlemi yapılacak in port bilgileri"
        items:
          description: "Eşleştirilecek in port bilgileri"
          $ref: "#/definitions/InportsInfo"
      srcIpLocations:
        type: "array"
        description: "Eşleştirme işlemi yapılacak lokasyon tabanlı ip bilgileri"
        items:
          $ref: "#/definitions/IpLocationDTO"
      destIpLocations:
        type: "array"
        description: "Eşleştirme işlemi yapılacak lokasyon tabanlı hedef ip bilgileri"
        items:
          $ref: "#/definitions/IpLocationDTO"
    description: "Paket eşleşme bilgilerini içeren veri modeli"
  ScheduleCriteriaInfo:
    type: "object"
    properties:
      startTime:
        type: "string"
        format: "date-time"
        description: "Politikanın uygulanmaya başlama zamanı."
      endTime:
        type: "string"
        format: "date-time"
        description: "Politikanın uygulanma bitiş zamanı."
      cronData:
        type: "string"
        description: "Politikanın uygulanma cron bilgisi."
    description: "Politika uygulanma zaman bilgilerini içeren veri modeli"
  ChangeHeadersInfo:
    type: "object"
    properties:
      srcMac:
        type: "string"
        description: "Değiştirme işlemi yapılacak kaynak mac adresi bilgisi."
      dstMac:
        type: "string"
        description: "Değiştirme işlemi yapılacak hedef mac adresi bilgisi."
      srcIp:
        description: "Değiştirme işlemi yapılacak kaynak ip adresi bilgisi."
        $ref: "#/definitions/AddressInfo"
      dstIp:
        description: "Değiştirme işlemi yapılacak hedef ip adresi bilgisi."
        $ref: "#/definitions/AddressInfo"
      vlanId:
        description: "Değiştirme işlemi yapılacak vlan id bilgisi."
        $ref: "#/definitions/PopPushHeaderInfo"
      portNumber:
        type: "integer"
        format: "int32"
        description: "Değiştirme işlemi yapılacak port bilgisi."
      dhcpMark:
        type: "integer"
        format: "int32"
        description: "Değiştirme işlemi yapılacak dhcp mark değeri"
    description: "Aksiyon olarak değiştirilmesi istenen paket başlıkları"
  RoutingServicesInfo:
    type: "object"
    properties:
      includedDevices:
        type: "array"
        description: "Trafik atlatma içerisinde yer alması beklenen cihaz listesi."
        items:
          type: "string"
          description: "Cihaz id si"
      excludedDevices:
        type: "array"
        description: "Trafik atlatma içerisinde yer alması istenmeyen cihaz listesi."
        items:
          type: "string"
          description: "Cihaz id si"
      useRouteHopping:
        type: "boolean"
        description: "Rota atlama yönteminin kullanılıp kullanılmayacağı"
        default: false
      hopCount:
        type: "integer"
        format: "int32"
        description: "Kaç rota atlama kullanılacağı bilgisi"
      hopPeriod:
        type: "integer"
        format: "int32"
        description: "Hangi sıklıkta rota atlama kullanılacağı bilgisi"
      useSecureRouting:
        type: "boolean"
        description: "Güvenli rotalama kullanılıp kullanılmayacağı"
        default: false
    description: "Aksiyon olarak kullanılacak rotalama servislerinin bilgileri"
  CommonHeaderCriteriaInfo:
    type: "object"
    properties:
      src:
        type: "array"
        description: "Kaynak değer listesi"
        items:
          type: "string"
          description: "Eşleştirilecek kriter değeri"
      dest:
        type: "array"
        description: "Dedef değer listesi"
        items:
          type: "string"
          description: "Eşleştirilmeyecek kriter değeri"
    description: "Eşleştirmede kullanılacak genel kaynak/hedef başlık değerlerini\
      \ tutar"
  InportsInfo:
    type: "object"
    properties:
      deviceId:
        type: "string"
        description: "Paketin geldiği ağ elemanı bilgisini tutar"
      inports:
        type: "array"
        description: "Paketin gelebileceği port bilgilerini tutar"
        items:
          type: "string"
          description: "Paketin geldiği port bilgisi"
    description: "Eşleştirmede kullanılacak in port bilgisini tutar"
  PopPushHeaderInfo:
    type: "object"
    properties:
      pushValue:
        type: "string"
        description: "Eklenen başlık değeri"
      popValue:
        type: "string"
        description: "Çıkarılan başlık değeri"
      pushToPacket:
        type: "boolean"
        description: "Girilen vlan değerinin pakete push edilip edilmeyeceğine karar\
          \ verir. Seçilmezse sadece kontrolcüde paket context'ine yazılır"
        default: false
    description: "Girilen aksiyona göre başlık bilgisinde ekleme ve/veya çıkarma yapmak\
      \ için kullanılır"
  AccessProfileDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        profileName:
          type: "string"
          description: "Politikaya ait profile ismi."
        accessPolicies:
          type: "array"
          description: "Profil içerisindeki erişim politika listesi."
          items:
            $ref: "#/definitions/AccessPolicyDTO"
        profilePriority:
          type: "integer"
          format: "int32"
          description: "Profil öncelik seviyesi."
        allowedNacGroups:
          description: "İzinli nac grubu listesi"
          $ref: "#/definitions/AllowedNacGroupsDTO"
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal ağ idsi"
        mvtnName:
          type: "string"
          description: "Sanal ağ ismi."
    description: "Erişim politikası bilgisinin bulunduğu veri yapısı."
  AllowedNacGroupsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "allowAll"
      properties:
        allowedNacGroups:
          type: "array"
          description: "İzinli NAC Grupları"
          items:
            $ref: "#/definitions/NacGroupDTO"
        allowAll:
          type: "boolean"
          description: "Tüm NAC gruplarına izin ver"
          default: false
    description: "Erişim politikası için izinli NAC Grupları."
  AccessProfileListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Erişim politikası veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/AccessProfileDTO"
    description: "Erişim politikası listesinin bulunduğu veri yapısı."
  AccessProfileListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessProfileListDTO"
    description: "Erişim politikası listeleme işleminin cevap veri yapısı."
  AccessProfileRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessProfileDTO"
    description: "Erişim politikası verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  AccessProfileResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AccessProfileDTO"
    description: "Erişim politikası detaylarının dönüldüğü veri yapısı."
  AccessProfileCountResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessProfileCountOptions"
    description: "Politika profil sayısı cevap veri yapısı."
  AccessPolicyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessPolicyListDTO"
    description: "Erişim politikası listeleme işleminin cevap veri yapısı."
  AccessPolicyRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessPolicyDTO"
    description: "Erişim politikası verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  AccessPolicyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/AccessPolicyDTO"
    description: "Erişim politikası detaylarının dönüldüğü veri yapısı."
  AccessPolicyCountResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/AccessPolicyCountOptions"
    description: "Politika sayısı cevap veri yapısı."
  ServiceActionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        policyName:
          type: "string"
          description: "Politika isim bilgisi."
        priority:
          type: "integer"
          description: "Politika öncelik seviyesi."
        includedDevices:
          type: "array"
          description: "Patika içerisinde yer alması beklenen cihaz listesi."
          items:
            type: "string"
            description: "Cihaz id si"
        excludedDevices:
          type: "array"
          description: "Patika içerisinde yer alması istenmeyen cihaz listesi."
          items:
            type: "string"
            description: "Cihaz id si"
        linkType:
          description: "Patika için tercih edilecek link tipi"
          $ref: "#/definitions/LINK_TYPE"
        securityLevel:
          type: "integer"
          format: "int32"
          description: "Güvenlik seviyesi"
        servicePolicyClass:
          description: "Rotalama için kullanılacak servis class bilgileri"
          $ref: "#/definitions/ServicePolicyClassDTO"
        maxBandwidth:
          type: "integer"
          format: "int32"
          description: "Çıkılabilecek maximum band genişliği"
        maxBandwidthUnit:
          description: "Band genişliği birimi"
          $ref: "#/definitions/BW_UNIT"
        changeHeaders:
          description: "Değiştirilecek paket başlığı bilgileri."
          $ref: "#/definitions/ChangeHeadersInfo"
        reservedPath:
          description: "Patika rezervasyonu özelliğinin belirtildiği alandır."
          $ref: "#/definitions/RESERVED_PATH"
        reservedPathPriority:
          type: "integer"
          format: "int32"
          description: "Patika rezervasyonu özelliği (reservedPath) açık ise patika\
            \ rezervasyonu önceliğini belirtir."
        ntopRoute:
          description: "NTOP rotalama durumunun beliritildiği alandır."
          $ref: "#/definitions/NTOP_ROUTE"
        routingServices:
          description: "Uygulanacak rotalama servisleri."
          $ref: "#/definitions/RoutingServicesInfo"
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal Ağ ID değeri"
        mvtnName:
          type: "string"
          description: "Sanal Ağ ismi."
        energyConsumption:
          type: "integer"
          format: "int32"
          description: "Enerji kullanımı"
        useLowFlowSwitch:
          type: "boolean"
          description: "Düşük akış tanımı bulunan anahtarlayıcı kullan"
          default: false
        useMinHOP:
          type: "boolean"
          description: "Min. HOP sayısı ile patiha kur"
          default: false
        flowBalanceConstraintTypeList:
          type: "array"
          description: "Akışın dengeli dağılması için kullanılacak constraint listesi"
          items:
            $ref: "#/definitions/FLOWBALANCECONSTRAINTTYPE"
        sfcType:
          description: "Uygulanacak sfc tip bilgisini alır."
          $ref: "#/definitions/SfcTypeDTO"
        useControlChannel:
          type: "boolean"
          description: "Kontrol Kanalı Kullanımı"
          default: false
    description: "Hizmet aksiyonu bilgisinin bulunduğu veri yapısı."
  ServiceActionListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Hizmet aksiyonu veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/ServiceActionDTO"
    description: "Hizmet aksiyonu listesinin bulunduğu veri yapısı."
  ServiceActionListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ServiceActionListDTO"
    description: "Hizmet aksiyonu listeleme işleminin cevap veri yapısı."
  ServiceActionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ServiceActionDTO"
    description: "Hizmet aksiyonu verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  ServiceActionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/ServiceActionDTO"
    description: "Hizmet aksiyonu detaylarının dönüldüğü veri yapısı."
  ServicePolicyClassDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        bandwidth:
          type: "integer"
          format: "int64"
          description: "Sağlanması gereken bant genişliği miktarı"
        bandwidthUnit:
          description: "Band genişliği birimi"
          $ref: "#/definitions/BW_UNIT"
        jitter:
          type: "number"
          format: "double"
          description: "Jitter miktarı"
        delay:
          type: "number"
          format: "double"
          description: "Maximum gecikme değeri (ms)"
        collision:
          type: "number"
          format: "double"
          description: ""
        loss:
          type: "number"
          format: "double"
          description: "Kayıp"
        serviceClassName:
          type: "string"
          description: "Politika servis sınıfı adı."
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Sanal ağ idsi"
        mvtnName:
          type: "string"
          description: "Sanal ağ ismi."
        classLevel:
          type: "integer"
          format: "int32"
          description: "Hizmet kalitesi seviyesi"
    description: "Trafik sınıfı bilgisinin bulunduğu veri yapısı."
  ServicePolicyClassListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Trafik sınıfı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/ServicePolicyClassDTO"
    description: "Trafik sınıfı listesinin bulunduğu veri yapısı."
  ServicePolicyClassListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ServicePolicyClassListDTO"
    description: "Trafik sınıfı listeleme işleminin cevap veri yapısı."
  ServicePolicyClassRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ServicePolicyClassDTO"
    description: "Trafik sınıfı verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  ServicePolicyClassResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/ServicePolicyClassDTO"
    description: "Trafik sınıfı detaylarının dönüldüğü veri yapısı."
  EndUserApplicationDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Son kullanıcı uygulama ismi"
        addresses:
          type: "array"
          description: "Son kullanıcı uygulaması adres bilgileri"
          items:
            type: "string"
        priority:
          type: "integer"
          format: "int32"
          description: "Son kullanıcı uygulaması öncelik bilgisi"
    description: "Son kullanıcı uygulama yönetiminin veri yapısı"
  EndUserApplicationListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Son kullanıcı uygulaması veri yapısı."
          items:
            $ref: "#/definitions/EndUserApplicationDTO"
    description: "Son kullanıcı uygulama listesi veri yapısı"
  EndUserApplicationRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/EndUserApplicationDTO"
    description: "Son kullanıcı uygulamasının sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  EndUserApplicationResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/EndUserApplicationDTO"
    description: "Son kullanıcı uygulaması detaylarının dönüldüğü veri yapısı."
  EndUserApplicationListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/EndUserApplicationListDTO"
    description: "Son kullanıcı uygulaması listesinin dönüldüğü veri yapısı."
  MeterListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MeterRequestDTO"
    description: "Sanal ağdaki ya da fiziksel ağdaki  meterları listelemek için kullanı\
      lacak veri modelidir"
  MeterListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MeterListDTO"
    description: "Sanal ağdaki ya da fiziksel ağdaki meterları listeleme talebinin\
      \ cevabı olarak kullanılan veri yapısı"
  MeterRequestDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        meterType:
          description: "Listeleme talebinin hangi ağda (sanal ya da fiziksel) gerç\
            ekleşeceği bilgisi"
          $ref: "#/definitions/METER_TYPE"
    description: "Sanal ağdaki  ya da fiziksel ağdaki meterları listeleme talebini\
      \ tanımlayan veri modeli."
  MeterListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Mvtn meterlarının tutulduğu listedir."
          items:
            $ref: "#/definitions/MeterDTO"
        mvtnNetworkId:
          type: "string"
          description: "Mvtn network id bilgisi"
    description: "Sanal ağdaki  ya da fiziksel ağdaki meterları listeleme talebi listesinin\
      \ bulunduğu veri yapısı."
  MeterDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        deviceId:
          type: "string"
          description: "Meterın kurulu olduğu device id bilgisi"
        portNumber:
          type: "integer"
          format: "int64"
          description: "Meterın kurulu olduğu linkin device üzerindeki port bilgisi"
    description: "Sanal ağdaki  ya da fiziksel ağdaki meterların bilgisini veren veri\
      \ yapısı."
  METER_TYPE:
    type: "string"
    title: "TYPE"
    description: "Meter talebinin ağ bilgisi"
    enum:
    - "MVTN"
    - "USER"
    default: "MVTN"
  UserFlowStatRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "beginTime"
      - "downsamplingPeriod"
      - "endTime"
      - "knownUser"
      - "responseLimit"
      - "user"
      properties:
        user:
          type: "integer"
          format: "int64"
          description: "Eğer knownUser=false ise, IP adresi kullanıcı kimliği yerine\
            \ geçer"
        knownUser:
          type: "boolean"
          description: "Eğer kimliği doğrulanmış bir kullanıcı değilse (false), IP\
            \ adresi kullanıcı kimliği yerine geçer"
        beginTime:
          type: "integer"
          format: "int64"
        endTime:
          type: "integer"
          format: "int64"
        downsamplingPeriod:
          type: "integer"
          format: "int32"
        responseLimit:
          type: "integer"
          format: "int32"
        filter:
          $ref: "#/definitions/FlowStatFilter"
        aggregator:
          type: "array"
          items:
            $ref: "#/definitions/FlowStatAggregator"
    description: "Bir kullanıcının bir zaman aralığındaki akış istatistikleri için."
  FlowStatFilter:
    type: "object"
    properties:
      srcIP:
        type: "string"
        description: "a.b.c.d biçiminde IPv4 kaynak adresi"
      dstIP:
        type: "string"
        description: "a.b.c.d biçiminde IPv4 hedef adresi"
      protocol:
        type: "string"
        description: "tcp, udp, veya internet taşıyıcı protokollerinden biri"
      srcPort:
        type: "integer"
        format: "int32"
      dstPort:
        type: "integer"
        format: "int32"
      device:
        type: "integer"
        format: "int64"
        description: "anahtarlayıcı limlik numarası. örneğin of:000000000007'nin kimlik\
          \ numarası 7'dir"
    description: "Akış istatistiklerinin hepsini değil de sadece eşleşme alanları\
      \ belirtilen değerlerde olanları almaya yarar"
  FlowStatAggregator:
    type: "string"
    title: "FlowStatAggregator"
    description: "Akış istatistiklerini bütün alanlarına bakarak değil değil de sadece\
      \ belirtilen alanlara bakarak gruplandırmaya yarar"
    enum:
    - "srcIP"
    - "dstIP"
    - "protocol"
    - "srcPort"
    - "dstPort"
  FlowStats:
    type: "object"
    required:
    - "bytes"
    - "life"
    - "packets"
    - "rate"
    - "tstamp"
    properties:
      life:
        type: "integer"
        format: "int64"
      packets:
        type: "integer"
        format: "int64"
      bytes:
        type: "integer"
        format: "int64"
      rate:
        type: "integer"
        format: "int64"
      tstamp:
        type: "integer"
        format: "int64"
    description: "Tek bir portun istatistiklerinin tutulduğu veri yapısı."
  FlowStatsListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Kullanıcı akışlarına ait istatistik verilerinin bulunduğu\
            \ listedir."
          items:
            $ref: "#/definitions/FlowStatsDTO"
    description: "Kullanıcı akışlarına ait istatistikleri içeren cevap veri yapısı\
      ."
  FlowStatsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "device"
      - "downStats"
      - "dstIP"
      - "dstPort"
      - "port"
      - "protocol"
      - "service"
      - "srcIP"
      - "srcPort"
      - "upStats"
      properties:
        srcIP:
          type: "string"
        dstIP:
          type: "string"
        protocol:
          type: "string"
        srcPort:
          type: "integer"
          format: "int32"
        dstPort:
          type: "integer"
          format: "int32"
        service:
          type: "string"
          description: "standart internet protocol/port çiftlerine verilen adlar"
        device:
          type: "string"
        port:
          type: "integer"
          format: "int32"
        upStats:
          type: "array"
          items:
            $ref: "#/definitions/FlowStats"
        downStats:
          type: "array"
          items:
            $ref: "#/definitions/FlowStats"
    description: "Kullanıcı akışlarına ait istatistik veri transfer modeli."
  ProactivePathPolicyRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ProactivePathPolicyDTO"
    description: "Proaktif patika politikası için kullanılacak istek veri modelidir."
  ProactivePathPolicyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ProactivePathPolicyDTO"
    description: "Proaktif patika politikası için kullanılacak cevap veri modelidir."
  ProactivePathPolicyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ProactivePathPolicyListDTO"
    description: "Proaktif patika politikalarını listeleme olarak kullanılan veri\
      \ yapısı"
  ProactivePathPolicyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        intentId:
          type: "string"
          description: "Intent idsi"
        serviceAction:
          description: "Uygulanacak Hizmet Kalitesi politikası detayları."
          $ref: "#/definitions/ServiceActionDTO"
        priority:
          type: "integer"
          format: "int32"
          description: "Politika öncelik degeri"
        name:
          type: "string"
          description: "Politika ismi"
        type:
          type: "integer"
          format: "int32"
          description: "Politika tipi"
        status:
          description: "Politika durumu"
          $ref: "#/definitions/PPP_STATUS"
        startTime:
          type: "string"
          format: "date-time"
          description: "Politika baslangic zamani"
        stopTime:
          type: "string"
          format: "date-time"
          description: "Politika bitis zamani"
        fromId:
          type: "string"
          description: "Politikanin uygulanacagi kaynak id"
        toId:
          type: "string"
          description: "Politikanin uygulanacagi hedef id"
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Politikanin bagli oldugu mvtn idsi"
        mvtnName:
          type: "string"
          description: "Politikanin bagli oldugu mvtn ismi."
        subPathList:
          type: "array"
          description: "Sanal agin fiziksel topolojideki karsiliklari bilgisi"
          items:
            $ref: "#/definitions/PPPSubPathDTO"
        selectedSubPathId:
          type: "string"
          description: "Sanal agin fizikseldeki topoloji karsiliklarindan secili olan\
            \ topolojinin id bilgisi"
        mustVisitDeviceList:
          type: "array"
          description: "Patikanın uğraması gereken anahtarlayıcı listesi"
          items:
            $ref: "#/definitions/SwitchDTO"
    description: "Proaktif patika politikasını tanımlayan veri modeli."
  ProactivePathPolicyListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Proaktif patika politikaları bulunduğu listedir."
          items:
            $ref: "#/definitions/ProactivePathPolicyDTO"
    description: "Proaktif patika politikaları listesinin bulunduğu veri yapısı."
  PPPSubPathDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        links:
          type: "array"
          description: "Patika linki veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/LinkDTO"
    description: "Proaktif patika politikasını tanımlayan veri modeli."
  PPP_STATUS:
    type: "string"
    title: "PPP_STATUS"
    description: "Proaktif patikaların durum bilgisi"
    enum:
    - "NONE"
    - "ON_HOLD"
    - "ACTIVE"
    - "FINISHED"
    default: "NONE"
  MvtnCreateRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnRequestDTO"
    description: "Sanal ağ oluşturma ve güncelleme talepleri için kullanılacak veri\
      \ modelidir."
  MvtnEditChangeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnEditStatusDTO"
    description: "Sanal ağ taleplerinin statülerini değiştirecek isteklerin veri modelidir."
  MvtnRequestDeleteRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnRequestDeleteDTO"
    description: "Sanal ağ taleplerini silme istekleri için kullanılacak veri modelidir"
  MvtnCreateRequestResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnRequestDTO"
    description: "Sanal ağ oluşturma ya da güncelleme talepleri için cevap modelidir."
  MvtnEditChangeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MvtnEditStatusDTO"
    description: "Sanal ağ taleplerinin statü değişikliği için kullanılacak cevap\
      \ modelidir."
  MvtnRequestListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/MvtnRequestListDTO"
    description: "Sanal ağ taleplerini listelemek için kullanılacak veri modelidir."
  MvtnRequestDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        status:
          description: "Sanal ağ talep statüsü"
          $ref: "#/definitions/MVTN_REQUEST_STATUS"
        topologyData:
          description: "Sanal ağ talebi topoloji bilgisi."
          $ref: "#/definitions/TopologyDTO"
        mvtnId:
          type: "integer"
          format: "int32"
          description: "Talebin ait olduğu sanal ağ id bilgisi"
        mvtnName:
          type: "string"
          description: "Talebin ait olduğu sanal ağ ismi"
        username:
          type: "string"
          description: "Sanal ağ talebini yapan kişi bilgisi"
        creationDate:
          type: "string"
          format: "date-time"
          description: "Talebin yaratılma zamanı"
        lastUpdateDate:
          type: "string"
          format: "date-time"
          description: "Talebin son güncellenme zamanı"
        mvtnType:
          description: "Sanal ağ talep değiştirilebilirliğnini bilgisi."
          $ref: "#/definitions/MVTN_TYPE"
    description: "Sanal ağ talebi veri modelidir."
  MvtnEditStatusDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        status:
          description: "İstek talebinin statü bilgisi"
          $ref: "#/definitions/MVTN_REQUEST_STATUS"
        mvtnType:
          description: "İstek talebinin type bilgisi"
          $ref: "#/definitions/MVTN_TYPE"
    description: "Sanal ağ talebinin statü ve type bilgisini gösteren veri modeli"
  MvtnRequestDeleteDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        deleteIdList:
          type: "array"
          description: "Silinecek sanal ağ taleplerinin bilgilerinin bulunduğu liste\
            \ bilgisi"
          items:
            type: "integer"
            description: "Sanal ağ taleplerinin id bilgisi"
    description: "Silinecek sanal ağ taleplerinin veri modelidir."
  MvtnRequestListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Sanal ağ taleplerinin listesi."
          items:
            description: "Sanal ağ talep bilgisi"
            $ref: "#/definitions/MvtnRequestDTO"
    description: "Sanal ağ taleplerinin liste bilgisini gösteren veri modeli."
  MVTN_REQUEST_STATUS:
    type: "string"
    title: "MVTN_REQ_STATUS"
    description: "MVTN taleplerinin durum bilgisi"
    enum:
    - "CREATED"
    - "EDITED"
    - "ACCEPTED"
    - "EDIT_REJECTED"
    - "CREATE_REJECTED"
    default: "CREATED"
  CONFIG_VALUE_TYPE:
    type: "string"
    title: "CONFIG_VALUE_TYPE"
    description: "Konfigürasyon değer tipini\nbelirten ENUM değeri.\nDeğerler şunlardı\
      r;\n\n| Adı      | Açıklama             |\n|:---------|:---------------------|\n\
      | STRING   | String Tipi          |\n| BYTE     | Byte Tipi            |\n|\
      \ INTEGER  | Integer Tipi         |\n| LONG     | Long Tipi            |\n|\
      \ FLOAT    | Float Tipi           |\n| DOUBLE   | Double Tipi          |\n|\
      \ BOOLEAN  | Boolean Tipi         |\n"
    enum:
    - "STRING"
    - "BYTE"
    - "INTEGER"
    - "LONG"
    - "FLOAT"
    - "DOUBLE"
    - "BOOLEAN"
    default: "STRING"
  NODE_TYPE:
    type: "string"
    title: "NODE_TYPE"
    description: "Modül node tipini\nbelirten ENUM değeri.\nDeğerler şunlardır;\n\n\
      | Adı                 | Açıklama                |\n|:--------------------|:------------------------|\n\
      | CONTROLLER          | Kontrolcü Tipi          |\n| API_CORE            | Api\
      \ Core Tipi           |\n| ALARM_MANAGER       | Alarm Yönetim Tipi      |\n\
      | STATISTICS_MANAGER  | İstatistik Yönetim Tipi |\n| NAS                 | Ağ\
      \ Erişim Kontrol Tipi  |\n| DHCP                | DHCP Kontrol Tipi       |\n\
      | EDR                 | Olay Kayıt Yönetim Tipi |\n| SDNIP               | BGP\
      \ Yönetim Tipi        |\n| NFV_ADAPTER         | NFV ADAPTER Tipi        |\n\
      | DHCP_CENTRAL_WAN    | DHCP Tipi               |\n| SFC                 | SFC\
      \ Tipi                |\n"
    enum:
    - "CONTROLLER"
    - "API_CORE"
    - "ALARM_MANAGER"
    - "STATISTICS_MANAGER"
    - "NAS"
    - "DHCP"
    - "EDR"
    - "SDNIP"
    - "NFV_ADAPTER"
    - "DHCP_CENTRAL_WAN"
    - "SFC"
    default: "CONTROLLER"
  ConfigDefinitionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "componentName"
      - "configKey"
      - "nodeType"
      - "valueType"
      properties:
        definitionId:
          type: "integer"
          format: "int32"
          description: "Konfigürasyon tanımı tekil id değeri."
        nodeType:
          description: "Modül node tipi."
          $ref: "#/definitions/NODE_TYPE"
        componentName:
          type: "string"
          description: "Konfigüre edilecek komponent adı."
        configKey:
          type: "string"
          description: "Konfigüre edilecek anahtar değeri."
        valueType:
          description: "Konfigüre edilecek değer tipi."
          $ref: "#/definitions/CONFIG_VALUE_TYPE"
        defaultValue:
          type: "string"
          description: "Konfigüre edilecek anahtara ait varsayılan değer."
        description:
          type: "string"
          description: "Konfigüre edilecek anahtarın tanımı."
    description: "Konfigürasyon tanımı veri modeli."
  ModuleNodesDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "nodeType"
      properties:
        nodeType:
          description: "Modül node tipi."
          $ref: "#/definitions/NODE_TYPE"
        moduleVersions:
          type: "array"
          description: "Modül versiyonlarına gruplanmış node listesi."
          items:
            description: "Modül tipi başına versiyon listesi"
            $ref: "#/definitions/VersionNodesDTO"
    description: "Modül elemanlarının listesini içerir."
  VersionNodesDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "nodeVersion"
      properties:
        nodeVersion:
          type: "string"
          description: "Modül versiyon değeri."
        nodes:
          type: "array"
          description: "Modül versiyonlarına gruplanmış node listesi."
          items:
            type: "string"
            description: "Node id değeri"
    description: "Modül versiyonu başına node listesi."
  ModuleNodeConfigDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "configDefinition"
      - "configId"
      - "configValue"
      properties:
        configId:
          type: "integer"
          format: "int32"
          description: "Konfigürasyon id değeri."
        configDefinition:
          description: "Konfigürasyon tanım verisi."
          $ref: "#/definitions/ConfigDefinitionDTO"
        nodeId:
          type: "string"
          description: "Node id değeri."
        nodeVersion:
          type: "string"
          description: "Node versiyon değeri."
        configValue:
          type: "string"
          description: "Konfigürasyon değeri."
    description: "Konfigürasyon tanımı veri modeli."
  ConfigDefinitionListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Konfigürasyon tanımlarının bulunduğu listedir."
          items:
            $ref: "#/definitions/ConfigDefinitionDTO"
    description: "Konfigürasyon tanım listesi."
  ModuleNodesListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Modül node tanımlarının bulunduğu listedir."
          items:
            $ref: "#/definitions/ModuleNodesDTO"
    description: "Modül node listesi."
  ModuleNodeConfigListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Modül node konfigürasyonları tanımlarının bulunduğu listedir."
          items:
            $ref: "#/definitions/ModuleNodeConfigDTO"
    description: "Modül node konfigürasyonlarının listesi."
  ModuleNodeConfigSearchDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "nodeType"
      properties:
        nodeType:
          description: "Modül node tipi."
          $ref: "#/definitions/NODE_TYPE"
        nodeId:
          type: "string"
          description: "Node id değeri."
        nodeVersion:
          type: "string"
          description: "Node versiyon değeri."
    description: "Konfigürasyon listesi sorgulama istek veri modeli."
  ConfigDefinitionListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ConfigDefinitionListDTO"
    description: "Konfigürasyon tanımları listeleme işleminin cevap veri yapısı."
  ConfigDefinitionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ConfigDefinitionDTO"
    description: "Konfigürasyon tanımları işleminin cevap veri yapısı."
  ConfigDefinitionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ConfigDefinitionDTO"
    description: "Konfigürasyon tanımları işlemi istek veri yapısı."
  ModuleNodesListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ModuleNodesListDTO"
    description: "Modül node listesi cevap veri yapısı."
  ModuleNodeConfigListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ModuleNodeConfigSearchDTO"
    description: "Modül node konfigürasyon listesi istek veri yapısı."
  ModuleNodeConfigListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ModuleNodeConfigListDTO"
    description: "Modül node konfigürasyon listesi cevap veri yapısı."
  ModuleNodeConfigResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ModuleNodeConfigDTO"
    description: "Modül node konfigürasyon cevap veri yapısı."
  ModuleNodeConfigRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ModuleNodeConfigDTO"
    description: "Modül node konfigürasyon istek veri yapısı."
  IP_VERSION_TYPE:
    type: "string"
    title: "IPVERSIONTYPE"
    description: "IP versiyon türünü belirtir. Değerler şunlardır:\n| Adı        \
      \     | Açıklama                   |\n|-----------------|----------------------------|\n\
      | IPV4            | Ip versiyonu = ipv4        |\n| IPV6            | Ip versiyonu\
      \ = ipv6        |\n"
    enum:
    - "IPV4"
    - "IPV6"
    default: "IPV4"
  OPTION_TYPE:
    type: "string"
    title: "OPTIONTYPE"
    description: "DhcpOption türünü belirtir. Değerler şunlardır:\n| Adı         \
      \    | Açıklama                             |\n|-----------------|--------------------------------------|\n\
      | NUMBER          | DhcpOption türü = Integer veya Long  |\n| STRING       \
      \   | DhcpOption türü = String             |\n| IP_ADDRESS      | DhcpOption\
      \ türü = Ip Addresi         |\n| DATE_TIME       | DhcpOption türü =  tarih\
      \ / zaman     |\n"
    enum:
    - "NUMBER"
    - "STRING"
    - "IP_ADDRESS"
    - "DATE_TIME"
    default: "STRING"
  DhcpOptionKeyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "optionNumber"
      - "optionType"
      properties:
        optionNumber:
          type: "integer"
          format: "int32"
          description: "DhcpOptionKeyRequest içinde belirtilen sayıya karşılık gelen\
            \ dhcpOptionKey seçeneğinin adıdır."
        name:
          type: "string"
          description: "DhcpOptionKeyRequest içinde dhcpOptionKey seçeneğine karşı\
            lık gelen sayıdır."
        optionType:
          description: "DhcpOption türüdür."
          $ref: "#/definitions/OPTION_TYPE"
    description: "Belirtilen bir dhcp kapsamı (dhcpScope) içindeki dhcpOptionKey alanı\
      nı içeren nesnedir."
  DhcpOptionKeyListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpOptionKeyDTO"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki mac adresi-ip\
      \ adresi çiftlerini içeren nesnelerin listesidir."
  DhcpIpReservedDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "dhcpRangeId"
      - "ip"
      - "mac"
      properties:
        dhcpRangeId:
          type: "string"
          description: "Ayrılmış ip adresinin ait olduğu dhcp ip menzil id numarası\
            dır."
        mac:
          type: "string"
          description: "Belirtilen ip adresi için ayrılmış mac adresidir."
        ip:
          type: "string"
          description: "Belirtilen mac adresi ile eşleştirilmiş ip adresidir."
        description:
          type: "string"
          description: "Açıklama"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki belirtilen\
      \ bir mac adresi-ip adresi çiftini içeren nesnedir."
  DhcpIpReservedListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIpReservedDTO"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki mac adresi-ip\
      \ adresi çiftlerini içeren nesnelerin listesidir."
  DhcpIpReservedUserDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "dhcpRangeId"
      - "ip"
      - "userId"
      - "username"
      properties:
        dhcpRangeId:
          type: "string"
          description: "Ayrılmış ip adresinin ait olduğu dhcp ip menzil id numarası\
            dır."
        userId:
          type: "string"
          description: "Belirtilen ip adresi için kullanıcı ID değeridir."
        username:
          type: "string"
          description: "Belirtilen ip adresi için kullanıcı adı değeridir."
        ip:
          type: "string"
          description: "Belirtilen mac adresi ile eşleştirilmiş ip adresidir."
        description:
          type: "string"
          description: "Açıklama"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki belirtilen\
      \ bir kullanıcı-ip adresi çiftini içeren nesnedir."
  DhcpIpReservedUserListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIpReservedUserDTO"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki kullanıcı\
      -ip adresi çiftlerini içeren nesnelerin listesidir."
  DhcpIpExcludedDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "dhcpRangeId"
      - "ipEnd"
      - "ipStart"
      properties:
        dhcpRangeId:
          type: "string"
          description: "Kullanılması yasaklanmış ip adresinin ait olduğu dhcp menzilinin\
            \ kimlik (id) numarasıdır."
        ipStart:
          type: "string"
          description: "Yasaklanmış ip (IpExcluded) aralığının başlangıç ip adresidir."
        ipEnd:
          type: "string"
          description: "Yasaklanmış ip (IpExcluded) aralığının sonuç ip adresidir."
        description:
          type: "string"
          description: "Açıklama"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki kullanılması\
      \ yasaklanmış bir ip adres aralığını gösteren nesnedir."
  DhcpIpExcludedListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIpExcludedDTO"
    description: "Belirtilen bir dhcp ip menzili (dhcpIpRange) içindeki kullanılması\
      \ yasaklanmış ip adres aralıklarını gösteren nesnelerin listesidir."
  DhcpOptionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "dhcpOptionKey"
      - "dhcpOptionValue"
      - "dhcpScopeId"
      properties:
        dhcpScopeId:
          type: "string"
          description: "DhcpOption'un ait olduğu dhcp kapsamının kimlik (id) numarası\
            dır."
        dhcpOptionKey:
          type: "integer"
          format: "int32"
          description: "DhcpOption haritası (map) anahtarıdır."
        dhcpOptionValue:
          type: "string"
          description: "DhcpOption haritası değeridir."
    description: "dhcp kapsamı içindeki bir opsiyonel yapılandırma veri haritası (map)\
      \ DTO nesnesidir."
  DhcpOptionListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpOptionDTO"
    description: "dhcp kapsamı içindeki opsiyonel yapılandırma veri harita DTO nesnelerinin\
      \ listesidir."
  DhcpIpRangeDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "dhcpScopeId"
      - "ipEnd"
      - "ipStart"
      - "networkMask"
      properties:
        dhcpScopeId:
          type: "string"
          description: "Dhcp ip menzilinin ait olduğu dhcp kapsamının kimlik (id)\
            \ numarasıdır."
        ipStart:
          type: "string"
          description: "Dhcp ip menzilinin (DhcpIpRange) başlangıç ip adresidir."
        ipEnd:
          type: "string"
          description: "Dhcp ip menzilinin (DhcpIpRange) sonuç ip adresidir."
        networkMask:
          type: "string"
          description: "ip adresi için ağ maskesidir."
        ipsExcludedDtos:
          type: "array"
          description: "Dhcp ip menzili (DhcpIpRange) içinde yeralan yasaklanmış ip\
            \ adres aralıkları listesidir."
          items:
            $ref: "#/definitions/DhcpIpExcludedDTO"
        ipsReservedDtos:
          type: "array"
          description: "Dhcp ip menzili (DhcpIpRange) içinde yeralan belirli mac adresi-ip\
            \ adresi çiftleri için ayrılmış ip adreslerinin listesidir."
          items:
            $ref: "#/definitions/DhcpIpReservedDTO"
        ipsReservedUserDtos:
          type: "array"
          description: "Dhcp ip menzili (DhcpIpRange) içinde yeralan belirli kullanı\
            cı-ip adresi çiftleri için ayrılmış ip adreslerinin listesidir."
          items:
            $ref: "#/definitions/DhcpIpReservedUserDTO"
    description: "DhcpIpRange veri transfer modelidir."
  DhcpIpRangeListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIpRangeDTO"
    description: "Dhcp ip menzili (DhcpIpRange) verilerini içeren DTO nesnelerinin\
      \ listesidir."
  DhcpIpPoolDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "domainId"
      - "ipAddress"
      - "subnetMask"
      properties:
        domainId:
          type: "integer"
          format: "int64"
          description: "Ait olduğu dhcp domainini idsidir."
        ipAddress:
          type: "string"
          description: "Domainin sahip olma zorunluluğu olan ip prefixidir. Prefix\
            \ sonrası set edilmeyen 255 byte alanlar 0 ile yollanmak zorundadır."
        subnetMask:
          type: "string"
          description: "Domainin sahip olması gereken subnetmask ini gösteriyor."
    description: "Dhcpde ip range oluşturulması için uyulması gereken ip aralığı modelidir."
  DhcpIpPoolListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIpPoolDTO"
    description: "Dhcp kapsamı (DhcpIpPoolDTO) verilerini içeren DTO nesnelerinin\
      \ listesidir."
  DhcpScopeDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "domainServers"
      - "ipVersionType"
      - "name"
      - "routerAddresses"
      properties:
        networkId:
          type: "string"
          description: "Ağ kimlik numarasıdır."
        vlanId:
          type: "integer"
          format: "int64"
          description: "Ağ cihazının bağlı olduğu vlanId bilgisidir."
        ipVersionType:
          description: "Ip versiyon numarasıdır."
          $ref: "#/definitions/IP_VERSION_TYPE"
        dhcpIpRangeDtos:
          type: "array"
          description: "dhcp kapsamına verilmiş ip adres menzilleri listesidir."
          items:
            $ref: "#/definitions/DhcpIpRangeDTO"
        dhcpOptionDtos:
          type: "array"
          description: "dhcp kapsamı içindeki opsiyonel yapılandırma veri haritaları\
            nın (map) listesidir."
          items:
            $ref: "#/definitions/DhcpOptionDTO"
        name:
          type: "string"
          description: "Dhcp kapsamı adı"
        routerAddresses:
          type: "string"
          description: "Ağ geçitleri, birden fazla ağ geçidi virgülle ayrılarak tanı\
            mlanır"
        domainServers:
          type: "string"
          description: "DNS sunucuları, birden fazla sunucu adresi virgülle ayrılarak\
            \ tanımlanır."
    description: "Dhcp kapsamı (DhcpScope) veri transfer modelidir."
  DhcpScopeListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpScopeDTO"
    description: "Dhcp kapsamı (DhcpScope) verilerini içeren DTO nesnelerinin listesidir."
  DhcpIPOwnerDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "IP"
      - "endDate"
      - "hostName"
      - "startDate"
      - "userName"
      properties:
        hostName:
          type: "string"
          description: "IP sahibi cihazın adi."
        IP:
          type: "string"
          description: "DHCP tarafindan atanan IP"
        MAC:
          type: "string"
          description: "Cihazin MAC adresi"
        userName:
          type: "string"
          description: "Kullanıcı adi"
        startDate:
          type: "string"
          format: "date-time"
          description: "IP atama zamani"
        endDate:
          type: "string"
          format: "date-time"
          description: "IP bitis zamani"
    description: "Dhcp IP sahibi veri transfer modelidir."
  DhcpIPOwnerListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/DhcpIPOwnerDTO"
    description: "Dhcp IP sahibi (DhcpIPOwnerDTO) verilerini içeren DTO nesnelerinin\
      \ listesidir."
  DhcpScopeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpScopeDTO"
    description: "Dhcp kapsamı (DhcpScope) verilerinin sunucuya iletilmesi için kullanı\
      lan veri yapısıdır."
  DhcpIpPoolRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpPoolDTO"
    description: "Dhcp kapsamı (DhcpIpPool) verilerinin sunucuya iletilmesi için kullanı\
      lan veri yapısıdır."
  DhcpIpRangeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpRangeDTO"
    description: "Dhcp ip menzili (DhcpIpRange) verilerinin sunucuya iletilmesi iç\
      in kullanılan veri yapısıdır."
  DhcpOptionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpOptionDTO"
    description: "DhcpOption verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısıdır."
  DhcpIpExcludedRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpExcludedDTO"
    description: "Yasaklanmış ip adresi (DhcpIpExcluded) verilerinin sunucuya iletilmesi\
      \ için kullanılan veri yapısıdır."
  DhcpIpReservedRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedDTO"
    description: "Ayrılmış ip adresi (ipReserved) verilerinin sunucuya iletilmesi\
      \ için kullanılan veri yapısıdır."
  DhcpIpReservedUserRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedUserDTO"
    description: "Ayrılmış ip adresi (ipReservedUser) verilerinin sunucuya iletilmesi\
      \ için kullanılan veri yapısıdır."
  DhcpScopeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpScopeDTO"
    description: "Dhcp kapsamı (DhcpScope) isteğine verilecek cevabın veri yapısı\
      dır."
  DhcpScopeListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpScopeListDTO"
    description: "Dhcp kapsamı (DhcpScope) ayrıntılarının listelendiği işlemin cevap\
      \ veri yapısıdır."
  DhcpIpPoolResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpPoolDTO"
    description: "Dhcp kapsamı (DhcpIpPool) isteğine verilecek cevabın veri yapısı\
      dır."
  DhcpIpPoolListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpPoolListDTO"
    description: "Dhcp kapsamı (DhcpIpPool) ayrıntılarının listelendiği işlemin cevap\
      \ veri yapısıdır."
  DhcpIpRangeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpRangeDTO"
    description: "Dhcp ip menzili (DhcpIpRange) isteğine verilecek cevabın veri yapı\
      sıdır."
  DhcpIpRangeListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpRangeListDTO"
    description: "Dhcp ip menzili (DhcpIpRange) ayrıntılarının listelendiği işlemin\
      \ cevap veri yapısıdır."
  DhcpOptionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpOptionDTO"
    description: "DhcpOption isteğine verilecek cevabın veri yapısıdır."
  DhcpOptionListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpOptionListDTO"
    description: "DhcpScope ayrıntılarının listelendiği işlemin cevap veri yapısı\
      dır."
  DhcpIpExcludedResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpExcludedDTO"
    description: "Yasaklanmış ip (DhcpIpExcluded) isteğine verilecek cevabın veri\
      \ yapısıdır."
  DhcpIpExcludedListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpExcludedListDTO"
    description: "Yasaklanmış ip (DhcpIpExcluded) ayrıntılarının listelendiği işlemin\
      \ cevap veri yapısıdır."
  DhcpIpReservedResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedDTO"
    description: "Ayrılmış ip (DhcpIpReserved) isteğine verilecek cevabın veri yapı\
      sıdır."
  DhcpIpReservedListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedListDTO"
    description: "Ayrılmış ip (DhcpIpReserved) ayrıntılarının listelendiği işlemin\
      \ cevap veri yapısıdır."
  DhcpIpReservedUserResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedUserDTO"
    description: "Ayrılmış ip (DhcpIpReserved) isteğine verilecek cevabın veri yapı\
      sıdır."
  DhcpIpReservedUserListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIpReservedUserListDTO"
    description: "Ayrılmış ip (DhcpIpReservedUser) ayrıntılarının listelendiği iş\
      lemin cevap veri yapısıdır."
  DhcpOptionKeyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpOptionKeyDTO"
    description: "DhcpOptionKey isteğine verilecek cevabın veri yapısıdır."
  DhcpOptionKeyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpOptionKeyListDTO"
    description: "DhcpOptionKey listesini içeren cevap veri yapısıdır."
  DhcpIPOwnerListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/DhcpIPOwnerListDTO"
    description: "DhcpIPOwner listesini içeren cevap veri yapısıdır."
  FeatureDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          description: "Özellik Adı."
        processingStatus:
          description: "İşleme Durumu."
          $ref: "#/definitions/PROCESSING_STATUS"
        currentStatus:
          description: "Mevcut Durum."
          $ref: "#/definitions/CURRENT_STATUS"
        description:
          type: "string"
          description: "Özellik açıklaması"
        featureVersion:
          type: "string"
          description: "Versiyon açıklaması"
        startTime:
          type: "string"
          format: "date-time"
          description: "Özellik başlangıç zamanı"
        isRequired:
          type: "boolean"
    description: "feature detaylarının bulunduğu veri yapısı."
  FeatureListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Özellik profillerinin listesi."
          items:
            $ref: "#/definitions/FeatureDTO"
    description: "Özellik profillerinin bulundugu veri modeli."
  ControllerNodeDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          description: "Düğüm Adı."
        deviceList:
          type: "array"
          items:
            type: "string"
        type:
          description: "Düğüm Tipi."
          $ref: "#/definitions/CONTROLLER_NODE_TYPE"
        status:
          description: "Düğüm Durumu."
          $ref: "#/definitions/CONTROLLER_STATUS"
        managementAddress:
          type: "string"
          description: "Düğüm yönetici adresi"
        managementPort:
          type: "string"
          description: "Düğüm yöneten portu"
        location:
          type: "string"
          description: "Düğüm lokasyonu"
        clusterId:
          type: "string"
          description: "küme id'si"
        nmNodeId:
          type: "string"
          description: "nm düğüm id'si"
        controllerNodeId:
          type: "string"
          description: "kontrolcü düğüm idsi"
        openflowVersions:
          type: "string"
          description: "Kontrolcünün konuştuğu openflow versiyonları."
        featureVisible:
          type: "boolean"
          description: "Görevler listesinin gösterilip gösterilmeyeceği bilgisi."
    description: "Kontrolcü düğüm veri yapısı."
  ControllerNodeListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Controller profillerinin listesi."
          items:
            $ref: "#/definitions/ControllerNodeDTO"
    description: "Kontrolcü profillerinin bulundugu veri modeli."
  ClusterDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      properties:
        name:
          type: "string"
          description: "Küme Adı."
    description: "Küme veri yapısı."
  ClusterListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Küme profillerinin listesi."
          items:
            $ref: "#/definitions/ClusterDTO"
    description: "Küme profillerinin bulundugu veri modeli."
  ControllerNodeRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ControllerNodeDTO"
    description: "Kontrolcü verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  FeatureRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FeatureDTO"
    description: "Özellik verilerinin sunucuya iletilmesi için kullanılan veri yapı\
      sı."
  FeatureListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FeatureListDTO"
    description: "Özellik listelemek için kullanılacak istek veri modelidir."
  ControllerNodeListRequest:
    allOf:
    - $ref: "#/definitions/GenericIdRequest"
    - type: "object"
    description: "Özellik listelemek için kullanılacak istek veri modelidir."
  PrognetDeviceRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchDTO"
    description: "Anahtarlayıcı ile ilgili kayıt - güncelleme komutlarının sunucuya\
      \ iletilmesi için kullanılan veri yapısıdır."
  PrognetDeviceListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchListDTO"
    description: "Anahtarlayıcı ile ilgili listeleme komutlarının cevapları için kullanı\
      lan veri yapısıdır."
  FeatureListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FeatureListDTO"
    description: "Özellik listelendiği işleminin cevap veri yapısı."
  FeatureResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/FeatureDTO"
    description: "Özellik listelendiği işleminin cevap veri yapısı."
  ControllerNodeListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ControllerNodeListDTO"
    description: "Özellik listelendiği işleminin cevap veri yapısı."
  ControllerNodeResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ControllerNodeDTO"
    description: "Özellik listelendiği işleminin cevap veri yapısı."
  ClusterListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ClusterListDTO"
    description: "Küme işleminin cevap veri yapısı."
  PrognetDeviceResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchDTO"
    description: "Anahtarlayıcı ile ilgili isteklere verilecek cevabın veri yapısı\
      dır."
  PrognetDeviceListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SwitchListDTO"
    description: "Anahtarlayıcı ile ilgili listeleme komutlarının cevapları için kullanı\
      lan veri yapısıdır."
  CONTROLLER_STATUS:
    type: "string"
    title: "CONTROLLER_STATUS"
    description: "Kontrolcü bağlantı durumunu belirten ENUM değeridir.\nDeğerler ş\
      unlardır;\n\n| Adı     | Açıklama              |\n|:--------|:----------------------|\n\
      | ACTIVE  | Kontrolcü Bağlı       |\n| PASSIVE | Kontrolcü Bağlı Değil |\n"
    enum:
    - "ACTIVE"
    - "PASSIVE"
    default: "PASSIVE"
  CONTROLLER_NODE_TYPE:
    type: "string"
    title: "CONTROLLER_NODE_TYPE"
    description: "Düğümün tipini belirten ENUM değeridir.\nDeğerler şunlardır;\n\n\
      | Adı                 | Açıklama        |\n|:--------------------|:----------------|\n\
      | CONTROLLER          | Kontrolcü       |\n| NETWORK_MANAGEMENT  | Ağ Yönetimi\
      \     |\n"
    enum:
    - "CONTROLLER"
    - "NETWORK_MANAGEMENT"
    default: "CONTROLLER"
  CURRENT_STATUS:
    type: "string"
    title: "CURRENT_STATUS"
    description: "Mevcut durumu belirten ENUM değeridir.\nDeğerler şunlardır;\n\n\
      | Adı         | Açıklama              |\n|:------------|:----------------------|\n\
      | INSTALLED   | İşleme Yapıldı        |\n| UNINSTALLED | İşleme Yapılı Değil\
      \   |\n| PROCESSING  | İşleme Yapılmakta     |\n"
    enum:
    - "INSTALLED"
    - "UNINSTALLED"
    - "PROCESSING"
    default: "UNINSTALLED"
  PROCESSING_STATUS:
    type: "string"
    title: "PROCESSING_STATUS"
    description: "İşleme durumunu belirten ENUM değeridir.\nDeğerler şunlardır;\n\n\
      | Adı         | Açıklama               |\n|:------------|:-----------------------|\n\
      | FAILED      | Özellik Başarılı Değil |\n| SUCCESS     | Özellik Başarılı \
      \      |\n| NONE        | Özellik Mevcut Değil   |\n"
    enum:
    - "FAILED"
    - "SUCCESS"
    - "NONE"
    default: "NONE"
  EDR_STATUS:
    type: "string"
    title: "EDR_STATUS"
    description: "EDR nesnelerinin genel durumunu belirten ENUM değeri.\nDeğerler\
      \ şunlardır;\n\n| Adı      | Açıklama                            |\n|:---------|:------------------------------------|\n\
      | SUCCESS  | EDR da işaret edilen olay başarılı  |\n| FAIL     | EDR da işaret\
      \ edilen olay başarısız |\n"
    enum:
    - "SUCCESS"
    - "FAIL"
    default: "SUCCESS"
  EDR_FIELDS:
    type: "string"
    title: "EDR_FIELDS"
    description: "EDR tarafından kullanılan alanları belirten ENUM'dur\nDeğerleri\
      \ şunlardır;\n+ timeStart\n+ timeEnd\n+ status\n+ userId\n+ sourceIp\n+ destinationIp\n\
      + sourceMAC\n+ destinationMAC\n+ sourcePort\n+ destinationPort\n+ protocol\n\
      + xid\n+ moduleId\n+ data\n"
    enum:
    - "TIMESTART"
    - "TIMEEND"
    - "STATUS"
    - "USERID"
    - "SOURCEIP"
    - "DESTINATIONIP"
    - "SOURCEMAC"
    - "DESTINATIONMAC"
    - "SOURCEPORT"
    - "DESTINATIONPORT"
    - "PROTOCOL"
    - "XID"
    - "MODULEID"
    - "DATA"
    default: "TIMESTART"
  EdrSearchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/EdrSearchCriteria"
    description: "EDR araştırma kriterlerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısıdır."
  EdrSearchCriteria:
    type: "object"
    properties:
      timeStart:
        type: "string"
        description: "EDR sorgulama başlangıç tarihi."
      timeEnd:
        type: "string"
        description: "EDR sorgulama sonuç tarihi."
      status:
        description: "EDR da işaret edilen olayın durumu."
        $ref: "#/definitions/EDR_STATUS"
      username:
        type: "string"
        description: "Kullanıcı Adı."
      sourceIP:
        type: "string"
        description: "Kaynak IP adresi."
      destinationIP:
        type: "string"
        description: "Hedef IP adresi."
      sourceMAC:
        type: "string"
        description: "Kaynak MAC adresi."
      destinationMAC:
        type: "string"
        description: "Hedef MAC adresi."
      sourcePort:
        type: "integer"
        format: "int32"
        description: "Kaynak port."
      destinationPort:
        type: "integer"
        format: "int32"
        description: "Hedef port."
      protocol:
        type: "string"
        description: "IP protokolü."
      xid:
        type: "string"
        description: "İstek kodu."
      module:
        type: "string"
        description: "Modül Adı."
      limit:
        type: "integer"
        format: "int32"
        description: "Dönülecek edr sayısının sınırı."
      data:
        type: "string"
        description: "Bu alanda farklı edr türleri için bulunan key-value değerleri\
          \ burada yeralıyor."
    description: "EDR araştırma kriterlerinin bulunduğu veri yapısıdır."
  EdrListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/EdrListDTO"
    description: "EDR listeleme işleminin cevap veri yapısı."
  EdrListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "EDR nesnelerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/EdrDTO"
    description: "EDR listesinin bulunduğu veri yapısı."
  EdrDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        time:
          type: "string"
          format: "date-time"
          description: "EDR oluşma tarihi."
        status:
          description: "EDR da işaret edilen olayın durumu."
          $ref: "#/definitions/EDR_STATUS"
        username:
          type: "string"
          description: "Kullanıcı Adı."
        module:
          type: "string"
          description: "Modül Adı."
        sourceIP:
          type: "string"
          description: "Kaynak IP adresi."
        destinationIP:
          type: "string"
          description: "Hedef IP adresi."
        sourceMAC:
          type: "string"
          description: "Kaynak MAC adresi."
        destinationMAC:
          type: "string"
          description: "Hedef MAC adresi."
        sourcePort:
          type: "integer"
          format: "int32"
          description: "Kaynak port."
        destinationPort:
          type: "integer"
          format: "int32"
          description: "Hedef port."
        protocol:
          type: "string"
          description: "IP protokolü."
        xid:
          type: "string"
          description: "İstek kodu"
        data:
          type: "string"
          description: "EDR içeriği. <Anahtar>=<Deger> biçiminde tanımlı."
    description: "EDR detaylarının bulunduğu veri yapısı."
  METHOD_TYPE:
    type: "string"
    title: "GAUGEMETHOD"
    description: "Ölçerin hesaplanma metodu türünü belirtir. Değerler şunlardır:\n\
      | Adı             | Açıklama                   |\n|-----------------|----------------------------|\n\
      | AVERAGE         | Hesaplama metodu = average |\n| SUM             | Hesaplama\
      \ metodu = sum     |\n| MIN             | Hesaplama metodu = min     |\n| MAX\
      \             | Hesaplama metodu = max     |\n| CUSTOM          | Hesaplama\
      \ metodu = custom  |\n"
    enum:
    - "AVERAGE"
    - "SUM"
    - "MIN"
    - "MAX"
    - "CUSTOM"
    default: "AVERAGE"
  MONITOR_TYPE:
    type: "string"
    title: "MONITORTYPE"
    description: "Gösterge türünü belirtir. Değerler şunlardır:\n| Adı           \
      \  | Açıklama                   |\n|-----------------|----------------------------|\n\
      | COUNTER         | Gösterge Türü = counter    |\n| GAUGE           | Gösterge\
      \ Türü = gauge      |\n"
    enum:
    - "COUNTER"
    - "GAUGE"
    default: "COUNTER"
  MonitorTagValue:
    type: "object"
    required:
    - "tag"
    - "val"
    properties:
      tag:
        type: "string"
      val:
        type: "string"
    description: "Metrik veri noktalarında olması gereken tag=val"
  CounterProperties:
    type: "object"
    properties:
      speedEnabled:
        type: "boolean"
        description: "id numarası ile belirtilen sayacın artım hızının (zamana gö\
          re birinci türevidir) hesaplandığı bilgisidir."
        default: false
      accerelationEnabled:
        type: "boolean"
        description: "id numarası ile belirtilen sayacın artım ivmesinin (zamana gö\
          re ikinci türevidir) hesaplandığı bilgisidir."
        default: false
    description: "id numarası ile belirtilen gösterge sayaç ise özellik belirten verilerine\
      \ (metadata) ait alanları içerir."
  GaugeProperties:
    type: "object"
    properties:
      methodType:
        description: "id numarası ile belirtilen ölçerin hesaplanma yöntemini gösterir."
        $ref: "#/definitions/METHOD_TYPE"
      loLimit:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen ölçerin olabilecek en düşük değeridir."
      hiLimit:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen ölçerin olabilecek en yüksek değ\
          eridir."
      loAlarm:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen ölçerin histerisisli alarm davranı\
          şının düşük eşik değeridir."
      hiAlarm:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen ölçerin histerisisli alarm davranı\
          şının yüksek eşik değeridir."
      lowIsBad:
        type: "boolean"
        description: "id numarası ile belirtilen ölçer için düşük değerlerin kötü\
          \ olduğunu belirtir."
        default: false
    description: "id numarası ile belirtilen gösterge ölçer ise özellik belirten verilerine\
      \ (metadata) ait alanları içerir."
  MonitorInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "comesFromTSDB"
      - "distributed"
      - "goesToTSDB"
      - "monitorTags"
      - "monitorType"
      - "name"
      - "node"
      - "owner"
      - "period"
      - "unit"
      properties:
        owner:
          type: "string"
          description: "id numarası ile belirtilen göstergeye sahip olan uygulamanı\
            n adıdır."
        name:
          type: "string"
          description: "id numarası ile belirtilen göstergenin adıdır."
        node:
          type: "string"
          description: "id numarası ile belirtilen göstergenin bulunduğu kontrolcü\
            nün id numarasıdır."
        distributed:
          type: "boolean"
          description: "id numarası ile belirtilen göstergenin dağıtık olduğu bilgisidir."
          default: false
        monitorType:
          description: "id numarası ile belirtilen göstergenin türüdür."
          $ref: "#/definitions/MONITOR_TYPE"
        goesToTSDB:
          type: "boolean"
          description: "id numarası ile belirtilen göstergenin TSDB'ye yazıldığı bilgisidir."
          default: false
        comesFromTSDB:
          type: "boolean"
          description: "id numarası ile belirtilen göstergenin TSDB'den okunduğu bilgisidir."
          default: false
        monitorTags:
          type: "array"
          description: "id numarası ile belirtilen göstergenin TSDB kullanılan bir\
            \ instance'ı için atanmış ayırıcı tag map listesidir."
          items:
            $ref: "#/definitions/MonitorTagValue"
        unit:
          type: "string"
          description: "id numarası ile belirtilen göstergenin birimidir."
        period:
          type: "integer"
          format: "int32"
          description: "id numarası ile belirtilen göstergenin saniye biriminden ekranda\
            \ güncellenme periyodudur."
        CounterFields:
          description: "id numarası ile belirtilen gösterge sayaç ise özellik belirten\
            \ verilerine (metadata) ait alanları içerir."
          $ref: "#/definitions/CounterProperties"
        GaugeFields:
          description: "id numarası ile belirtilen gösterge ölçer ise özellik belirten\
            \ verilerine (metadata) ait alanları içerir."
          $ref: "#/definitions/GaugeProperties"
    description: "Göstergeleri ve alanlarını içeren veri yapısıdır."
  MonitorInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/MonitorInfoDTO"
    description: "Göstergeleri ve onlara ait alanları içeren nesnelerin listesidir."
  MonitorSearchCriteria:
    type: "object"
    properties:
      id:
        type: "string"
        description: "id numarası "
      owner:
        type: "string"
        description: "id numarası ile belirtilen göstergeye sahip olan uygulamanı\
          n adıdır."
      name:
        type: "string"
        description: "id numarası ile belirtilen göstergenin adıdır."
      monitorTags:
        type: "array"
        description: "id numarası ile belirtilen göstergenin TSDB kullanılan bir instance'ı\
          \ için atanmış ayırıcı tag map listesidir."
        items:
          $ref: "#/definitions/MonitorTagValue"
      monitorType:
        description: "id numarası ile belirtilen göstergenin türüdür."
        $ref: "#/definitions/MONITOR_TYPE"
    description: "MonitorSelect istek nesnesi içinde yeralabilecek araştırma kriter\
      \ alanlarını içerir."
  MonitorSelectDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "RequestFields"
      - "ResponseFields"
      properties:
        RequestFields:
          description: "MonitorSelect istek nesnesi içinde yeralabilecek araştırma\
            \ kriter alanlarını içerir."
          $ref: "#/definitions/MonitorSearchCriteria"
        ResponseFields:
          type: "array"
          description: "MonitorSelect isteğine karşı gönderilecek cevap nesnesinin\
            \ içinde yeralabilecek alanları içerir."
          items:
            type: "string"
            description: "Alan isimleri"
    description: "Göstergelerin araştırma kriterlerinin ve gönderilecek alanlarını\
      n belirtildiği veri yapısıdır."
  MonitorSelectListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/MonitorSelectDTO"
    description: "Araştırma kriterlerine uygun göstergeleri ve onlara ait alanları\
      \ içeren nesnelerin listesidir."
  MonitorSelectRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorSelectDTO"
    description: "Göstergeleri araştırma kriterlerinin sunucuya iletilmesi için kullanı\
      lan veri yapısıdır."
  MonitorSelectResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorInfoDTO"
    description: "MonitorSelect isteğine verilecek cevabın veri yapısıdır."
  MonitorSelectListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorInfoListDTO"
    description: "MonitorSelect isteğine verilecek liste şeklindeki cevabın veri yapı\
      sıdır."
  CounterValues:
    type: "object"
    properties:
      value:
        type: "integer"
        format: "int64"
        description: "id numarası ile belirtilen sayacın değeridir."
      speed:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen sayacın artım hızıdır (zamana gö\
          re birinci türevidir)."
      accerelation:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen sayacın artım ivmesidir (zamana gö\
          re ikinci türevidir)."
    description: "id numarası ile belirtilen gösterge sayaç ise değer içeren verilerine\
      \ ait alanları içerir."
  GaugeValues:
    type: "object"
    properties:
      value:
        type: "number"
        format: "double"
        description: "id numarası ile belirtilen ölçerin anlık değeridir."
      inAlarm:
        type: "boolean"
        description: "id numarası ile belirtilen ölçer için alarm verilmiş olduğu\
          \ bilgisidir."
        default: false
    description: "id numarası ile belirtilen gösterge ölçer ise özellik belirten verilerine\
      \ (metadata) ait alanları içerir."
  MonitorValueDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        CounterFields:
          description: "id numarası ile belirtilen gösterge sayaç ise değer içeren\
            \ verilerine ait alanları içerir."
          $ref: "#/definitions/CounterValues"
        GaugeFields:
          description: "id numarası ile belirtilen gösterge ölçer ise özellik belirten\
            \ verilerine (metadata) ait alanları içerir."
          $ref: "#/definitions/GaugeValues"
    description: "id numarası ile belirtilen bir göstergeye ait değerleri içeren nesnedir."
  MonitorValueListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          items:
            $ref: "#/definitions/MonitorValueDTO"
    description: "id numaraları ile belirtilen göstergeleri ve onlara ait değerleri\
      \ içeren nesnelerin listesidir."
  MonitorValueResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorValueDTO"
    description: "MonitorValue isteğine verilecek cevabın veri yapısıdır."
  MonitorValueListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorValueListDTO"
    description: "MonitorValue isteğine verilecek liste şeklindeki cevabın veri yapı\
      sıdır."
  MonitorAlarmSetDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "hiAlarm"
      - "idList"
      - "loAlarm"
      properties:
        idList:
          type: "array"
          description: "göstergeye ait id numarasıdır."
          items:
            type: "string"
        loAlarm:
          type: "number"
          format: "double"
          description: "id numarası ile belirtilen ölçerin histerisisli alarm davranı\
            şının düşük eşik değeridir."
        hiAlarm:
          type: "number"
          format: "double"
          description: "id numarası ile belirtilen ölçerin histerisisli alarm davranı\
            şının yüksek eşik değeridir."
    description: "id numarası ile belirtilen bir göstergeye (ölçer olmalıdır) ait\
      \ alarm kurgularını içeren nesnedir."
  MonitorAlarmSetRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorAlarmSetDTO"
    description: "Kurulmak istenen alarmların sunucuya bildirilmesi için kullanılan\
      \ veri yapısıdır."
  MonitorAlarmSetResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MonitorAlarmSetDTO"
    description: "MonitorAlarm isteğine verilecek cevabın veri yapısıdır"
  SmsDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        to:
          type: "string"
          description: "Smsin kime gönderileceği"
        source:
          description: "Smsi atan uygulamanın adı"
          $ref: "#/definitions/SMS_SOURCE"
        message:
          type: "string"
          description: "Smsin içeriği"
        sender:
          type: "string"
          description: "Smsi atan uygulamanın adı"
        username:
          type: "string"
          description: "Sms apisini kulanmak için kullanılan username"
        password:
          type: "string"
          description: "Sms apisini kulanmak için kullanılan password"
    description: "Sms bilgisinin bulunduğu veri yapısı.\""
  SMS_SOURCE:
    type: "string"
    title: "SMS_SOURCE"
    description: "Sms kaynak tipi"
    enum:
    - "NAS"
    - "NONE"
    default: "NONE"
  Sms:
    type: "object"
    required:
    - "message"
    - "password"
    - "sender"
    - "source"
    - "to"
    - "username"
    properties:
      to:
        type: "string"
        description: "Smsin kime gönderileceği"
      source:
        description: "Smsi atan uygulamanın adı"
        $ref: "#/definitions/SMS_SOURCE"
      message:
        type: "string"
        description: "Smsin içeriği"
      sender:
        type: "string"
        description: "Smsi atan uygulamanın adı"
      username:
        type: "string"
        description: "Sms apisini kulanmak için kullanılan username"
      password:
        type: "string"
        description: "Sms apisini kulanmak için kullanılan password"
    description: "Uygulamalar tarafından detaysız sms objesi"
  Vnfd:
    type: "object"
    required:
    - "id"
    - "name"
    properties:
      id:
        type: "string"
      name:
        type: "string"
    description: "Sanal ağ fonksiyon tipi."
  VimInstanceBase:
    type: "object"
    required:
    - "id"
    - "name"
    - "type"
    properties:
      id:
        type: "string"
      name:
        type: "string"
      type:
        type: "string"
    description: "VIM instance tem."
  VnfdTypeVimInstancesItem:
    type: "object"
    required:
    - "vimInstances"
    - "vnfd"
    properties:
      vnfd:
        $ref: "#/definitions/Vnfd"
      vimInstances:
        type: "array"
        items:
          $ref: "#/definitions/VimInstanceBase"
    description: "Sanal ağ fonksiyon tipi ve çalışacak Vim bilgisidir."
  VnfdTypeVimInstancesMap:
    type: "object"
    properties:
      vimInstances:
        type: "array"
        items:
          $ref: "#/definitions/VnfdTypeVimInstancesItem"
    description: "Sanal ağ fonksiyon tanım tipinin çalışacan Vim lerle eşleme bilgisi."
  NetServiceDescListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "nsdOptions"
      properties:
        nsdOptions:
          $ref: "#/definitions/ListOptions"
    description: "Ağ Servis tanımı listeleme işlemi için kullanılacak veri modelidir."
  NetServiceDescDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "enabled"
      - "name"
      properties:
        projectId:
          type: "string"
          description: "ProjectID değeri"
        name:
          type: "string"
          description: "Ağ servis tanımı adı"
        vendor:
          type: "string"
          description: "Ağ servis tanımı vendor değeri"
        nsdVersion:
          type: "string"
          description: "Ağ servis tanımı sürüm değeri"
        enabled:
          type: "boolean"
          description: "Ağ servis tanımı geçerlilik durumu"
          default: false
        rawData:
          type: "string"
          description: "Tüm NSD tanım JSON değeri"
        vnfdSumamryList:
          type: "array"
          description: "NSD'yi calistirmak icin gerekli olan VNFD tanımlarını tutan\
            \ liste"
          items:
            $ref: "#/definitions/VirtualNetFunctionDTO"
    description: "Ağ servis tanımı bilgisinin bulunduğu veri yapısı."
  NetServiceDescListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Ağ servis tanımı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NetServiceDescDTO"
    description: "Ağ servis tanımı listesinin bulunduğu veri yapısı."
  NetServiceDescListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetServiceDescListDTO"
    description: "Ağ servis tanımı listeleme işleminin cevap veri yapısı."
  NetServiceDescRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetServiceDescDTO"
    description: "Ağ servis tanımı verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  NetServiceDescResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NetServiceDescDTO"
    description: "Ağ servis tanımı detaylarının dönüldüğü veri yapısı."
  VirtualNetFunctionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "vnfType"
      properties:
        name:
          type: "string"
          description: "Sanal ağ fonksiyonu adı"
        vendor:
          type: "string"
          description: "Sanal ağ fonksiyonu vendor değeri"
        vnfVersion:
          type: "string"
          description: "Sanal ağ fonksiyonu sürüm değeri"
        vnfType:
          type: "string"
          description: "Sanal ağ fonksiyonun tipi"
        rawData:
          type: "string"
          description: "Tüm NSD tanım JSON değeri"
        forceUpdate:
          type: "boolean"
          description: "force update tanımı"
          default: true
    description: "Sanal ağ fonksiyonu tanımı bilgisinin bulunduğu veri yapısı."
  VirtualNetFunctionInstanceListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VirtualNetFunctionInstanceListDTO"
    description: "VNFR sunucudan donus objesi"
  VirtualNetFunctionInstanceListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "vimInstanceId"
      properties:
        vimInstanceId:
          type: "string"
          description: "Bulundugu VIM yeri"
        zoneId:
          type: "string"
          description: ""
        computeHostId:
          type: "string"
          description: ""
        computeHostIp:
          type: "string"
          description: ""
        vnfServerId:
          type: "string"
          description: ""
        vnfciHostName:
          type: "string"
          description: ""
        vnfType:
          type: "string"
          description: ""
        vnfIp:
          type: "string"
          description: ""
    description: "VNFR istek objesi"
  VirtualNetFunctionInstanceListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Her bir vnfi objesinin tutuldugu yer"
          items:
            $ref: "#/definitions/VirtualNetFunctionInstanceDTO"
    description: "VNFI bilgilerinn tutuldugu liste"
  VirtualNetFunctionInstanceDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        vimInstanceId:
          type: "string"
          description: "Bulundugu VIM yeri"
        projectId:
          type: "string"
          description: "Hangi projede bulundugu yer"
        vnfType:
          type: "string"
          description: "Türü , (ex : server,client etc.)"
        vnfdId:
          type: "string"
          description: ""
        vnfServerId:
          type: "string"
          description: "Bulundugu server'ın id'si"
        vnfciHostname:
          type: "string"
          description: ""
        vnfciId:
          type: "string"
          description: ""
        nsdId:
          type: "string"
          description: ""
        nsrId:
          type: "string"
          description: ""
        vnfrId:
          type: "string"
          description: ""
        vnfrVersion:
          type: "string"
          description: ""
        vduId:
          type: "string"
          description: ""
        computeIpaddr:
          type: "string"
          description: "CompuHost e baglı olan ip adresi"
        computeHostId:
          type: "string"
          description: ""
        computeHostName:
          type: "string"
          description: ""
        state:
          type: "string"
          description: "Aktif olup olmadıgını belirtmek icin"
        zone:
          type: "string"
          description: "Hangi zone'da oldugunu belirtmek icin"
        interfaceAttachments:
          $ref: "#/definitions/InterfaceAttachments"
        vimInstanceName:
          type: "string"
          description: "Bulundugu vim adı"
        vmIp:
          type: "string"
          description: ""
        failOverDescription:
          type: "string"
          description: ""
        rawData:
          type: "string"
          description: "Ham data"
        floatingIp:
          type: "string"
          description: ""
    description: "Sanal ağ fonksiyonu tanımı bilgisinin bulunduğu veri yapısı."
  InterfaceAttachments:
    type: "object"
    properties:
      interfaceAttachment:
        type: "array"
        description: ""
        items:
          $ref: "#/definitions/InterfaceAttachment"
    description: "InterfaceAttachment listesini tutan obje"
  InterfaceAttachment:
    type: "object"
    properties:
      fixedIps:
        $ref: "#/definitions/FixedIps"
      macAddress:
        type: "string"
        description: "bulundugu mac adresi"
      netId:
        type: "string"
        description: "net numarası"
      portId:
        type: "string"
        description: "erisilecegi port"
      portState:
        type: "string"
        description: "mevcut durumda bulundugu port'un durumu"
    description: "VIM uzerinde bulunan arayuz bilgileri(Ex:OpenStack)"
  FixedIps:
    type: "object"
    properties:
      fixedIp:
        type: "array"
        description: ""
        items:
          $ref: "#/definitions/FixedIp"
    description: "FixedIps listesini tutan obje"
  FixedIp:
    type: "object"
    properties:
      ipAddress:
        type: "string"
        description: "ip bilgisi"
      subnetId:
        type: "string"
        description: "alt ag bilgileri"
    description: "VNFR icin istenilen fixed ip bilgileri"
  VirtualNetFunctionInstanceActionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "vimInstanceId"
      - "vmInstanceId"
      properties:
        vmInstanceId:
          type: "string"
          description: "VM id'si"
        vimInstanceId:
          type: "string"
        actionType:
          type: "string"
          description: "Stop ve Restart islemlerinde kullanılacak SOFT | HARD "
    description: "OpenStack uzerindeki VM'leri moduler olarak start/stop/reboot edilmesi"
  VirtualNetFunctionInstanceActionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "osResponse"
      properties:
        osResponse:
          type: "string"
    description: "OpenStack uzerindeki VM'leri moduler olarak start/stop/reboot edilmesi\
      \ işleminin cevap veri yapısı."
  VnfciActionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "ipAddress"
      - "nsrId"
      - "vduId"
      - "vimId"
      - "vnfciId"
      - "vnfrId"
      properties:
        vimId:
          type: "string"
          description: "Bu objede eger stopByIp&startByIp cagiriliacaksa zorunlu"
        ipAddress:
          type: "string"
          description: "Bu objede eger stopByIp&startByIp cagiriliacaksa zorunlu"
        nsrId:
          type: "string"
          description: "Bu objede eger start&stop cagiriliacaksa zorunlu"
        vnfrId:
          type: "string"
          description: "Bu objede eger start&stop cagiriliacaksa zorunlu"
        vduId:
          type: "string"
          description: "Bu objede eger start&stop cagiriliacaksa zorunlu"
        vnfciId:
          type: "string"
          description: "Bu objede eger start&stop cagiriliacaksa zorunlu"
    description: "OpenBaton uzerindeki VNFCI'ları start/stop etme islemi istek yapisi"
  VnfActionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "computeHostIp"
      - "nsdId"
      - "vimInstanceId"
      - "vnfdType"
      - "vnfrId"
      properties:
        vimInstanceId:
          type: "string"
          description: "Calisan vm'in hangi vim'de oldugunu belirtmek icin"
        computeHostIp:
          type: "string"
          description: "Failover senaryoları icin de kullanılacak"
        vnfdType:
          type: "string"
          description: "vnf tipi (firewall,iperf etc.)"
        nsdId:
          type: "string"
          description: "Yapıya gore her nsd'de tek vnfd belirlendigi icin , belirtilen\
            \ nsd'yi yani vnfd'yi ayaga kaldırmak icin gereken id"
        vnfrId:
          type: "string"
          description: "Failover senaryoları icin kullanılacak sadece"
        vnfIp:
          type: "string"
          description: "Failover senaryosu icin kullanılacak sadece"
    description: "OpenBaton uzerinden calistirilan VM'ler ile ilgili remove/start\
      \ servislerinin istek objesi"
  VnfActionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "obResponse"
      properties:
        obResponse:
          type: "string"
        failOverDesc:
          type: "string"
          description: "Failover senaryosunda kullanılacak sadece"
    description: "OpenBaton uzerinden calistirilan VM'ler ile ilgili remove/start\
      \ servislerinin cevap objesi"
  VnfciActionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "obResponse"
      properties:
        obResponse:
          type: "string"
    description: "OpenBaton uzerindeki VNFCI'ları start/stop etme islemi donus yapisi"
  VirtualNetFunctionListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Sanal ağ fonksiyonu tanımı veri transfer modellerinin bulunduğ\
            u listedir."
          items:
            $ref: "#/definitions/VirtualNetFunctionDTO"
    description: "Sanal ağ fonksiyonu tanımı listesinin bulunduğu veri yapısı."
  VirtualNetFunctionListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "vnfOptions"
      properties:
        vnfOptions:
          $ref: "#/definitions/ListOptions"
        nsdId:
          type: "string"
          description: "Ağ servis tanımı (NSD) ID değeri. Bu değer sağlandığı durumda,\
            \ belirtilen NSD tarafından tanımlanan VNF'ler listelenecektir."
    description: "Sanal ağ fonksiyonu tanımı listeleme işlemi için kullanılacak veri\
      \ modelidir."
  VirtualNetFunctionListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VirtualNetFunctionListDTO"
    description: "Sanal ağ fonksiyonu tanımı listeleme işleminin cevap veri yapısı\
      ."
  VirtualNetFunctionRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VirtualNetFunctionDTO"
    description: "Sanal ağ fonksiyonu tanımı verilerinin sunucuya iletilmesi için\
      \ kullanılan veri yapısı."
  VirtualNetFunctionResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/VirtualNetFunctionDTO"
    description: "Sanal ağ fonksiyonu tanımı detaylarının dönüldüğü veri yapısı."
  NetServiceRecordDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Çalışan NSR'ın adı"
        task:
          type: "string"
          description: "NSD'nin calisitildiktan sonra durumu"
        state:
          type: "string"
          description: "Mevcut NSR'ın durumu"
        nsrVersion:
          type: "string"
          description: "NSR'ın versiyonu"
        rawData:
          type: "string"
          description: "Raw JSON verisi"
    description: "Ağ servis kayıtı bilgisinin bulunduğu veri yapısı."
  NetServiceRecordLaunchDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        keys:
          type: "array"
          description: "Anahtarlar"
          items:
            type: "string"
        configurations:
          type: "object"
          description: "Konfigürasyon objesi"
          properties: {}
        vduVimInstancesMap:
          description: "Vnfd Type Vim Instances map objesi"
          $ref: "#/definitions/VnfdTypeVimInstancesMap"
    description: "Ağ servis kayıtı başlatma veri yapısı."
  NetServiceRecordLaunchRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        nsdId:
          type: "string"
          description: "İligli NSD ID değeri"
        data:
          description: "Başlatma isteği detay verileri"
          $ref: "#/definitions/NetServiceRecordLaunchDTO"
    description: "Ağ servis kayıtı başlantma isteği için kullanılan veri yapısı."
  NetServiceRecordRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetServiceRecordDTO"
    description: "Ağ servis kayıtı verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  NetServiceRecordResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/NetServiceRecordDTO"
    description: "Ağ servis kayıtı detaylarının dönüldüğü veri yapısı."
  NetServiceRecordListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Çalışan ağ servislerini tutan liste"
          items:
            $ref: "#/definitions/NetServiceRecordDTO"
    description: "Çalışan ağ servislerinin tümünü listelemek için kullanılan veri\
      \ yapısı."
  NetServiceRecordListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NetServiceRecordListDTO"
    description: "Çalışan ağ servislerinin geri döünüşü için kullanılacak cevap yapı\
      sı"
  NetServiceRecordListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "nsrOptions"
      properties:
        nsrOptions:
          $ref: "#/definitions/ListOptions"
    description: "Çalışan ağ servislerinin geri döünüşü için kullanılacak istek yapı\
      sı"
  NetServiceRecordLaunchByPlacementRequest:
    allOf:
    - $ref: "#/definitions/NetServiceRecordLaunchRequest"
    - type: "object"
      required:
      - "placementData"
      properties:
        placementData:
          $ref: "#/definitions/NetServiceRecordLaunchByPlacementDTO"
    description: "Mevcut NSD'nin hangi host ve zone'da calismasini saglamak icin yonlendirilmesi\
      \ gereken istek"
  NetServiceRecordLaunchByPlacementDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "vnfInstancePlacementMap"
      - "vnfMetadataMap"
      properties:
        vnfInstancePlacementMap:
          $ref: "#/definitions/VnfInstancePlacementMap"
        vnfMetadataMap:
          $ref: "#/definitions/VnfMetadataMap"
    description: ""
  VnfInstancePlacementMap:
    type: "object"
    required:
    - "vnfComputeZonePair"
    - "vnfName"
    properties:
      vnfName:
        type: "string"
        description: ""
      vnfComputeZonePair:
        type: "array"
        description: ""
        items:
          $ref: "#/definitions/VnfComputeZonePair"
    description: ""
  VnfComputeZonePair:
    type: "object"
    required:
    - "computeHostName"
    - "zone"
    properties:
      zone:
        type: "string"
        description: ""
      computeHostName:
        type: "string"
        description: ""
      vimInstanceName:
        type: "string"
        description: ""
    description: ""
  VnfMetadataMap:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "vnfMetadataMapArray"
      - "vnfName"
      properties:
        vnfName:
          type: "string"
          description: ""
        vnfMetadataMapArray:
          type: "array"
          description: "Her bir VNF objesinin sahip oldugu bilgiler butunlugu"
          items:
            $ref: "#/definitions/VnfMetadataMapArray"
    description: "VNF'lerin metadata bilgileri"
  VnfMetadataMapArray:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        mdKey:
          type: "string"
          description: ""
        mdValue:
          type: "string"
          description: ""
    description: "VNF metadata bilgileri"
  VimInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "VIM bilgilerinin her biri icin ayrı objelerinin tutuldugu\
            \ yer"
          items:
            $ref: "#/definitions/VimInfoDTO"
    description: "VIM bilgilerinin listesi tutmak icin kullanılacak veri modeli"
  VimInfoListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "vimOptions"
      properties:
        vimOptions:
          $ref: "#/definitions/ListOptions"
    description: "VIM listesini almak icin kullanılacak istek tipi"
  VimInfoListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VimInfoListDTO"
    description: "VIM listesinin icinde donulecek cevap modeli"
  VimNetworkSubnetListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "VIM bilgilerinin her biri icin ayrı objelerinin tutuldugu\
            \ yer"
          items:
            $ref: "#/definitions/VimNetworkSubnetDTO"
    description: "VIM bilgilerinin listesi tutmak icin kullanılacak veri modeli"
  VimNetworkListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: ""
          items:
            $ref: "#/definitions/VimNetworkDTO"
    description: "VIM ag bilgilerinin listesinin tutulacağı ana tanım"
  VimInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "vimLocation"
      - "vimNetworks"
      properties:
        vimLocation:
          description: "VIM bilgisinin bulundugu yer/lokasyon"
          $ref: "#/definitions/VimLocationDTO"
        vimNetworks:
          description: "VIM bilgisinde bulunan ag listesi"
          $ref: "#/definitions/VimNetworkListDTO"
        type:
          type: "string"
          description: "Ağ servis tanımı adı"
        projectId:
          type: "string"
          description: ""
        active:
          type: "boolean"
          description: ""
          default: true
        name:
          type: "string"
          description: ""
        vimInstanceName:
          type: "string"
          description: ""
        computeHostList:
          type: "array"
          description: "VIM'de bulunan ComputeHost'ların butunu"
          items:
            $ref: "#/definitions/ComputeHostInfoDTO"
    description: "Ağ servis tanımı bilgisinin bulunduğu veri yapısı."
  VimInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VimInfoDTO"
    description: ""
  VimInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/VimInfoDTO"
    description: ""
  VimLocationDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "vimId"
      properties:
        vimId:
          type: "string"
          description: "Lokasyon id"
        locationVersion:
          type: "string"
          description: "Lokasyon versiyonu"
        name:
          type: "string"
          description: "Lokasyon adı"
        latitude:
          type: "string"
          description: "Lokasyonun enlemi"
        longitude:
          type: "string"
          description: "Lokasyon boylamı"
    description: "VIM bilgisinin bulundugu yer"
  VimNetworkSubnetDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: ""
        extId:
          type: "string"
          description: ""
        networkId:
          type: "string"
          description: ""
        cidr:
          type: "string"
          description: ""
        gatewayIp:
          type: "string"
          description: ""
    description: ""
  VimNetworkDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        subnetList:
          description: ""
          $ref: "#/definitions/VimNetworkSubnetListDTO"
        name:
          type: "string"
          description: ""
        external:
          type: "string"
    description: "VIM bilgisinin bulundugu yer"
  ZoneObjectDTO:
    type: "object"
    properties:
      zoneInfoList:
        description: "Zone bilgilerinin her biri icin tutuldugu dizi objesi"
        $ref: "#/definitions/ZoneInfoListDTO"
    description: "Zone bilgilerinin tutuldugu yer"
  ZoneInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Zone bilgilerinin her biri icin ayrı objelerinin tutuldugu\
            \ yer"
          items:
            $ref: "#/definitions/ZoneInfoDTO"
    description: "Zone bilgilerinin listesi tutmak icin kullanılacak veri modeli"
  ZoneInfoDTO:
    type: "object"
    properties:
      zoneName:
        type: "string"
        description: "Zone adı"
      zoneHostList:
        type: "array"
        items:
          $ref: "#/definitions/ZoneHostInfoDTO"
    description: ""
  ZoneHostInfoDTO:
    type: "object"
    properties:
      hostName:
        type: "string"
        description: "Bulundugu yer"
      ipAddress:
        type: "string"
        description: "ip adresi"
      available:
        type: "boolean"
        description: "uygunlugu"
        default: true
      active:
        type: "boolean"
        description: "aktifligi"
        default: true
      updateAt:
        type: "string"
        description: "en son guncellendigi zaman"
      zoneHostId:
        type: "integer"
        format: "int32"
        description: "hypervisor listesiden gelen deger"
    description: "Her bir zone bilgisini tutan veri"
  ZoneHostInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Her bir alt Zone bilgilerini tutan dizi"
          items:
            $ref: "#/definitions/ZoneHostInfoDTO"
    description: "Alt Zone bilgilerini tutan dizi"
  ZoneInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      properties:
        ip:
          type: "string"
          description: "Host edilen ip degeri"
        name:
          type: "string"
          description: "Tanımlanan zone"
        vimInstanceId:
          type: "string"
          description: "VIM tanım numarası"
    description: "Zone bilgilerini olustrmak icin istenilen istek"
  ZoneInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ZoneObjectDTO"
    description: "Zone bilgilerini dönmek icin gerekli olan dönüs"
  ZoneInfoListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "vimInstanceId"
      properties:
        vimInstanceId:
          type: "string"
          description: "Istenilen VIM'in zone bilgilerini"
    description: "Zone listesini almak icin kullanılacak istek tipi"
  ZoneInfoListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ZoneObjectDTO"
    description: "Zone listesini donmek icin kullanılacak istek tipi"
  ComputeHostDTO:
    type: "object"
    required:
    - "computeHostList"
    - "rawResponseData"
    properties:
      computeHostList:
        $ref: "#/definitions/ComputeHostListDTO"
      rawResponseData:
        type: "string"
        description: "Sunucudan dönen bütün veriyi saglar"
    description: "Compute bilgilerinin listesi tutmak icin kullanılacak veri modeli"
  ComputeHostListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        computeHostList:
          type: "array"
          description: "Her bir alt Zone bilgilerini tutan dizi"
          items:
            $ref: "#/definitions/ComputeHostInfoDTO"
    description: "Alt Zone bilgilerini tutan dizi"
  ComputeHostInfoDTO:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int32"
        description: "Compute host'un id'si"
      host_ip:
        type: "string"
        description: "Compute host'un ip'si"
      hypervisor_hostname:
        type: "string"
        description: "Compute'un bulundugu hypervisor adı"
      status:
        type: "string"
        description: "Compute'un aktifligi"
      state:
        type: "string"
        description: "Compute'un durumu ayakta olup olmadıgı"
      hypervisor_type:
        type: "string"
        description: "Hypervisor'un tipi"
    description: "Her bir zone bilgisini tutan veri"
  ComputeHostStatisticListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        computeHostStatisticList:
          type: "array"
          description: "Her bir istatistik bilgisini tutan dizi modeli"
          items:
            $ref: "#/definitions/ComputeStatisticsDTO"
    description: "Istatistiki bilgilerin tumunu toplayan data modeli"
  ComputeHostStatisticsDTO:
    type: "object"
    required:
    - "rawResponseData"
    - "statistics"
    properties:
      statistics:
        $ref: "#/definitions/ComputeStatisticsDTO"
      rawResponseData:
        type: "string"
        description: "Sunucudan dönen bütün veriyi saglar"
    description: "Node'un istatistik bilgilerini tutan veri modeli"
  ComputeStatisticsDTO:
    type: "object"
    properties:
      vcpus:
        type: "integer"
        format: "int32"
        description: ""
      vcpus_used:
        type: "integer"
        format: "int32"
        description: ""
      running_vms:
        type: "integer"
        format: "int32"
        description: ""
      current_workload:
        type: "integer"
        format: "int32"
        description: ""
      memory_mb:
        type: "integer"
        format: "int32"
        description: ""
      memory_mb_used:
        type: "integer"
        format: "int32"
        description: ""
      free_ram_mb:
        type: "integer"
        format: "int32"
        description: ""
      free_disk_gb:
        type: "integer"
        format: "int32"
        description: ""
      disk_available_least:
        type: "integer"
        format: "int32"
        description: ""
      local_gb:
        type: "integer"
        format: "int32"
        description: ""
      local_gb_used:
        type: "integer"
        format: "int32"
        description: ""
      computeHostId:
        type: "integer"
        format: "int32"
        description: ""
      uptimeDetail:
        $ref: "#/definitions/ComputeStatisticsUptimeDetail"
      computeHostIp:
        type: "string"
        description: ""
    description: "Istatistik veri modeli"
  ComputeStatisticsUptimeDetail:
    type: "object"
    properties:
      current_node_time:
        type: "string"
        description: "mevcut node'un zamanı"
      running_time:
        type: "string"
        description: "ne zamandan beri calistigi"
      logged_users:
        type: "integer"
        format: "int32"
        description: "sistemdeki kullanıcı sayısı"
      past1MinLoad:
        type: "number"
        format: "double"
        description: ""
      past5MinLoad:
        type: "number"
        format: "double"
        description: ""
      past15MinLoad:
        type: "number"
        format: "double"
        description: ""
    description: "Istatistik veri modeli"
  ComputeHostGenericDTO:
    type: "object"
    required:
    - "computeHostInfo"
    - "rawResponseData"
    properties:
      computeHostInfo:
        $ref: "#/definitions/ComputeHostInfoDTO"
      rawResponseData:
        type: "string"
        description: "Sunucudan dönen bütün veriyi saglar"
    description: "Compute bilgilerinin listesi tutmak icin kullanılacak veri modeli"
  ComputeHostListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "vimInstanceId"
      properties:
        vimInstanceId:
          type: "string"
          description: "Istenilen Compute'un listesi"
    description: "Compute host listesini almak icin kullanılacak istek tipi"
  ComputeHostListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ComputeHostListDTO"
    description: "Compute host listesini donmek icin kullanılacak istek tipi"
  ComputeHostStatisticRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      properties:
        vimInstanceId:
          type: "string"
          description: "Istenilen VIM'in istatiki bilgilerinin unique degeri"
        computeHostId:
          type: "string"
          description: "Hangi compute host'ta ki oldugunu istemek icin"
    description: "Zone bilgilerini olustrmak icin istenilen istek"
  ComputeHostStatisticResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ComputeStatisticsDTO"
        vimInstanceId:
          type: "string"
          description: "VIM id"
    description: "Zone bilgilerini dönmek icin gerekli olan dönüs"
  ComputeHostRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      properties:
        vimInstanceId:
          type: "string"
          description: "VIM bilgisinin tutuldugu unique alan"
        ip:
          type: "string"
          description: "Hangi compute node ip degerinin tutuldugu yer"
    description: "Compute Node bilgilerini olustrmak icin istenilen istek"
  ComputeHostResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ComputeHostGenericDTO"
    description: "Node bilgilerini dönmek icin gerekli olan dönüs"
  ComputeHostStatisticListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
      required:
      - "vimInstanceId"
      properties:
        vimInstanceId:
          type: "string"
          description: "Istenilen VIM'de ki istatistiki bilgilerin alımı icin talep\
            \ edilen vim numarası"
    description: "Butun istatistiki bilgilerin istek objesi"
  ComputeHostStatisticListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/ComputeHostStatisticListDTO"
    description: "VIM uzerinde bulunan butun compute'ların istatistiki bilgilerin\
      \ tumu"
  VimVmStatusInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "vmIp"
      properties:
        vmIp:
          type: "string"
          description: "OS de bulunan VM in ip si"
    description: "Ağ servis kayıtı verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  VimVmStatusInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/VimVmStatusInfoDTO"
    description: "Ağ servis kayıtı detaylarının dönüldüğü veri yapısı."
  VimVmStatusInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        status:
          type: "string"
          description: "VM durumu"
        hostStatus:
          type: "string"
          description: "Compute hostta bulunan VM in durumu"
        vimId:
          type: "string"
          description: "Mevcut VIM in id si"
    description: "Ağ servis kayıtı bilgisinin bulunduğu veri yapısı."
  CertificateDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "zipFile"
      properties:
        zipFile:
          type: "string"
          description: "Sertifikaların bulunduğu zip dosyası."
    description: "Sertifika istek veri transfer veri modeli."
  CertificateRequestDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "nodeType"
      properties:
        name:
          type: "string"
          description: "Sertifika öznesinin adı."
        address:
          description: "Sertifika üretilen makineye  ait kontrol adres bilgilerinin\
            \ bulunduğu veri yapısı. (IPv4,IPv6,MAC)"
          $ref: "#/definitions/AddressInfo"
        isSaved:
          type: "boolean"
          description: "Sertifika dosya yapısına yazılsın mı? 'True' ise kaydedilecektir."
          default: false
        nodeType:
          description: "Sertifika istenilen düğümün tipi."
          $ref: "#/definitions/CERTIFICATE_TYPE"
    description: "Sertifika veri transfer veri modeli."
  CERTIFICATE_TYPE:
    type: "string"
    title: "CERTIFICATE_REQUEST_TYPE"
    description: "Sertifika tipi."
    enum:
    - "SWITCH"
    - "CONTROLLER"
    - "NM"
    - "AYB"
    - "RABBITMQ"
    default: "SWITCH"
  CertificateRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/CertificateRequestDTO"
    description: "Sertifika üretme komutunun sunucuya iletilmesi için kullanılan veri\
      \ yapısıdır."
  CertificateResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/CertificateDTO"
    description: "Anahtarlayıcı ile ilgili isteklere verilecek cevabın veri yapısı\
      dır."
  WanPortInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "linkSpeed"
      - "name"
      - "sourcePortNumber"
      - "sourceSwitchId"
      - "speedUnit"
      - "superPortNumber"
      - "targetClusterId"
      properties:
        name:
          type: "string"
          description: "Geniş alan ağlarının gerişlerinin bilgi Adı."
        sourceSwitchId:
          type: "string"
          description: "Geniş alan ağlarının gerişlerinin bağlı olduğu anahtarlayı\
            cı anumarası."
        sourcePortNumber:
          type: "integer"
          description: "Geniş alan ağlarının gerişlerinin anumarası."
        superPortNumber:
          type: "integer"
          description: "Geniş alan ağlarının hedef küme ile kuracağı bağlantının numarası\
            ."
        targetClusterName:
          type: "string"
          description: "Geniş alan ağlarının bağlı olduğu hedef küme adı."
        targetPortNumber:
          type: "integer"
          description: "Geniş alan ağlarının bağlı olduğu hedef küme port numarası\
            ."
        targetClusterId:
          type: "integer"
          description: "Geniş alan ağlarının bağlı olduğu hedef küme idsi."
        explanation:
          type: "string"
          description: "Geniş alan ağlarının açıklaması."
        delay:
          type: "string"
          description: "Geniş alan ağlarında giriş üzerinden geçen paketlerin gecikme\
            \ süresi."
        jitter:
          type: "string"
          description: "Geniş alan ağlarında giriş üzerinden geçen paketlerin sapma\
            \ oranı."
        miss:
          type: "string"
          description: "Geniş alan ağlarında giriş üzerinden kaçırılan paket oranı\
            ."
        status:
          description: "Geniş alan ağlarınında bağlantının durumu."
          $ref: "#/definitions/WAN_PORT_INFO_STATUS"
        linkSpeed:
          type: "integer"
          format: "int64"
          description: "Geniş alan ağlarının bağlantının hızı."
        linkType:
          description: "Geniş alan ağlarınında bağlantı linkinin tipi."
          $ref: "#/definitions/WAN_PORT_TYPE"
        speedUnit:
          description: "Geniş alan ağlarınında hız tipi."
          $ref: "#/definitions/BW_UNIT"
    description: "Geniş alan ağlarının gerişlerinin bilgi veri yapısı."
  WanPortInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Geniş alan ağlarının gerişlerinin bilgi profillerinin listesi."
          items:
            $ref: "#/definitions/WanPortInfoDTO"
    description: "Geniş alan ağlarının gerişlerinin bilgi profillerinin bulundugu\
      \ veri modeli."
  WanMvtnInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Sanal ağ ismi"
        wanMvtnId:
          type: "integer"
          description: "Geniş alan ağına ait sanal ağın idsi"
        topoInfo:
          description: "Topoloji detaylarının bulunduğu veri yapısı."
          $ref: "#/definitions/TopologyInfoDTO"
        lanMvtnInfos:
          type: "array"
          description: "Geniş alan sanal ağı için seçilecek/seçilmiş kümelerin detayları"
          items:
            $ref: "#/definitions/LanMvtnInfoDTO"
    description: "Geniş alan sanal ağ bilgisini tanımlayan veri modeli."
  LanMvtnInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        domainId:
          type: "integer"
          description: "Yerel sanal ağ kümesinin idsi"
        domainName:
          type: "string"
          description: "Yerel sanal ağ kümesinin adı"
        isSelected:
          type: "boolean"
          description: "Küme seçili mi bilgisi."
          default: false
        wanMvtnId:
          type: "integer"
          description: "Bağlı olduğu geniş alan ağına ait sanal ağın idsi"
        mvtnStatus:
          description: "Sanal ağın durum bilgisi."
          $ref: "#/definitions/MVTN_STATUS"
    description: "Yerel sanal ağ bilgilerini taşıyan veri modeli."
  WanMvtnInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Geniş alan sanal ağlarının bilgilerinin listesi."
          items:
            $ref: "#/definitions/WanMvtnInfoDTO"
        lanMvtnInfos:
          type: "array"
          description: "Geniş alan sanal ağı için tüm kümelerin detayları"
          items:
            $ref: "#/definitions/LanMvtnInfoDTO"
    description: "Geniş alan sanal ağlarının bilgilerinin bulundugu veri modeli."
  WanAlarmInfoListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      properties:
        list:
          type: "array"
          description: "Geniş alan ağlarının alarm bilgilerinin listesi."
          items:
            $ref: "#/definitions/WanAlarmInfoDTO"
    description: "Local topolojilerin alarm bilgilerinin saklandığı veri modeli."
  WanAlarmInfoDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        domainId:
          type: "integer"
          description: "Yerel sanal ağ kümesinin idsi"
        time:
          type: "string"
          format: "date-time"
          description: "İstek ve cevabın oluştuğu tarih-saat bilgisi."
        maxSeverity:
          type: "string"
          description: "Alarmların maksimum uyarı düzeyi."
        alarmCounts:
          type: "integer"
          description: "Yerel sanal ağ kümesinin idsi"
        activeAlarmCountMap:
          type: "object"
          additionalProperties:
            type: "integer"
        activeEventCountMap:
          type: "object"
          additionalProperties:
            type: "integer"
    description: "Local topolojilerin alarm bilgilerinin saklandığı veri modeli."
  WanPortInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanPortInfoDTO"
    description: "Geniş alan ağ verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  WanPortInfoDeleteRequest:
    allOf:
    - $ref: "#/definitions/GenericDeleteRequest"
    - type: "object"
    description: "Geniş alan ağ verilerinin silme işlemlerinin sunucuya iletilmesi\
      \ için kullanılan veri yapısı."
  WanPortInfoListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
    description: "Geniş alan ağ verilerinin listelenmesi için kullanılan veri yapı\
      sı."
  WanMvtnInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanMvtnInfoDTO"
    description: "Geniş alan sanal ağı verilerinin sunucuya iletilmesi için kullanı\
      lan veri yapısı."
  WanAlarmInfoRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanMvtnInfoDTO"
    description: "Geniş alan alarm verilerinin sunucuya iletilmesi için kullanılan\
      \ veri yapısı."
  WanAlarmInfoListRequest:
    allOf:
    - $ref: "#/definitions/GenericListRequest"
    - type: "object"
    description: "Geniş alan ağ alarmlarının listelenmesi için kullanılan veri yapı\
      sı."
  WanPortInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanPortInfoDTO"
    description: "Geniş alan ağlarının bilgilerinin istek işleminin cevap veri yapı\
      sı."
  WanPortInfoListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanPortInfoListDTO"
    description: "Geniş alan ağlarının gerişlerinin bilgi işleminin cevap veri yapı\
      sı."
  WanMvtnInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanMvtnInfoDTO"
    description: "Geniş alan sanal ağlarının bilgilerinin istek işleminin cevap veri\
      \ yapısı."
  WanMvtnInfoListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanMvtnInfoListDTO"
    description: "Geniş alan ağlarının gerişlerinin bilgi işleminin cevap veri yapı\
      sı."
  WanAlarmInfoResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanAlarmInfoDTO"
    description: "Geniş alan alarm bilgilerinin istek işleminin cevap veri yapısı."
  WanAlarmInfoListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanAlarmInfoListDTO"
    description: "Geniş alan ağlarının alarm listesini cevaplayan veri yapısı."
  WAN_PORT_INFO_STATUS:
    type: "string"
    title: "WAN_PORT_INFO_STATUS"
    description: "Geniş alan ağlarının bağlantı durumunu belirten ENUM değeridir.\n\
      Değerler şunlardır;\n\n| Adı       | Açıklama                    |\n|:----------|:----------------------------|\n\
      | UP        | Geniş Alan Ağı Bağlı        |\n| DOWN      | Geniş Alan Ağı Bağ\
      lı Değil  |\n| DISABLED  | Geniş Alan Ağı Engelli      |\n"
    enum:
    - "UP"
    - "DOWN"
    - "DISABLED"
    default: "DOWN"
  WAN_PORT_TYPE:
    type: "string"
    title: "WAN_PORT_TYPE"
    description: "Geniş alan ağlarının bağlantı tipini belirten ENUM değeridir.\n\
      Değerler şunlardır;\n\n| Adı       | Açıklama                    |\n|:----------|:----------------------------|\n\
      | FIBER     | Fiber Kablo                 |\n| COPPER    | Bakır Kablo     \
      \            |\n| RADIO     | Radyo Dalgası               |\n| ENCRYPTED | Ş\
      ifreli                     |\n"
    enum:
    - "FIBER"
    - "COPPER"
    - "RADIO"
    - "ENCRYPTED"
    default: "FIBER"
  IpLocationDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "ipList"
      - "name"
      properties:
        name:
          type: "string"
          description: "IP lokasyonun ismi"
        ipList:
          type: "array"
          description: "IP listesi"
          items:
            type: "string"
        latitude:
          type: "string"
          description: "Lokasyonun cografi enlem bilgisi"
        longitude:
          type: "string"
          description: "Lokasyonun cografi boylam bilgisi"
    description: "IP bazlı lokasyon bilgilerini tutar"
  IpLocationListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Lokasyon tabanlı IP istekleri veri yapısı."
          items:
            $ref: "#/definitions/IpLocationDTO"
    description: "Lokasyon tabanlı IP bilgilerini tutar"
  IpLocationRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/IpLocationDTO"
    description: "Lokasyon tabanlı IP isteğinin sunucuya iletilmesi için kullanılan\
      \ veri modelidir "
  IpLocationResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/IpLocationDTO"
    description: "Lokayon tabanlı IP bilgisinin sunucudan alınması için kullanılan\
      \ veri modelidir"
  IpLocationListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/IpLocationListDTO"
    description: "Lokasyon tabanlı IP bilgisinin sunucudan alınması için kullanılan\
      \ veri modelidir"
  ROUTER_TYPE:
    type: "string"
    title: "ROUTER TYPE"
    description: "Router komşuluk bilgisini tutar.\nDeğerler şunlardır;\n\n| Adı \
      \            | Açıklama                      |\n|:----------------|:------------------------------|\n\
      | SPEAKER         | BGP Speaker                   |\n| PEER            | BGP\
      \ Peer                      |\n| ROUTE REFLECTOR | BGP Route Reflector     \
      \      |\n"
    enum:
    - "SPEAKER"
    - "PEER"
    - "ROUTE_REFLECTOR"
    default: "SPEAKER"
  PEER_STATUS_TYPE:
    type: "string"
    title: "PEER STATUS TYPE"
    description: "Yönlendirici bağlantı durumu bilgisini tutar.\nDeğerler şunlardı\
      r;\n\n| Adı    | Açıklama                                  |\n|:-------|:------------------------------------------|\n\
      | ACTIVE | Eş yönelndirici ile bağlantı sağlanamış   |\n| PASSIVE| Eş yönelndirici\
      \ ile bağlantı sağlanamamış |\n"
    enum:
    - "ACTIVE"
    - "PASSIVE"
    default: "PASSIVE"
  SdnipRouteDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "annonced"
      - "bgpId"
      - "ipVersion"
      - "localPref"
      - "multiExitDisc"
      - "nextHop"
      - "origin"
      - "peer"
      - "prefix"
      properties:
        peer:
          $ref: "#/definitions/SdnipRouterDTO"
        ipVersion:
          description: "Rotanın öğrenildiği IP versiyon tipi"
          $ref: "#/definitions/IP_VERSION_TYPE"
        prefix:
          type: "string"
          description: "Rota bilgisi"
        nextHop:
          type: "string"
          description: "Sonraki hop"
        bgpId:
          type: "string"
          description: "Rotanın öğrenildiği rotalayıcı numarası"
        origin:
          type: "string"
          description: "Rotanın öğrenildiği protokol"
        asPath:
          type: "array"
          items:
            type: "integer"
            format: "int32"
            description: "Rotaya ulaşmak için geçilmesi gereken AS numaraları"
        localPref:
          type: "integer"
          format: "int64"
          description: "localPref"
        multiExitDisc:
          type: "integer"
          format: "int64"
          description: "multiExitDisc"
        annonced:
          type: "boolean"
          description: "Rota prognet tarafından anonce edilip edilmediği bilgisini\
            \ tutar"
    description: "BGP ile öğrenilmiş rota bilgilerini tutar"
  SdnipRouteListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Sdnip rotalarının bulunduğu listedir."
          items:
            $ref: "#/definitions/SdnipRouteDTO"
    description: "Sdnip rotalayıcılarla öğrenilmiş rota listesinin bulunduğu veri\
      \ yapısı."
  SdnipRouterDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "asNumber"
      - "ip"
      - "name"
      - "type"
      properties:
        sdnipRouterId:
          type: "integer"
          format: "int64"
          description: "Sdnip router numarası"
        asNumber:
          type: "integer"
          format: "int32"
          description: "Otonom sistem numarası"
        name:
          type: "string"
          description: "Sdnip router ismi"
        type:
          description: "Sdnip router tipi"
          $ref: "#/definitions/ROUTER_TYPE"
        ip:
          type: "string"
          description: "Rotalayıcı IP/MASK değeri. Örneğin: 10.10.0.3/24"
        mac:
          type: "string"
          description: "Rotalayıcı MAC değeri"
        vlanId:
          type: "string"
          description: "Rotalayıcı VLAN değeri"
        bgpPort:
          type: "integer"
          format: "int"
          description: "BGP rotalayıcı port numarası"
        bgpPassword:
          type: "string"
          description: "BGP rotalayıcı parolası"
        controlPlaneIp:
          type: "string"
          description: "BGP sözcüsü tipindeki router için kontrol düzlemi IP değeri"
        deviceId:
          type: "string"
          description: "Bağlı anahtarlayıcı numarası"
        port:
          type: "integer"
          format: "int32"
          description: "Bağlı anahtarlayıcı port numarası"
        neighbourList:
          type: "array"
          description: "komşu rotalayıcıların listesini verir."
          items:
            $ref: "#/definitions/SdnipRouterDTO"
    description: "BGP konuşabilme yeteneğine sahip rotalayıcı bilgileri tutar"
  SdnipRouterListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Sdnip rotalayıcılarının bulunduğu listedir."
          items:
            $ref: "#/definitions/SdnipRouterDTO"
    description: "Sdnip rotalayıcıların listesinin bulunduğu veri yapısı."
  NeighborRelationDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "peerList"
      - "speaker"
      properties:
        speaker:
          $ref: "#/definitions/SdnipRouterDTO"
        peerList:
          type: "array"
          description: "Yönlendirici komşularının bulunduğu listedir."
          items:
            $ref: "#/definitions/SdnipRouterDTO"
        connectRetry:
          type: "integer"
          format: "int64"
          description: "Yeniden bağlantı peryodu"
        holdTime:
          type: "integer"
          format: "int64"
          description: "Bağlı kalma süresi"
        keepaliveInterval:
          type: "integer"
          format: "int64"
          description: "Bağlantıyı canlı tutma süresi"
        minimumAdvertisementInterval:
          type: "integer"
          format: "int64"
          description: "Anons peryodu"
    description: "BGP komsuluk ilişkisini tutar"
  NeighborRelationListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "BGP komşuluk ilişkileri listesinin bulunduğu listedir."
          items:
            $ref: "#/definitions/NeighborRelationDTO"
    description: "BGP komşuluk ilişkileri listesinin bulunduğu veri yapısı."
  NeighborRelationStatusDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "peer"
      - "peerStatus"
      properties:
        peer:
          $ref: "#/definitions/SdnipRouterDTO"
        peerStatus:
          $ref: "#/definitions/PEER_STATUS_TYPE"
        description:
          type: "string"
          description: "Eş yönlendirici bağlantı durumu açıklaması"
    description: "BGP komsuluk ilişkisini tutar"
  NeighborRelationStatusListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Bir BGP yönlendiricinin komşuları ile bağlantı durumunun bulunduğ\
            u listedir."
          items:
            $ref: "#/definitions/NeighborRelationStatusDTO"
    description: "Bir BGP yönlendiricinin komşuları ile bağlantı durumunu tutan veri\
      \ yapısıdır."
  SdnipRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    description: "Prognet sdnip istekleri için kullanılır"
  SdnipRouteSaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "array"
          description: "Anons edilecek rotaların bulunduğu listedir."
          items:
            type: "string"
    description: "Rota anons etmek için için kullanılır"
  SdnipRouterSaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipRouterDTO"
    description: "Sdnip rotalayıcı ekleme ve güncelleme için kullanılır"
  NeighborRelationSaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NeighborRelationDTO"
    description: "Sdnip rotalayıcı ekleme ve güncelleme için kullanılır"
  SdnipResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    description: "Ekleme veya güncelleme işlemi yapılmış birimin numarasını tutar"
  SdnipASNumberResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          type: "integer"
          format: "int32"
          description: "Otomon sistem numarasıdır"
    description: "Otomon sistem numarasını sorgulamak için kullanılır"
  SdnipRouterResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipRouterDTO"
    description: "Yönlendirici bilgisini tutar."
  SdnipRouterListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipRouterListDTO"
    description: "Sdnip rotalayıcı arama sonuçlarını verir"
  SdnipRouteListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipRouteListDTO"
    description: "Rota arama sonuçlarını verir"
  NeighborRelationResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NeighborRelationDTO"
    description: "Yönlendirici komşuluk bilgisini verir"
  NeighborRelationListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NeighborRelationListDTO"
    description: "Yönlendirici komşuluk bilgisi listesini verir"
  NeighborRelationStatusListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/NeighborRelationStatusListDTO"
    description: "Yönlendirici komşu arasındaki bağlantı durumu listesini verir"
  SfcRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SfcDTO"
    description: "Sfc için kullanılacak istek veri modelidir."
  VnfrRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VnfrDTO"
    description: "Vnfr için kullanılacak istek veri modelidir."
  SfcTypeListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SfcTypeListDTO"
    description: "Sfc için kullanılacak cevap veri modelidir."
  VnfdListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VnfdListDTO"
    description: "Vnfd listeleme olarak kullanılan veri yapısı."
  VnfrListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VnfrListDTO"
    description: "Vnfr listeleme olarak kullanılan veri yapısı."
  SfcListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SfcListDTO"
    description: "Sfc listeleme olarak kullanılan veri yapısı."
  SfcResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SfcDTO"
    description: "Sfc olarak kullanılan veri yapısı."
  VnfrResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/VnfrDTO"
    description: "Vnfr olarak kullanılan veri yapısı."
  SfcTypeDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        sfcTypeId:
          type: "integer"
          format: "int32"
          description: "Sfc tip id'si"
        sfcTypeName:
          type: "string"
          description: "Sfc tip adı."
        vnfdList:
          type: "array"
          description: "Sıralı şekilde yazılmış vnfd tanım listesi"
          items:
            $ref: "#/definitions/VnfdDTO"
    description: "Sfc tipini tanımlayan veri modeli."
  SfcTypeListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Sfc tiplerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/SfcTypeDTO"
    description: "Sfc tip listesinin bulunduğu veri yapısı."
  VnfdDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        vnfdId:
          type: "string"
          description: "Vnfd id'si"
        vnfdName:
          type: "string"
          description: "Vnfd adı."
        vnfdType:
          description: "Vnfd tipi"
          $ref: "#/definitions/VNFD_TYPE"
        metaData:
          type: "string"
          description: "Vnfd metadata."
    description: "Vnfd veri modeli."
  VnfdListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Vnfd tiplerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VnfdDTO"
    description: "Vnfd tip listesinin bulunduğu veri yapısı."
  VnfrDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        vnfdId:
          type: "string"
          description: "Vnfd id'si"
        vnfdName:
          type: "string"
          description: "Vnfd adı."
        vnfrId:
          type: "string"
          description: "Vnfr id'si"
        vnfrName:
          type: "string"
          description: "Vnfr adı."
        sfcId:
          type: "integer"
          format: "int64"
          description: "sfc id'si."
        vnfrHostId:
          type: "string"
          description: "Vnfr host id'si."
        inPort:
          type: "integer"
          format: "int32"
          description: "vnfr host in port numarası."
        outPort:
          type: "integer"
          format: "int32"
          description: "vnfr host out port numarası."
        vnfrStatus:
          description: "Vnfr status bilgisi"
          $ref: "#/definitions/VNFR_STATUS"
        metaData:
          type: "string"
          description: "Vnfr metadata."
        vnfrType:
          description: "Vnfr type bilgisi."
          $ref: "#/definitions/VNFR_TYPE"
    description: "Vnfr veri modeli."
  VnfrListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Vnfr tiplerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VnfrDTO"
    description: "Vnfr tip listesinin bulunduğu veri yapısı."
  SfcDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        sfcId:
          type: "integer"
          format: "int64"
          description: "Sfc id'si."
        sfcName:
          type: "string"
          description: "Sfc adı."
        sfcTypeId:
          type: "integer"
          format: "int32"
          description: "sfc tip id'si."
        sfcTypeName:
          type: "string"
          description: "Sfc type adı."
        sfcStatus:
          description: "Sfc status bilgisi"
          $ref: "#/definitions/SFC_STATUS"
        vnfrList:
          type: "array"
          description: "Vnfr tiplerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VnfrDTO"
    description: "Sfc veri modeli."
  SfcListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Sfc'lerin bulunduğu listedir."
          items:
            $ref: "#/definitions/SfcDTO"
    description: "Sfc listesinin bulunduğu veri yapısı."
  VNFR_STATUS:
    type: "string"
    title: "VNFR_STATUS"
    description: "Vnfr durum bilgisi"
    enum:
    - "ACTIVE"
    - "FAILED"
    - "INACTIVE"
    default: "INACTIVE"
  SFC_STATUS:
    type: "string"
    title: "SFC_STATUS"
    description: "Sfc durum bilgisi"
    enum:
    - "ACTIVE"
    - "FAILED"
    - "INACTIVE"
    default: "INACTIVE"
  VNFD_TYPE:
    type: "string"
    title: "VNFD_TYPE"
    description: "Vnfd tip bilgisi"
    enum:
    - "FIREWALL"
    - "DPI"
    - "LOAD_BALANCER"
    - "PF_SENSE"
    default: "FIREWALL"
  VNFR_TYPE:
    type: "string"
    title: "VNFR_TYPE"
    description: "Vnfr type bilgisi"
    enum:
    - "PHYSICAL"
    - "VIRTUAL"
    default: "PHYSICAL"
  WanDomainDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "domainId"
      - "name"
      properties:
        domainId:
          type: "string"
          description: "Alan ID değeri"
        name:
          type: "string"
          description: "Alan adı"
        status:
          description: "Alan durumu"
          $ref: "#/definitions/WAN_DOMAIN_STATUS"
        ip:
          type: "string"
          description: "yönetim adresi"
        centerAddress:
          type: "string"
          description: "merkezi kontrolcü yönetim adresi"
    description: "Alan tanımı bilgisinin bulunduğu veri yapısı."
  MultipleWanDomainDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Alan tanımı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/WanDomainDTO"
    description: "Alan tanımı listesinin bulunduğu veri yapısı."
  WanDomainListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Alan tanımı veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/WanDomainDTO"
    description: "Alan tanımı listesinin bulunduğu veri yapısı."
  WanDomainRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanDomainDTO"
    description: "Alan tanımı verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  MultipleWanDomainListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/MultipleWanDomainDTO"
    description: "Alan tanımı verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  WanDomainListRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/WanDomainListDTO"
    description: "Alan tanımı verilerinin sunucuya iletilmesi için kullanılan veri\
      \ yapısı."
  WanDomainResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/WanDomainDTO"
    description: "Alan tanımı detaylarının dönüldüğü veri yapısı."
  WanDomainListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/WanDomainListDTO"
    description: "Alan tanımı detaylarının dönüldüğü veri yapısı."
  WAN_DOMAIN_STATUS:
    type: "string"
    title: "WAN_DOMAIN_STATUS"
    description: "Alan durumunu belirten ENUM değeri.\nDeğerler şunlardır;\n\n| Adı\
      \      | Açıklama                     |\n|:---------|:-----------------------------|\n\
      | FAILED   | Alan ile iletişim başarısız. |\n| ACTIVE   | Alan ile iletişim\
      \ aktif.     |\n| INACTIVE | Alan ile iletişim pasif.     |\n"
    enum:
    - "FAILED"
    - "ACTIVE"
    - "INACTIVE"
    default: "ACTIVE"
  EmergencyPolicyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        name:
          type: "string"
          description: "Politikaya ait profile ismi."
        deviceLossRatio:
          type: "number"
          format: "double"
          description: "Cihazın kayıp oranı miktarı"
        trafficThreshold:
          type: "number"
          format: "double"
          description: "Cihazın kayıp oranı miktarı"
        disableDomain:
          type: "boolean"
          description: "Düşük akış tanımı bulunan domaini disable et"
          default: false
        emergencyPolicyId:
          type: "integer"
          format: "int64"
          description: "Acil durum politika idsi"
        vnfToStart:
          type: "array"
          description: "Vnfd veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VnfdDTO"
        vnfToShutdown:
          type: "array"
          description: "Vnfd veri transfer modellerinin bulunduğu listedir."
          items:
            $ref: "#/definitions/VnfdDTO"
    description: "Acil durum politikası bilgisinin bulunduğu veri yapısı.\""
  EmergencyPolicyListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Acil durum politikası listesinin bulunduğu veri yapısı."
          items:
            $ref: "#/definitions/EmergencyPolicyDTO"
    description: "Acil durum politikası listesinin bulunduğu veri yapısı."
  EmergencyPolicyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/EmergencyPolicyListDTO"
    description: "Acil durum politikası listeleme işleminin cevap veri yapısı."
  EmergencyPolicyRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/EmergencyPolicyDTO"
    description: "Acil durum politikası verilerinin sunucuya iletilmesi için kullanı\
      lan veri yapısı."
  EmergencyPolicyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      properties:
        data:
          $ref: "#/definitions/EmergencyPolicyDTO"
    description: "Acil durum politikası detaylarının dönüldüğü veri yapısı."
  SDNIP_DEFINED_SET_TYPE:
    type: "string"
    title: "SDNIP DEFINED SET TYPE"
    description: "Set içindeki elemanların tipini tanımlar.\nDeğerler şunlardır;\n\
      \n| Adı       | Açıklama                      |\n|:----------|:------------------------------|\n\
      | AS_PATH   | Set type for AS path          |\n| NEIGHBOR  | Set type for neighbor\
      \         |\n| PREFIX    | Set type for prefix           |\n"
    enum:
    - "AS_PATH"
    - "NEIGHBOR"
    - "PREFIX"
    default: "PREFIX"
  SDNIP_MATCH_TYPE:
    type: "string"
    title: "SDNIP MATCH TYPE"
    description: "Eşleşme durumunu tanımlar.\nDeğerler şunlardır;\n\n| Adı    | Aç\
      ıklama       |\n|:-------|:---------------|\n| ANY    | Herhangi biri  |\n|\
      \ ALL    | Hepsi          |\n| INVERT | Ters           |\n"
    enum:
    - "ANY"
    - "ALL"
    - "INVERT"
    default: "ANY"
  SDNIP_ROUTE_ACTION:
    type: "string"
    title: "SDNIP ROUTE ACTION"
    description: "Eşleşme durumunda ne yapılacağını tanımlar.\nDeğerler şunlardır;\n\
      \n| Adı       | Açıklama  |\n|:----------|:----------|\n| ACCEPT    | Kabul\
      \ et  |\n| REJECT    | Reddet    |\n"
    enum:
    - "ACCEPT"
    - "REJECT"
    default: "ACCEPT"
  SDNIP_RESOURCE_TYPE:
    type: "string"
    title: "SDNIP RESOURCE ACTION"
    description: "Politikaların etkinlik alanlarını tanımlar.\nDeğerler şunlardır;\n\
      \n| Adı       | Açıklama    |\n|:----------|:------------|\n| GLOBAL    | Genel\
      \ tanım |\n"
    enum:
    - "GLOBAL"
    default: "GLOBAL"
  SDNIP_POLICY_TYPE:
    type: "string"
    title: "SDNIP POLICY TYPE"
    description: "Politikaların etkinlik yönünü tanımlar.\nDeğerler şunlardır;\n\n\
      | Adı       | Açıklama   |\n|:----------|:-----------|\n| IMPORT    | İçe doğ\
      ru  |\n| EXPORT    | Dışa doğru |\n"
    enum:
    - "IMPORT"
    - "EXPORT"
    default: "IMPORT"
  SdnipSetItemDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "item"
      properties:
        item:
          type: "string"
          description: "Eşleşecek eleman"
    description: "Eşleşecek eleman bilgilerini tutar"
  SdnipSetItemListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Eşleşecek eleman listesi"
          items:
            $ref: "#/definitions/SdnipSetItemDTO"
    description: "Eşleşecek eleman listesinin bulunduğu veri yapısı."
  SdnipPrefixDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "ipPrefix"
      - "maxMaskLength"
      - "minMaskLength"
      properties:
        ipPrefix:
          type: "string"
          description: "Rota bilgisi"
        minMaskLength:
          type: "integer"
          format: "int32"
          description: "mask en küçük değeri"
        maxMaskLength:
          type: "integer"
          format: "int32"
          description: "mask en büyük değeri"
    description: "Eşleşme rota bilgilerini tutar"
  SdnipPrefixListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Eşleşme rota listesi"
          items:
            $ref: "#/definitions/SdnipPrefixDTO"
    description: "Eşleşme rota listesinin bulunduğu veri yapısı."
  SdnipDefinedSetDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "definedSetType"
      - "name"
      properties:
        name:
          type: "string"
          description: "Sdnip defined set ismi"
        definedSetType:
          description: "Sdnip defined set tipi"
          $ref: "#/definitions/SDNIP_DEFINED_SET_TYPE"
        list:
          description: "Eşleşecek elemanların bulunduğu listedir."
          $ref: "#/definitions/SdnipSetItemListDTO"
        prefixList:
          description: "Eşleşme rotalarının bulunduğu listedir."
          $ref: "#/definitions/SdnipPrefixListDTO"
    description: "Eşleşme listesinin bulunduğu veri yapısı."
  SdnipDefinedSetListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Eşleşme listesi"
          items:
            $ref: "#/definitions/SdnipDefinedSetDTO"
    description: "Eşleşme listesinin bulunduğu veri yapısı."
  SdnipMatchSetDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "definedSet"
      - "matchType"
      properties:
        definedSet:
          description: "Eşleşme listesi"
          $ref: "#/definitions/SdnipDefinedSetDTO"
        matchType:
          description: "Eşleşme tipi"
          $ref: "#/definitions/SDNIP_MATCH_TYPE"
    description: "Eşleşme listesi için eşleşme tipini tutan modeldir."
  SdnipActionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "routeAction"
      properties:
        routeAction:
          description: "Giriş-çıkış izni"
          $ref: "#/definitions/SDNIP_ROUTE_ACTION"
    description: "Eşleşme gerçekleşmesi durumunda yapılacak işlemleri tanımlar."
  SdnipConditionDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      properties:
        prefixMatchSet:
          description: "Prefix listesi ve eşleşme durumu"
          $ref: "#/definitions/SdnipMatchSetDTO"
        asPathMatchSet:
          description: "Otomon Sistem Numarası listesi ve eşleşme durumu"
          $ref: "#/definitions/SdnipMatchSetDTO"
        neighborMatchSet:
          description: "Komşu listesi ve eşleşme durumu"
          $ref: "#/definitions/SdnipMatchSetDTO"
    description: "Farklı eşleşme tipindeki listelerin bulunduğu modeldir."
  SdnipStatementDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "action"
      - "condition"
      properties:
        name:
          type: "string"
          description: "Durum ismi"
        action:
          description: "durum için uygulanacak aksiyonu"
          $ref: "#/definitions/SdnipActionDTO"
        condition:
          description: "Durum"
          $ref: "#/definitions/SdnipConditionDTO"
    description: "Durum ve durum için uygulanacak aksiyonu belirten modeldir."
  SdnipStatementListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Durum tanımları listesidir"
          items:
            $ref: "#/definitions/SdnipStatementDTO"
    description: "Durum tanımları listesini tutan modeldir"
  SdnipPolicyDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "name"
      - "statementList"
      properties:
        name:
          type: "string"
          description: "Eşleşme politikası ismi"
        statementList:
          description: "Eşleşme durum tanımları listesi"
          $ref: "#/definitions/SdnipStatementListDTO"
    description: "Eşleşme politikaları belirten modeldir."
  SdnipPolicyListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Eşleşme politika listesi"
          items:
            $ref: "#/definitions/SdnipPolicyDTO"
    description: "Eşleşme politikaları listesini tutan modeldir."
  SdnipPolicyAssignmentDTO:
    allOf:
    - $ref: "#/definitions/BaseDTO"
    - type: "object"
      required:
      - "defaultRouteAction"
      - "policyList"
      - "policyType"
      - "resourceType"
      properties:
        resourceType:
          description: "Politikaların etkinlik alanı"
          $ref: "#/definitions/SDNIP_RESOURCE_TYPE"
        policyType:
          description: "Politika etkinlik yönünü"
          $ref: "#/definitions/SDNIP_POLICY_TYPE"
        policyList:
          description: "politika listesi"
          $ref: "#/definitions/SdnipPolicyListDTO"
        defaultRouteAction:
          description: "Politika listesine eşleşme olmadığında uygulanacak aksiyon"
          $ref: "#/definitions/SDNIP_ROUTE_ACTION"
    description: "Politika tipine göre uygulanacak eşleşme politikalarını belirten\
      \ modeldir."
  SdnipPolicyAssignmentListDTO:
    allOf:
    - $ref: "#/definitions/BaseListDTO"
    - type: "object"
      required:
      - "list"
      properties:
        list:
          type: "array"
          description: "Politika tipine göre politika listesi"
          items:
            $ref: "#/definitions/SdnipPolicyAssignmentDTO"
    description: "Politika tipine göre politika listesini tutan modeldir."
  SdnipDefinedSetSaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipDefinedSetDTO"
    description: "Sdnip rotalayıcı ekleme ve güncelleme için kullanılır"
  SdnipPolicySaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyDTO"
    description: "Sdnip politika ekleme ve güncelleme için kullanılır"
  SdnipPolicyAssignmentSaveRequest:
    allOf:
    - $ref: "#/definitions/GenericRequest"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyAssignmentDTO"
    description: "Politika tipine göre politika ekleme ve güncelleme için kullanı\
      lır"
  SdnipPolicyResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyDTO"
    description: "Sdnip politika bilgisini tutar."
  SdnipPolicyListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyListDTO"
    description: "Sdnip politika arama sonuçlarını verir"
  SdnipDefinedSetResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipDefinedSetDTO"
    description: "Sdnip liste tanımı bilgisini tutar."
  SdnipDefinedSetListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipDefinedSetListDTO"
    description: "Sdnip liste tanımı arama sonuçlarını verir"
  SdnipPolicyAssignmentResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyAssignmentDTO"
    description: "Politika tipine göre politika tanımı bilgisini tutar."
  SdnipPolicyAssignmentListResponse:
    allOf:
    - $ref: "#/definitions/GenericResponse"
    - type: "object"
      required:
      - "data"
      properties:
        data:
          $ref: "#/definitions/SdnipPolicyAssignmentListDTO"
    description: "Politika tipine göre politika tanımı arama sonuçlarını verir"
responses:
  ACCESS_ERRORS:
    description: "Erişim Hataları (ACCESS_DENIED , ACCESS_LIMITED)"
    schema:
      $ref: "#/definitions/GenericResponse"
  ERRORS:
    description: "Uygulama Hata/Uyarıları (ERROR , NOT_MODIFIED)"
    schema:
      $ref: "#/definitions/GenericResponse"
  SERVER_ERRORS:
    description: "Yazılım Hatası (SERVER_ERROR , NOT_IMPLEMENTED , DEPRECATED)"
    schema:
      $ref: "#/definitions/GenericResponse"
  SUCCESS:
    description: "Başarılı işlemler (SUCCESS)"
    schema:
      $ref: "#/definitions/GenericResponse"

